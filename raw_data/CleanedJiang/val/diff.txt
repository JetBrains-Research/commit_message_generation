codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ DelegatingDecompressorFrameListener . java \n - / / header frames . . . just remove the content - length header \n + / / header frames just remove the content - length header . \n
codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ Http2MultiplexHandler . java \n - \n
docs \ reference \ ccr \ getting - started . asciidoc \n + TIP : If you want to replicate data across clusters in the cloud , you can \n + link : { cloud } / ec - enable - ccs . html [ configure remote clusters on { ess } ] . Then , you \n + can < < modules - cross - cluster - search , search across clusters > > and set up { ccr } . \n + \n docs \ reference \ search \ search - your - data \ search - across - clusters . asciidoc \n + TIP : If you want to search across clusters in the cloud , you can \n + link : { cloud } / ec - enable - ccs . html [ configure remote clusters on { ess } ] . Then , you \n + can search across clusters and < < ccr - getting - started , set up { ccr } > > . \n + \n
docs \ reference \ glossary . asciidoc \n - A < < glossary - data - tier , data tier > > that contains nodes that hold time series data \n + A < < glossary - data - tier , data tier > > that contains nodes that hold time series data \n - A < < glossary - data - tier , data tier > > that contains nodes that handle the indexing and query load for \n + A < < glossary - data - tier , data tier > > that contains nodes that handle the indexing and query load for \n - An index that is excluded by default when you access indices using a wildcard expression . \n + An index that is excluded by default when you access indices using a wildcard expression . \n - A < < glossary - data - tier , data tier > > that contains nodes that handle the indexing load \n - for time series data such as logs or metrics and hold your most recent , \n + A < < glossary - data - tier , data tier > > that contains nodes that handle the indexing load \n + for time series data such as logs or metrics and hold your most recent , \n - - \n + [ [ glossary - runtime - fields ] ] runtime field : : \n + / / tag : : runtime - fields - def [ ] \n + A runtime field is a field that is evaluated at query time . You access runtime \n + fields from the search API like any other field , and { es } sees runtime fields \n + no differently . You can define runtime fields in the \n + { ref } / runtime - mapping - fields . html [ index mapping ] or in the \n + { ref } / runtime - search - request . html [ search request ] . \n + / / end : : runtime - fields - def [ ] \n + \n - An index that contains configuration information or other data used internally by the system , \n - such as the ` . security ` index . \n + An index that contains configuration information or other data used internally by the system , \n + such as the ` . security ` index . \n - A < < glossary - data - tier , data tier > > that contains nodes that hold time series data \n + A < < glossary - data - tier , data tier > > that contains nodes that hold time series data \n
mockwebserver \ src \ main \ java \ com \ squareup \ okhttp \ mockwebserver \ MockWebServer . java \n - | | request . startsWith ( " DELETE " ) \n - & & ! request . startsWith ( " PATCH " ) ) { \n + & & ! request . startsWith ( " PATCH " ) \n + & & ! request . startsWith ( " DELETE " ) ) { / / Permitted as spec is ambiguous . \n okhttp - tests \ src \ test \ java \ com \ squareup \ okhttp \ internal \ http \ URLConnectionTest . java \n - server . enqueue ( new MockResponse ( ) . setBody ( new byte [ ] { - 2 , - 1 } ) ) ; \n + server . enqueue ( new MockResponse ( ) . setBody ( new byte [ ] { - 2 , - 1 } ) ) ; \n - assertNull ( connection . getContent ( new Class [ ] { getClass ( ) } ) ) ; \n + assertNull ( connection . getContent ( new Class [ ] { getClass ( ) } ) ) ; \n + / * * \n + * The RFC is unclear in this regard as it only specifies that this should \n + * invalidate the cache entry ( if any ) . \n + * / \n + @ Test public void bodyPermittedOnDelete ( ) throws Exception { \n + server . enqueue ( new MockResponse ( ) ) ; \n + server . play ( ) ; \n + \n + HttpURLConnection connection = client . open ( server . getUrl ( " / " ) ) ; \n + connection . setRequestMethod ( " DELETE " ) ; \n + connection . setDoOutput ( true ) ; \n + connection . getOutputStream ( ) . write ( " BODY " . getBytes ( UTF _ 8 ) ) ; \n + assertEquals ( 200 , connection . getResponseCode ( ) ) ; \n + \n + RecordedRequest request = server . takeRequest ( ) ; \n + assertEquals ( " DELETE " , request . getMethod ( ) ) ; \n + assertEquals ( " BODY " , new String ( request . getBody ( ) , UTF _ 8 ) ) ; \n + } \n + \n okhttp \ src \ main \ java \ com \ squareup \ okhttp \ internal \ http \ HttpMethod . java \n - | | method . equals ( " PATCH " ) ; \n + | | method . equals ( " PATCH " ) \n + | | method . equals ( " DELETE " ) ; / / Permitted as spec is ambiguous . \n
mockwebserver \ src \ main \ java \ com \ squareup \ okhttp \ mockwebserver \ MockWebServer . java \n + import okio . OkBuffer ; \n - byte [ ] body = response . getBody ( ) ; \n - boolean closeStreamAfterHeaders = body . length > 0 | | ! response . getPushPromises ( ) . isEmpty ( ) ; \n + OkBuffer body = new OkBuffer ( ) ; \n + if ( response . getBody ( ) ! = null ) { \n + body . write ( response . getBody ( ) ) ; \n + } \n + boolean closeStreamAfterHeaders = body . size ( ) > 0 | | ! response . getPushPromises ( ) . isEmpty ( ) ; \n - if ( body . length > 0 ) { \n + if ( body . size ( ) > 0 ) { \n - sink . write ( body ) ; \n + if ( response . getThrottleBytesPerPeriod ( ) = = Integer . MAX _ VALUE ) { \n + sink . write ( body , body . size ( ) ) ; \n + sink . flush ( ) ; \n + } else { \n + while ( body . size ( ) > 0 ) { \n + long toWrite = Math . min ( body . size ( ) , response . getThrottleBytesPerPeriod ( ) ) ; \n + sink . write ( body , toWrite ) ; \n + sink . flush ( ) ; \n + try { \n + long delayMs = response . getThrottleUnit ( ) . toMillis ( response . getThrottlePeriod ( ) ) ; \n + if ( delayMs ! = 0 ) Thread . sleep ( delayMs ) ; \n + } catch ( InterruptedException e ) { \n + throw new AssertionError ( ) ; \n + } \n + } \n + } \n
core \ java \ android \ view \ OWNERS \n + per - file View . java = file : / core / java / android / view / inputmethod / OWNERS \n + per - file ViewRootImpl . java = file : / core / java / android / view / inputmethod / OWNERS \n
core \ api \ current . txt \n - method @ Nullable public java . util . List < android . os . ParcelUuid > getServiceSolicitationUuids ( ) ; \n + method @ NonNull public java . util . List < android . os . ParcelUuid > getServiceSolicitationUuids ( ) ; \n core \ java \ android \ bluetooth \ le \ AdvertiseData . java \n - @ Nullable \n + @ NonNull \n - @ Nullable \n + @ NonNull \n - @ Nullable \n + @ NonNull \n
code \ src \ test \ com \ lmax \ disruptor \ dsl \ DisruptorTest . java \n - / / @ Test : TODO Why does this check the reference ? \n + @ Test \n - final DelayedEventHandler eventHandler = createDelayedEventHandler ( ) ; \n - \n - final ExceptionThrowingEventHandler eventHandler2 = new ExceptionThrowingEventHandler ( testException ) ; \n - disruptor . handleEventsWith ( eventHandler ) . then ( eventHandler2 ) ; \n - \n - publishEvent ( ) ; \n + final ExceptionThrowingEventHandler eventHandler = new ExceptionThrowingEventHandler ( testException ) ; \n + disruptor . handleEventsWith ( eventHandler ) ; \n - disruptor . handleExceptionsFor ( eventHandler2 ) . with ( exceptionHandler ) ; \n - eventHandler . processEvent ( ) ; \n + disruptor . handleExceptionsFor ( eventHandler ) . with ( exceptionHandler ) ; \n + \n + publishEvent ( ) ; \n
code \ src \ main \ com \ lmax \ disruptor \ dsl \ Disruptor . java \n + / * * \n + * Calls { @ link com . lmax . disruptor . EventProcessor # halt ( ) } on all of the event processors created via this disruptor . \n + * / \n + public void halt ( ) \n + { \n + for ( EventProcessorInfo eventprocessorInfo : eventProcessorRepository ) \n + { \n + eventprocessorInfo . getEventProcessor ( ) . halt ( ) ; \n + } \n + } \n + \n + / * * \n + * Waits until all events currently in the disruptor have been processed by all event processors \n + * and then halts the processors . It is critical that publishing to the ring buffer has stopped \n + * before calling this method , otherwise it may never return . \n + * \n + * < p > This method will not shutdown the executor , nor will it await the final termination of the \n + * processor threads . < / p > \n + * / \n + public void shutdown ( ) \n + { \n + while ( hasBacklog ( ) ) \n + { \n + / / Busy spin \n + } \n + halt ( ) ; \n + } \n + \n - / * * \n - * Calls { @ link com . lmax . disruptor . EventProcessor # halt ( ) } on all of the event processors created via this disruptor . \n - * / \n - public void halt ( ) \n + private boolean hasBacklog ( ) \n - for ( EventProcessorInfo eventprocessorInfo : eventProcessorRepository ) \n + final long cursor = ringBuffer . getCursor ( ) ; \n + for ( EventProcessor consumer : eventProcessorRepository . getLastEventProcessorsInChain ( ) ) \n - eventprocessorInfo . getEventProcessor ( ) . halt ( ) ; \n + if ( cursor ! = consumer . getSequence ( ) . get ( ) ) \n + { \n + return true ; \n + } \n + return false ; \n - @ SuppressWarnings ( value = " unchecked " ) \n + @ SuppressWarnings ( value = " unchecked " ) \n
core \ src \ main \ java \ com \ afollestad \ materialdialogs \ MaterialDialog . java \n - recyclerView . setLayoutManager ( builder . layoutManager ) ; \n + if ( recyclerView . getLayoutManager ( ) = = null ) { \n + recyclerView . setLayoutManager ( builder . layoutManager ) ; \n + } \n
core \ src \ main \ res \ layout \ md _ dialog _ basic _ check . xml \n - android : layout _ width = " match _ parent " \n + android : layout _ width = " wrap _ content " \n + android : layout _ gravity = " start " \n + android : gravity = " start | center _ vertical " \n core \ src \ main \ res \ layout \ md _ dialog _ input _ check . xml \n - android : layout _ width = " match _ parent " \n + android : layout _ width = " wrap _ content " \n + android : layout _ gravity = " start | center _ vertical " \n + android : gravity = " start " \n core \ src \ main \ res \ layout \ md _ dialog _ list _ check . xml \n - android : layout _ width = " match _ parent " \n + android : layout _ width = " wrap _ content " \n + android : layout _ gravity = " start " \n + android : gravity = " start | center _ vertical " \n
core \ src \ main \ java \ com \ afollestad \ materialdialogs \ message \ DialogMessageSettings . kt \n + import com . afollestad . materialdialogs . R \n + import com . afollestad . materialdialogs . utils . MDUtil . resolveFloat \n + private var didSetLineSpacing : Boolean = false \n + didSetLineSpacing = true \n + if ( ! didSetLineSpacing ) { \n + lineSpacing ( \n + resolveFloat ( \n + context = dialog . windowContext , \n + attr = R . attr . md _ line _ spacing _ body , \n + defaultValue = 1 . 1f \n + ) \n + ) \n + } \n core \ src \ main \ java \ com \ afollestad \ materialdialogs \ utils \ MDUtil . kt \n - return ( 0 until attrs . size ) . map { index - > \n + return attrs . indices . map { index - > \n + @ RestrictTo ( LIBRARY _ GROUP ) fun resolveFloat ( \n + context : Context , \n + @ AttrRes attr : Int , \n + defaultValue : Float = 0f \n + ) : Float { \n + val a = context . theme . obtainStyledAttributes ( intArrayOf ( attr ) ) \n + try { \n + return a . getFloat ( 0 , defaultValue ) \n + } finally { \n + a . recycle ( ) \n + } \n + } \n + \n core \ src \ main \ res - public \ values \ public . xml \n + < attr format = " float " name = " md _ line _ spacing _ body " / > \n
core \ src \ main \ java \ com \ afollestad \ materialdialogs \ internal \ list \ MultiChoiceDialogAdapter . kt \n - override fun onClick ( view : View ) = adapter . itemClicked ( adapterPosition ) \n + override fun onClick ( view : View ) { \n + if ( adapterPosition < 0 ) return \n + adapter . itemClicked ( adapterPosition ) \n + } \n - ) : RecyclerView . Adapter < MultiChoiceViewHolder > ( ) , DialogAdapter < CharSequence , MultiChoiceListener > { \n + ) : RecyclerView . Adapter < MultiChoiceViewHolder > ( ) , \n + DialogAdapter < CharSequence , MultiChoiceListener > { \n - val indicesToAdd = indices . filter { ! existingSelection . contains ( it ) } \n + val indicesToAdd = indices . filter { \n + check ( it > = 0 & & it < items . size ) { \n + " Index $ it is out of range for this adapter of $ { items . size } items . " \n + } \n + ! existingSelection . contains ( it ) \n + } \n - val indicesToAdd = indices . filter { existingSelection . contains ( it ) } \n + val indicesToAdd = indices . filter { \n + check ( it > = 0 & & it < items . size ) { \n + " Index $ it is out of range for this adapter of $ { items . size } items . " \n + } \n + existingSelection . contains ( it ) \n + } \n core \ src \ main \ java \ com \ afollestad \ materialdialogs \ internal \ list \ SingleChoiceDialogAdapter . kt \n - override fun onClick ( view : View ) = adapter . itemClicked ( adapterPosition ) \n + override fun onClick ( view : View ) { \n + if ( adapterPosition < 0 ) return \n + adapter . itemClicked ( adapterPosition ) \n + } \n - ) : RecyclerView . Adapter < SingleChoiceViewHolder > ( ) , DialogAdapter < CharSequence , SingleChoiceListener > { \n + ) : RecyclerView . Adapter < SingleChoiceViewHolder > ( ) , \n + DialogAdapter < CharSequence , SingleChoiceListener > { \n + check ( targetIndex > = 0 & & targetIndex < items . size ) { \n + " Index $ targetIndex is out of range for this adapter of $ { items . size } items . " \n + } \n + check ( targetIndex > = 0 & & targetIndex < items . size ) { \n + " Index $ targetIndex is out of range for this adapter of $ { items . size } items . " \n + } \n
dependencies . gradle \n - publishVersionCode : 253 , \n + publishVersionCode : 254 , \n sample \ sample . apk \n Binary files a / sample / sample . apk and b / sample / sample . apk differ \n
core \ src \ main \ java \ com \ afollestad \ materialdialogs \ MaterialDialog . kt \n - val dialogBehavior : DialogBehavior = ModalDialog \n + val dialogBehavior : DialogBehavior = DEFAULT _ BEHAVIOR \n + \n + companion object { \n + / * * \n + * The default [ dialogBehavior ] for all constructed instances of \n + * [ MaterialDialog ] . Defaults to [ ModalDialog ] . \n + * / \n + @ JvmStatic var DEFAULT _ BEHAVIOR : DialogBehavior = ModalDialog \n + } \n
presto - hive \ pom . xml \n + < argLine > - Xms4g - Xmx4g < / argLine > \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ util \ GcStatusMonitor . java \n - logInfoTable ( ImmutableList . < List < String > > builder ( ) . add ( \n - ImmutableList . of ( \n - " Query ID " , \n - " Total Memory Reservation " , \n - " User Memory Reservation " , \n - " System Memory Reservation " ) ) \n - . addAll ( rows ) \n - . build ( ) ) ; \n + if ( ! rows . isEmpty ( ) ) { \n + logInfoTable ( ImmutableList . < List < String > > builder ( ) . add ( \n + ImmutableList . of ( \n + " Query ID " , \n + " Total Memory Reservation " , \n + " User Memory Reservation " , \n + " System Memory Reservation " ) ) \n + . addAll ( rows ) \n + . build ( ) ) ; \n + } \n - \n - logInfoTable ( ImmutableList . < List < String > > builder ( ) \n - . add ( ImmutableList . of ( \n - " Query ID " , \n - " Task ID " , \n - " State " , \n - " Created Ts " , \n - " User Memory " , \n - " System Memory " , \n - " Input Bytes " , \n - " Output Bytes " , \n - " Input Row Count " , \n - " Output Row Count " ) ) \n - . addAll ( rows ) \n - . build ( ) ) ; \n + if ( ! rows . isEmpty ( ) ) { \n + logInfoTable ( ImmutableList . < List < String > > builder ( ) \n + . add ( ImmutableList . of ( \n + " Query ID " , \n + " Task ID " , \n + " State " , \n + " Created Ts " , \n + " User Memory " , \n + " System Memory " , \n + " Input Bytes " , \n + " Output Bytes " , \n + " Input Row Count " , \n + " Output Row Count " ) ) \n + . addAll ( rows ) \n + . build ( ) ) ; \n + } \n
src \ jvm \ clojure \ lang \ PersistentTreeMap . java \n - return tree . kvreduce ( f , init ) ; \n + init = tree . kvreduce ( f , init ) ; \n + if ( RT . isReduced ( init ) ) \n + init = ( ( IDeref ) init ) . deref ( ) ; \n - return ( ( IDeref ) init ) . deref ( ) ; \n + return init ; \n - return ( ( IDeref ) init ) . deref ( ) ; \n + return init ; \n - if ( RT . isReduced ( init ) ) \n - return ( ( IDeref ) init ) . deref ( ) ; \n
test \ clojure \ test _ clojure \ reducers . clj \n + \n + \n + ( deftest test - sorted - maps \n + ( let [ m ( into ( sorted - map ) \n + ' { 1 a , 2 b , 3 c , 4 d } ) ] \n + ( is ( = " 1a2b3c4d " ( reduce - kv str " " m ) ) \n + " Sorted maps should reduce - kv in sorted order " ) \n + ( is ( = 1 ( reduce - kv ( fn [ acc k v ] \n + ( reduced ( + acc k ) ) ) \n + 0 m ) ) \n + " Sorted maps should stop reduction when asked " ) ) ) \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search \ 330 _ fetch _ fields . yml \n - - - \n - skip : \n - version : ' - 8 . 0 . 0 ' \n - reason : ' Added in 8 . 0 - change on backport ' \n + version : ' - 7 . 11 . 99 ' \n + reason : ' Behaviour changed in 7 . 12 ' \n - do : \n
server \ src \ main \ java \ org \ elasticsearch \ index \ mapper \ SourceValueFetcher . java \n - queue . addAll ( ( List < ? > ) value ) ; \n + for ( Object o : ( List < ? > ) value ) { \n + if ( o ! = null ) { \n + queue . add ( o ) ; \n + } \n + } \n server \ src \ test \ java \ org \ elasticsearch \ search \ fetch \ subphase \ FieldFetcherTests . java \n + public void testNullValues ( ) throws IOException { \n + MapperService mapperService = createMapperService ( ) ; \n + XContentBuilder source = XContentFactory . jsonBuilder ( ) . startObject ( ) \n + . startObject ( " object " ) . field ( " field " , " value " ) . endObject ( ) \n + . nullField ( " object . field " ) \n + . endObject ( ) ; \n + \n + Map < String , DocumentField > fields = fetchFields ( mapperService , source , " * " ) ; \n + assertThat ( fields . size ( ) , equalTo ( 1 ) ) ; \n + \n + DocumentField field = fields . get ( " object . field " ) ; \n + assertThat ( field . getValues ( ) . size ( ) , equalTo ( 1 ) ) ; \n + assertThat ( field . getValues ( ) , containsInAnyOrder ( " value " ) ) ; \n + \n + source = XContentFactory . jsonBuilder ( ) . startObject ( ) \n + . array ( " nullable _ long _ field " , 1 , 2 , 3 , null , 5 ) \n + . endObject ( ) ; \n + fields = fetchFields ( mapperService , source , " * " ) ; \n + assertThat ( fields . size ( ) , equalTo ( 1 ) ) ; \n + \n + field = fields . get ( " nullable _ long _ field " ) ; \n + assertThat ( field . getValues ( ) . size ( ) , equalTo ( 5 ) ) ; \n + assertThat ( field . getValues ( ) , containsInAnyOrder ( 1L , 2L , 3L , 5L , 42L ) ) ; \n + } \n + \n + . startObject ( " nullable _ long _ field " ) . field ( " type " , " long " ) . field ( " null _ value " , 42 ) . endObject ( ) \n
plugins \ repository - azure \ src \ main \ java \ org \ elasticsearch \ repositories \ azure \ AzureBlobStore . java \n - final Flux < ByteBuffer > byteBufferFlux = \n - convertStreamToByteBuffer ( inputStream , blobSize , DEFAULT _ UPLOAD _ BUFFERS _ SIZE ) ; \n + final Flux < ByteBuffer > byteBufferFlux = convertStreamToByteBuffer ( inputStream , blobSize , DEFAULT _ UPLOAD _ BUFFERS _ SIZE ) ; \n - final Flux < ByteBuffer > byteBufferFlux = \n - convertStreamToByteBuffer ( inputStream , length , DEFAULT _ UPLOAD _ BUFFERS _ SIZE ) ; \n + Flux < ByteBuffer > byteBufferFlux = convertStreamToByteBuffer ( inputStream , length , DEFAULT _ UPLOAD _ BUFFERS _ SIZE ) ; \n - try { \n - if ( inputStream . available ( ) > 0 ) { \n - long totalLength = currentTotalLength . get ( ) + inputStream . available ( ) ; \n - throw new IllegalStateException ( \n - " InputStream provided " + totalLength + " bytes , more than the expected " + length + " bytes " \n - ) ; \n - } else if ( currentTotalLength . get ( ) > length ) { \n - throw new IllegalStateException ( \n - " Read more data than was requested . Size of data read : " + currentTotalLength . get ( ) + " . " + \n - " Size of data requested : " + length \n - ) ; \n - } \n - } catch ( IOException e ) { \n - throw new RuntimeException ( e ) ; \n + if ( currentTotalLength . get ( ) > length ) { \n + throw new IllegalStateException ( \n + " Read more data than was requested . Size of data read : " + currentTotalLength . get ( ) + " . " + \n + " Size of data requested : " + length \n + ) ; \n x - pack \ plugin \ repository - encrypted \ src \ main \ java \ org \ elasticsearch \ repositories \ encrypted \ EncryptionPacketsInputStream . java \n - / / remove after https : / / github . com / elastic / elasticsearch / pull / 66769 is merged in \n - @ Override \n - public int available ( ) throws IOException { \n - return 0 ; \n - } \n - \n
x - pack \ qa \ oidc - op - tests \ build . gradle \n + \n + tasks . named ( " processTestResources " ) . configure { \n + from project ( ' : x - pack : plugin : core ' ) \n + . files ( \n + ' src / test / resources / org / elasticsearch / xpack / security / transport / ssl / certs / simple / testnode _ ec . crt ' \n + ) \n + } \n x - pack \ qa \ oidc - op - tests \ src \ test \ java \ org \ elasticsearch \ xpack \ security \ authc \ oidc \ OpenIdConnectAuthIT . java \n - private static final String FACILITATOR _ PASSWORD = " f @ cilit @ t0r " ; \n + private static final String FACILITATOR _ PASSWORD = " f @ cilit @ t0rPassword " ; / / longer than 14 chars \n + " / c2id / clients " ; \n - private static Path HTTP _ TRUSTSTORE ; \n + private static Path HTTP _ TRUSTED _ CERT ; \n - public static void readTrustStore ( ) throws Exception { \n - final URL resource = OpenIdConnectAuthIT . class . getResource ( " / tls / testnode . jks " ) ; \n + public static void readTrustedCert ( ) throws Exception { \n + final URL resource = OpenIdConnectAuthIT . class . getResource ( " / testnode _ ec . crt " ) ; \n - throw new FileNotFoundException ( " Cannot find classpath resource / tls / testnode . jks " ) ; \n + throw new FileNotFoundException ( " Cannot find classpath resource / testnode _ ec . crt " ) ; \n - HTTP _ TRUSTSTORE = PathUtils . get ( resource . toURI ( ) ) ; \n + HTTP _ TRUSTED _ CERT = PathUtils . get ( resource . toURI ( ) ) ; \n - . put ( ThreadContext . PREFIX + " . Authorization " , token ) \n - . put ( TRUSTSTORE _ PATH , HTTP _ TRUSTSTORE ) \n - . put ( TRUSTSTORE _ PASSWORD , " testnode " ) \n - . build ( ) ; \n + . put ( ThreadContext . PREFIX + " . Authorization " , token ) \n + . put ( CERTIFICATE _ AUTHORITIES , HTTP _ TRUSTED _ CERT ) \n + . build ( ) ; \n deleted file \n x - pack \ qa \ oidc - op - tests \ src \ test \ resources \ tls \ testnode . jks \n Binary files a / x - pack / qa / oidc - op - tests / src / test / resources / tls / testnode . jks and / dev / null differ \n
src \ main \ java \ org \ junit \ rules \ ExternalResource . java \n + import java . util . ArrayList ; \n + import java . util . Arrays ; \n + import java . util . List ; \n + \n + import org . junit . runners . model . MultipleFailureException ; \n + \n + List < Throwable > errors = new ArrayList < Throwable > ( ) ; \n + } catch ( Throwable t ) { \n + errors . add ( t ) ; \n - after ( ) ; \n + try { \n + after ( ) ; \n + } catch ( Throwable t ) { \n + errors . add ( t ) ; \n + } \n + MultipleFailureException . assertEmpty ( errors ) ; \n src \ test \ java \ org \ junit \ rules \ ExternalResourceRuleTest . java \n + import static org . hamcrest . Matchers . allOf ; \n + import static org . hamcrest . Matchers . containsString ; \n + import static org . junit . Assert . fail ; \n + import org . junit . internal . runners . statements . Fail ; \n + import org . junit . runner . Description ; \n + import org . junit . runners . model . MultipleFailureException ; \n + import org . junit . runners . model . Statement ; \n + \n + @ Test \n + public void shouldThrowMultipleFailureExceptionWhenTestFailsAndClosingResourceFails ( ) throws Throwable { \n + / / given \n + ExternalResource resourceRule = new ExternalResource ( ) { \n + @ Override \n + protected void after ( ) { \n + throw new RuntimeException ( " simulating resource tear down failure " ) ; \n + } \n + } ; \n + Statement failingTest = new Fail ( new RuntimeException ( " simulated test failure " ) ) ; \n + Description dummyDescription = Description . createTestDescription ( \n + " dummy test class name " , " dummy test name " ) ; \n + \n + try { \n + resourceRule . apply ( failingTest , dummyDescription ) . evaluate ( ) ; \n + fail ( " ExternalResource should throw " ) ; \n + } catch ( MultipleFailureException e ) { \n + assertThat ( e . getMessage ( ) , allOf ( \n + containsString ( " simulated test failure " ) , \n + containsString ( " simulating resource tear down failure " ) \n + ) ) ; \n + } \n + } \n
src \ main \ java \ org \ junit \ experimental \ results \ ResultMatchers . java \n - return new BaseMatcher < PrintableResult > ( ) { \n - public boolean matches ( Object item ) { \n - return item . toString ( ) . contains ( string ) ; \n + return new TypeSafeMatcher < PrintableResult > ( ) { \n + public boolean matchesSafely ( PrintableResult item ) { \n + return item . failureCount ( ) > 0 & & item . toString ( ) . contains ( string ) ; \n src \ test \ java \ org \ junit \ tests \ experimental \ results \ ResultMatchersTest . java \n - import static org . hamcrest . CoreMatchers . containsString ; \n - import static org . hamcrest . CoreMatchers . is ; \n - import static org . junit . Assert . assertThat ; \n - \n + import org . junit . experimental . results . PrintableResult ; \n + import org . junit . runner . Description ; \n + import org . junit . runner . notification . Failure ; \n + \n + import java . util . ArrayList ; \n + import java . util . Collections ; \n + \n + import static org . hamcrest . CoreMatchers . containsString ; \n + import static org . hamcrest . CoreMatchers . is ; \n + import static org . junit . Assert . assertThat ; \n + \n + \n + @ Test \n + public void hasFailureContaining _ givenResultWithNoFailures ( ) { \n + PrintableResult resultWithNoFailures = new PrintableResult ( new ArrayList < Failure > ( ) ) ; \n + \n + assertThat ( ResultMatchers . hasFailureContaining ( " " ) . matches ( resultWithNoFailures ) , is ( false ) ) ; \n + } \n + \n + @ Test \n + public void hasFailureContaining _ givenResultWithOneFailure ( ) { \n + PrintableResult resultWithOneFailure = new PrintableResult ( Collections . singletonList ( \n + new Failure ( Description . EMPTY , new RuntimeException ( " my failure " ) ) ) ) ; \n + \n + assertThat ( ResultMatchers . hasFailureContaining ( " my failure " ) . matches ( resultWithOneFailure ) , is ( true ) ) ; \n + assertThat ( ResultMatchers . hasFailureContaining ( " his failure " ) . matches ( resultWithOneFailure ) , is ( false ) ) ; \n + } \n
src \ main \ java \ io \ reactivex \ Single . java \n + * < p > \n + * < img width = " 640 " height = " 515 " src = " https : / / raw . github . com / wiki / ReactiveX / RxJava / images / rx - operators / Single . amb . png " alt = " " > \n + * < p > \n + * < img width = " 640 " height = " 515 " src = " https : / / raw . github . com / wiki / ReactiveX / RxJava / images / rx - operators / Single . ambArray . png " alt = " " > \n
src \ main \ java \ io \ reactivex \ Single . java \n + * < p > \n + * < img width = " 640 " height = " 244 " src = " https : / / raw . github . com / wiki / ReactiveX / RxJava / images / rx - operators / Single . never . png " alt = " " > \n - * \n + * \n
src \ clj \ clojure \ core _ proxy . clj \n - ( let [ cv ( new ClassWriter ( . ClassWriter COMPUTE _ MAXS ) ) \n + ( let [ cv ( clojure . lang . Compiler / classWriter ) \n - ( . cv ( visit ( . Opcodes V1 _ 5 ) ( + ( . Opcodes ACC _ PUBLIC ) ( . Opcodes ACC _ SUPER ) ) \n + ( . cv ( visit ( . Opcodes V1 _ 8 ) ( + ( . Opcodes ACC _ PUBLIC ) ( . Opcodes ACC _ SUPER ) ) \n
pom . xml \n - < version > 0 . 2 . 187 < / version > \n + < version > 0 . 2 . 194 < / version > \n - < version > 0 . 2 . 44 < / version > \n + < version > 0 . 2 . 56 < / version > \n
. idea \ codeStyleSettings . xml \n + < package name = " java " withSubpackages = " true " static = " true " / > \n + < package name = " java " withSubpackages = " true " static = " false " / > \n
library \ src \ main \ java \ com \ bumptech \ glide \ load \ engine \ cache \ MemorySizeCalculator . java \n - Build . VERSION . SDK _ INT > Build . VERSION _ CODES . O ? 4 : 1 ; \n + Build . VERSION . SDK _ INT < Build . VERSION _ CODES . O ? 4 : 1 ; \n
idea \ idea - gradle \ tests \ org \ jetbrains \ kotlin \ idea \ codeInsight \ gradle \ GradleFacetImportTest . kt \n - importProject ( ) \n + importProject ( false ) \n + importProject ( true ) \n + } \n + \n + fun importProject ( skipIndexing : Boolean = true ) { \n - super . importProject ( true ) \n + super . importProject ( skipIndexing ) \n idea \ idea - gradle \ tests \ org \ jetbrains \ kotlin \ idea \ codeInsight \ gradle \ GradleImportingTestCase . kt \n + import com . intellij . openapi . projectRoots . impl . ProjectJdkTableImpl \n - jdkTable . addJdk ( jdk ! ! , testRootDisposable ) \n + / / jdkTable . addJdk ( jdk ! ! , testRootDisposable ) \n + ( jdkTable as ProjectJdkTableImpl ) . addTestJdk ( jdk ! ! , testRootDisposable ) \n - ProjectJdkTable . getInstance ( ) . removeJdk ( jdk ) \n + ( ProjectJdkTable . getInstance ( ) as ProjectJdkTableImpl ) . removeTestJdk ( jdk ) \n + / / ProjectJdkTable . getInstance ( ) . removeJdk ( jdk ) \n
buildSrc \ src \ main \ kotlin \ tasks . kt \n - " : native : kotlin - klib - commonizer - embeddable " \n + " : native : kotlin - klib - commonizer - embeddable " , \n + " : native : kotlin - klib - commonizer - api : install " \n
libraries \ tools \ kotlin - gradle - plugin \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ gradle \ targets \ native \ KotlinNativeTargetPreset . kt \n - import org . gradle . BuildAdapter \n - import org . gradle . api . invocation . Gradle \n - import org . jetbrains . kotlin . gradle . utils . isConfigurationCacheAvailable \n libraries \ tools \ kotlin - gradle - plugin \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ gradle \ targets \ native \ NativeCompilerDownloader . kt \n + import java . nio . file . Files \n - project . copy { \n - it . from ( archiveFileTree ( archive ) ) \n - it . into ( DependencyDirectories . localKonanDir ) \n + val tmpDir = Files . createTempDirectory ( " " ) . toFile ( ) \n + try { \n + logger . debug ( " Unpacking Kotlin / Native compiler to tmp directory $ tmpDir " ) \n + project . copy { \n + it . from ( archiveFileTree ( archive ) ) \n + it . into ( tmpDir ) \n + } \n + val compilerTmp = tmpDir . resolve ( dependencyNameWithVersion ) \n + if ( ! compilerTmp . renameTo ( compilerDirectory ) ) { \n + project . copy { \n + it . from ( compilerTmp ) \n + it . into ( compilerDirectory ) \n + } \n + } \n + logger . debug ( " Moved Kotlin / Native compiler from $ tmpDir to $ compilerDirectory " ) \n + } finally { \n + tmpDir . deleteRecursively ( ) \n
libraries \ tools \ kotlin - gradle - plugin \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ gradle \ targets \ native \ NativeCompilerDownloader . kt \n - val tmpDir = Files . createTempDirectory ( " " ) . toFile ( ) \n + val kotlinNativeDir = compilerDirectory . parentFile . also { it . mkdirs ( ) } \n + val tmpDir = Files . createTempDirectory ( kotlinNativeDir . toPath ( ) , " compiler - " ) . toFile ( ) \n
samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ ShowcaseApplication . kt \n - FrescoVitoProvider . setImplementation ( DefaultFrescoVitoProvider ( ) ) \n + FrescoVitoProvider . setImplementation ( \n + DefaultFrescoVitoProvider ( \n + DefaultFrescoContext . get ( ) , \n + DebugOverlaySupplierSingleton . getInstance ( applicationContext ) ) ) \n vito \ provider \ src \ main \ java \ com \ facebook \ fresco \ vito \ provider \ impl \ DefaultFrescoContext . java \n - @ Nullable \n - public static Supplier < Boolean > getDebugOverlayEnabledSupplier ( ) { \n - return sDebugOverlayEnabledSupplier ; \n - } \n - \n vito \ provider \ src \ main \ java \ com \ facebook \ fresco \ vito \ provider \ impl \ DefaultFrescoVitoProvider . java \n + import com . facebook . fresco . vito . core . Hierarcher ; \n + import com . facebook . fresco . vito . core . ImagePipelineUtils ; \n + import com . facebook . imagepipeline . core . ImagePipeline ; \n + import java . util . concurrent . Executor ; \n - public DefaultFrescoVitoProvider ( ) { \n + public DefaultFrescoVitoProvider ( \n + FrescoContext frescoContext , @ Nullable Supplier < Boolean > debugOverlayEnabledSupplier ) { \n - DefaultFrescoContext . get ( ) , \n - DefaultFrescoContext . getDebugOverlayEnabledSupplier ( ) ) ; \n + frescoContext . getPrefetcher ( ) , \n + frescoContext . getImagePipeline ( ) , \n + frescoContext . getImagePipelineUtils ( ) , \n + frescoContext . getHierarcher ( ) , \n + frescoContext . getLightweightBackgroundThreadExecutor ( ) , \n + frescoContext . getUiThreadExecutorService ( ) , \n + debugOverlayEnabledSupplier ) ; \n - FrescoContext context , \n + FrescoVitoPrefetcher prefetcher , \n + ImagePipeline imagePipeline , \n + ImagePipelineUtils imagePipelineUtils , \n + Hierarcher hierarcher , \n + Executor lightweightBackgroundThreadExecutor , \n + Executor uiThreadExecutor , \n - mFrescoVitoPrefetcher = context . getPrefetcher ( ) ; \n - mVitoImagePipeline = \n - new VitoImagePipelineImpl ( context . getImagePipeline ( ) , context . getImagePipelineUtils ( ) ) ; \n + mFrescoVitoPrefetcher = prefetcher ; \n + mVitoImagePipeline = new VitoImagePipelineImpl ( imagePipeline , imagePipelineUtils ) ; \n - context . getHierarcher ( ) , \n - context . getLightweightBackgroundThreadExecutor ( ) , \n - context . getUiThreadExecutorService ( ) , \n + hierarcher , \n + lightweightBackgroundThreadExecutor , \n + uiThreadExecutor , \n
vito \ core \ src \ main \ java \ com \ facebook \ fresco \ vito \ core \ impl \ debug \ DebugOverlayDrawable . java \n - import java . util . HashMap ; \n + import java . util . LinkedHashMap ; \n - private final HashMap < String , Pair < String , Integer > > mDebugData = new HashMap < > ( ) ; \n + private final LinkedHashMap < String , Pair < String , Integer > > mDebugData = new LinkedHashMap < > ( ) ; \n
kotlin - native \ backend . native \ tests \ build . gradle \n + task initializers8 ( type : KonanLocalTest ) { \n + source = " runtime / basic / initializers8 . kt " \n + } \n + \n new file \n kotlin - native \ backend . native \ tests \ runtime \ basic \ initializers8 . kt \n + / * \n + * Copyright 2010 - 2021 JetBrains s . r . o . Use of this source code is governed by the Apache 2 . 0 license \n + * that can be found in the LICENSE file . \n + * / \n + \n + package runtime . basic . initializers8 \n + \n + import kotlin . test . * \n + \n + var globalString = " abc " \n + \n + @ Test fun runTest ( ) { \n + assertEquals ( " abc " , globalString ) \n + } \n kotlin - native \ runtime \ src \ mm \ cpp \ Memory . cpp \n - mm : : SetHeapRef ( location , const _ cast < ObjHeader * > ( initialValue ) ) ; \n + / / Null ` initialValue ` means that the appropriate value was already set by static initialization . \n + if ( initialValue ! = nullptr ) { \n + mm : : SetHeapRef ( location , const _ cast < ObjHeader * > ( initialValue ) ) ; \n + } \n
kotlin - native \ backend . native \ tests \ runtime \ exceptions \ custom _ hook . kt \n - fun main ( args : Array < String > ) { \n + fun setHookLegacyMM ( hook : ReportUnhandledExceptionHook ) : ReportUnhandledExceptionHook ? { \n + return setUnhandledExceptionHook ( hook . freeze ( ) ) \n + } \n + \n + fun setHookNewMM ( hook : ReportUnhandledExceptionHook ) : ReportUnhandledExceptionHook ? { \n + return setUnhandledExceptionHook ( hook ) \n + } \n + \n + fun setHook ( hook : ReportUnhandledExceptionHook ) : ReportUnhandledExceptionHook ? { \n + return when ( kotlin . native . Platform . memoryModel ) { \n + kotlin . native . MemoryModel . EXPERIMENTAL - > setHookNewMM ( hook ) \n + else - > setHookLegacyMM ( hook ) \n + } \n + } \n + \n + fun main ( ) { \n - val old = setUnhandledExceptionHook ( { \n + val old = setHook { \n - } . freeze ( ) ) \n + } \n - \n - } \n + } \n kotlin - native \ runtime \ src \ main \ kotlin \ kotlin \ native \ Runtime . kt \n - if ( ! hook . isFrozen ) { \n + if ( Platform . memoryModel ! = MemoryModel . EXPERIMENTAL & & ! hook . isFrozen ) { \n
src \ clj \ clojure \ core _ print . clj \n - ( defmethod print - dup java . lang . Integer [ o w ] ( print - method o w ) ) \n + ( defmethod print - dup java . lang . Long [ o w ] ( print - method o w ) ) \n test \ clojure \ test _ clojure \ printer . clj \n + \n + ( deftest print - dup - expected \n + ( are [ x s ] ( = s ( binding [ * print - dup * true ] ( print - str x ) ) ) \n + 1 " 1 " \n + 1 . 0 " 1 . 0 " \n + 1N " 1N " \n + 1M " 1M " \n + " hi " " \ " hi \ " " ) ) \n + \n + ( deftest print - dup - readable \n + ( are [ form ] ( let [ x form ] \n + ( = x ( read - string ( binding [ * print - dup * true ] ( print - str x ) ) ) ) ) \n + 1 \n + 1 . 0 \n + 1N \n + 1M \n + " hi " ) ) \n test \ clojure \ test _ clojure \ protocols . clj \n - ( is ( = " # clojure . test _ clojure . protocols . RecordToTestPrinting [ # = ( java . lang . Long . \ " 1 \ " ) , # = ( java . lang . Long . \ " 2 \ " ) ] " \n + ( is ( = " # clojure . test _ clojure . protocols . RecordToTestPrinting [ 1 , 2 ] " \n - ( is ( = " # clojure . test _ clojure . protocols . RecordToTestPrinting { : a # = ( java . lang . Long . \ " 1 \ " ) , : b # = ( java . lang . Long . \ " 2 \ " ) } " \n + ( is ( = " # clojure . test _ clojure . protocols . RecordToTestPrinting { : a 1 , : b 2 } " \n - ( is ( = " # clojure . test _ clojure . protocols . TypeToTestLiterals [ # = ( java . lang . Long . \ " 42 \ " ) ] " \n + ( is ( = " # clojure . test _ clojure . protocols . TypeToTestLiterals [ 42 ] " \n
src \ clj \ clojure \ core . clj \n - ( if ( or ( zero ? m ) ( pos ? ( * num div ) ) ) \n + ( if ( or ( zero ? m ) ( = ( pos ? num ) ( pos ? div ) ) ) \n test \ clojure \ test _ clojure \ numbers . clj \n + \n + ; large args \n + ( mod 3216478362187432 432143214 ) 120355456 \n
libraries \ tools \ kotlin - allopen \ build . gradle \n - kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " ] \n + kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " , " - Xskip - runtime - version - check " ] \n libraries \ tools \ kotlin - noarg \ build . gradle \n - kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " ] \n + kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " , " - Xskip - runtime - version - check " ] \n libraries \ tools \ kotlin - sam - with - receiver \ build . gradle \n - kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " ] \n + kotlinOptions . freeCompilerArgs + = [ " - Xskip - prerelease - check " , " - Xskip - runtime - version - check " ] \n libraries \ tools \ kotlin - serialization \ build . gradle \n + tasks . withType ( project . compileKotlin . class ) { \n + kotlinOptions . freeCompilerArgs + = [ " - Xskip - runtime - version - check " ] \n + } \n + \n plugins \ pill \ pill - importer \ build . gradle . kts \n - } \n + } \n + \n + tasks . withType < org . jetbrains . kotlin . gradle . dsl . KotlinCompile < * > > { \n + kotlinOptions { \n + freeCompilerArgs = freeCompilerArgs + " - Xskip - runtime - version - check " \n + } \n + } \n
compiler \ testData \ codegen \ box \ typeMapping \ genericTypeWithNothing . kt \n - if ( ( it . type = = it . genericType ) = = expectedIsRaw ) return " failed on field ' $ { clazz . simpleName } : : $ { it . name } ' " \n + if ( ( it . type = = it . genericType ) ! = expectedIsRaw ) return " failed on field ' $ { clazz . simpleName } : : $ { it . name } ' " \n - if ( ( m . parameterTypes [ i ] = = m . genericParameterTypes [ i ] ) = = expectedIsRaw ) return " failed on type of param # $ i of method ' $ { clazz . simpleName } : : $ { m . name } ' " \n + if ( ( m . parameterTypes [ i ] = = m . genericParameterTypes [ i ] ) ! = expectedIsRaw ) return " failed on type of param # $ i of method ' $ { clazz . simpleName } : : $ { m . name } ' " \n - if ( m . returnType ! = Void . TYPE & & ( m . returnType = = m . genericReturnType ) = = expectedIsRaw ) return " failed on return type of method ' $ { clazz . simpleName } : : $ { m . name } ' " \n + if ( m . returnType ! = Void . TYPE & & ( m . returnType = = m . genericReturnType ) ! = expectedIsRaw ) return " failed on return type of method ' $ { clazz . simpleName } : : $ { m . name } ' " \n - testAllDeclaredMembers ( TestRaw : : class , expectedIsRaw = true ) ? : \n + testAllDeclaredMembers ( TestRaw : : class , expectedIsRaw = true ) ? . let { return it } \n - testAllDeclaredMembers ( C1 : : class , expectedIsRaw = true ) ? : \n + testAllDeclaredMembers ( C1 : : class , expectedIsRaw = true ) ? . let { return it } \n
okhttp \ src \ test \ java \ okhttp3 \ internal \ http2 \ HttpOverHttp2Test . java \n + import java . util . concurrent . LinkedBlockingQueue ; \n - BlockingQueue < String > bodies = new SynchronousQueue < > ( ) ; \n + BlockingQueue < String > bodies = new LinkedBlockingQueue < > ( ) ; \n
okhttp - tests \ src \ test \ java \ okhttp3 \ internal \ ws \ WebSocketHttpTest . java \n - clientListener . assertOpen ( ) ; \n + WebSocket webSocket = clientListener . assertOpen ( ) ; \n - server . close ( 1001 , " bye " ) ; \n - clientListener . assertClosing ( 1001 , " bye " ) ; \n - clientListener . assertExhausted ( ) ; \n - serverListener . assertExhausted ( ) ; \n - \n - / / TODO : fix connection leak \n + closeWebSockets ( webSocket , server ) ; \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ glutils \ ShaderProgram . java \n - import com . badlogic . gdx . utils . GdxRuntimeException ; \n - else throw new GdxRuntimeException ( " An attempted fetch uniform from uncompiled shader \ n " + getLog ( ) ) ; \n + throw new IllegalStateException ( " An attempted fetch uniform from uncompiled shader \ n " + getLog ( ) ) ; \n
backends \ gdx - backend - lwjgl3 \ src \ com \ badlogic \ gdx \ backends \ lwjgl3 \ Lwjgl3Application . java \n + if ( config . title = = null ) config . title = listener . getClass ( ) . getSimpleName ( ) ; \n - if ( this . config . title = = null ) this . config . title = listener . getClass ( ) . getSimpleName ( ) ; \n backends \ gdx - backend - lwjgl3 \ src \ com \ badlogic \ gdx \ backends \ lwjgl3 \ Lwjgl3WindowConfiguration . java \n - String title = " " ; \n + String title ; \n
x - pack \ plugin \ sql \ src \ test \ java \ org \ elasticsearch \ xpack \ sql \ expression \ function \ scalar \ math \ MathOperationTests . java \n - List < Number > negative = Arrays . asList ( ( byte ) - 42 , ( short ) - 42 , - 42 , Long . valueOf ( - 42 ) , Float . valueOf ( - 42 . 0f ) , \n - Double . valueOf ( - 42 . 0d ) ) ; \n - List < Number > zero = Arrays . asList ( ( byte ) 0 , ( short ) 0 , 0 , Long . valueOf ( 0 ) , Float . valueOf ( 0 . 0f ) , Double . valueOf ( 0 . 0d ) ) ; \n - List < Number > positive = Arrays . asList ( ( byte ) 42 , ( short ) 42 , 42 , Long . valueOf ( 42 ) , Float . valueOf ( 42 . 0f ) , Double . valueOf ( 42 . 0d ) ) ; \n + List < Number > negative = Arrays . asList ( ( byte ) - 42 , ( short ) - 42 , - 42 , - 42L , - 42 . 0f , - 42 . 0d ) ; \n + List < Number > zero = Arrays . asList ( ( byte ) 0 , ( short ) 0 , 0 , 0L , 0 . 0f , 0 . 0d ) ; \n + List < Number > positive = Arrays . asList ( ( byte ) 42 , ( short ) 42 , 42 , 42L , 42 . 0f , 42 . 0d ) ; \n
x - pack \ plugin \ ql \ src \ main \ java \ org \ elasticsearch \ xpack \ ql \ expression \ function \ aggregate \ CompoundAggregate . java \n - List < Expression > arguments ( ) ; \n + List < ? extends Expression > parameters ( ) ; \n x - pack \ plugin \ ql \ src \ main \ java \ org \ elasticsearch \ xpack \ ql \ expression \ function \ aggregate \ InnerAggregate . java \n - super ( source , outer . field ( ) , outer . arguments ( ) ) ; \n + super ( source , outer . field ( ) , outer . parameters ( ) ) ; \n
README . md \n - # # # # Use Fragments to represent a UI " screen " \n + # # # # Use Fragments to represent a UI screen \n - Your default option should be [ Gradle ] ( http : / / tools . android . com / tech - docs / new - build - system ) . Ant is much more limited and also more verbose . With Gradle , it ' s simple to : \n + Your default option should be [ Gradle ] ( http : / / tools . android . com / tech - docs / new - build - system ) . Ant is much more limited and also more verbose . With Gradle , it ' s simple to : \n - Build different flavours or variants of your app \n - Make simple script - like tasks \n - Manage and download dependencies \n - Customize keystores \n - - And more \n + - And more \n
README . md \n - TODO \n + Java architectures for Android applications can be roughly approximated in [ Model - View - Controller ] ( http : / / en . wikipedia . org / wiki / Model % E2 % 80 % 93view % E2 % 80 % 93controller ) . In Android , [ Fragment and Activity are actually controller classes ] ( http : / / www . informit . com / articles / article . aspx ? p = 2126865 ) . On the other hand , they are explicity part of the user interface , hence are also views . \n + \n + For this reason , it is hard to classify fragments ( or activities ) as strictly controllers or views . It ' s better to let them stay in their own ` fragments ` package . Activities can stay on the top - level package as long as you follow the advice of the previous section . If you are planning to have more than 2 or 3 activities , then make also an ` activities ` package . \n + \n + Otherwise , the architecture can look like a typical MVC , with a ` models ` package containing POJOs to be manipulated by Gson , and a ` views ` package containing your custom Views , notifications , action bar views , widgets , etc . Adapters are a gray matter , living between data and views . However , they typically need to export some View via ` getView ( ) ` , so you can include the ` adapters ` subpackage inside ` views ` . \n + \n + Some controller classes are application - wide and close to the Android system . These can live in the ` services ` package . Miscellaneous data processing classes , such as " DateUtils " , stay in the ` utils ` package . Classes that are responsible for interacting with the backend stay in the ` network ` package . \n + \n + All in all , ordered from the closest - to - backend to the closest - to - the - user : \n + \n + com . futurice . project \n + ├─ network \n + ├─ models \n + ├─ services \n + ├─ utils \n + ├─ fragments \n + └─ views \n + ├─ adapters \n + ├─ actionbar \n + ├─ widgets \n + └─ notifications \n + \n
x - pack \ plugin \ ilm \ qa \ multi - node \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ ilm \ actions \ SearchableSnapshotActionIT . java \n - import org . junit . After ; \n - import static org . hamcrest . Matchers . containsStringIgnoringCase ; \n - @ After \n - public void waitNoRestoresInProgressInRepo ( ) throws Exception { \n - / * \n - * This should be a " fairly quick " wait as each test waits for the searchable snapshot action \n - * to complete . \n - * It seems that sometime there is a discrepancy between the { @ link org . elasticsearch . repositories . RepositoryData } \n - * status of the snapshots and the cluster state { @ link org . elasticsearch . cluster . RestoreInProgress } metadata , which \n - * will prevent { @ link # wipeCluster } from wiping the snapshots as the cluster state would show some \n - * as " in progress " and won ' t be able to delete them . \n - * / \n - assertBusy ( ( ) - > { \n - try { \n - Response response = client ( ) . performRequest ( new Request ( " GET " , " / _ snapshot / " + snapshotRepo + " / _ status " ) ) ; \n - assertThat ( EntityUtils . toString ( response . getEntity ( ) ) , containsStringIgnoringCase ( " \ " snapshots \ " : [ ] " ) ) ; \n - } catch ( IOException e ) { \n - / / converting to AssertionError here so assertBusy retries \n - throw new AssertionError ( e ) ; \n - } \n - } ) ; \n + @ Override \n + protected boolean waitForAllSnapshotsWiped ( ) { \n + return true ; \n - @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67879 " ) \n
x - pack \ plugin \ ilm \ qa \ multi - node \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ ilm \ actions \ SearchableSnapshotActionIT . java \n - createIndex ( index , Settings . builder ( ) \n - . put ( LifecycleSettings . LIFECYCLE _ NAME , policy ) \n - . build ( ) ) ; \n + createIndex ( index , Settings . EMPTY ) ; \n + / / enable ILM after we indexed a document as otherwise ILM might sometimes run so fast the indexDocument call will fail with \n + / / ` index _ not _ found _ exception ` \n + updateIndexSettings ( index , Settings . builder ( ) . put ( LifecycleSettings . LIFECYCLE _ NAME , policy ) ) ; \n + \n - createIndex ( index , Settings . builder ( ) \n - . put ( LifecycleSettings . LIFECYCLE _ NAME , policy ) \n - . build ( ) ) ; \n + createIndex ( index , Settings . EMPTY ) ; \n + / / enable ILM after we indexed a document as otherwise ILM might sometimes run so fast the indexDocument call will fail with \n + / / ` index _ not _ found _ exception ` \n + updateIndexSettings ( index , Settings . builder ( ) . put ( LifecycleSettings . LIFECYCLE _ NAME , policy ) ) ; \n + \n
idea \ src \ org \ jetbrains \ kotlin \ idea \ actions \ NewKotlinFileAction . kt . 201 \n + import org . jetbrains . kotlin . config . LanguageFeature \n + import org . jetbrains . kotlin . idea . project . getLanguageVersionSettings \n idea \ src \ org \ jetbrains \ kotlin \ idea \ actions \ NewKotlinFileAction . kt . 203 \n + import org . jetbrains . kotlin . config . LanguageFeature \n + import org . jetbrains . kotlin . idea . project . getLanguageVersionSettings \n
idea \ src \ org \ jetbrains \ kotlin \ idea \ refactoring \ move \ moveDeclarations \ ui \ KotlinSelectNestedClassRefactoringDialog . kt \n - import com . intellij . BundleBase \n + import com . intellij . psi . PsiDirectory \n - targetContainer ! = null & & targetContainer ! is KtClassOrObject | | \n - nestedClass is KtClass & & nestedClass . isInner ( ) - > { \n - MoveKotlinNestedClassesToUpperLevelDialog ( nestedClass , targetContainer ) \n - } \n + targetContainer . isUpperLevelFor ( nestedClass ) - > MoveKotlinNestedClassesToUpperLevelDialog ( nestedClass , targetContainer ) \n + \n + private fun PsiElement ? . isUpperLevelFor ( nestedClass : KtClassOrObject ) = \n + this ! = null & & this ! is KtClassOrObject & & this ! is PsiDirectory | | \n + nestedClass is KtClass & & nestedClass . isInner ( ) \n idea \ src \ org \ jetbrains \ kotlin \ idea \ refactoring \ move \ moveDeclarations \ ui \ MoveKotlinNestedClassesToUpperLevelModel . kt \n + import org . jetbrains . kotlin . idea . util . projectStructure . module \n - \n - val contentSourceRoots = getSuitableDestinationSourceRoots ( project ) \n + val contentSourceRoots = target . module ? . let { getSuitableDestinationSourceRoots ( it ) } \n + ? : getSuitableDestinationSourceRoots ( project ) \n idea \ src \ org \ jetbrains \ kotlin \ idea \ roots \ projectRootUtils . kt \n + fun getSuitableDestinationSourceRoots ( module : Module ) : MutableList < VirtualFile > { \n + val roots = ArrayList < VirtualFile > ( ) \n + collectSuitableDestinationSourceRoots ( module , roots ) \n + return roots \n + } \n + \n
core \ java \ com \ android \ internal \ compat \ ChangeReporter . java \n - @ IntDef ( flag = true , prefix = { " STATE _ " } , value = { \n + @ IntDef ( prefix = { " STATE _ " } , value = { \n - @ IntDef ( flag = true , prefix = { " SOURCE _ " } , value = { \n + @ IntDef ( prefix = { " SOURCE _ " } , value = { \n
services \ core \ java \ com \ android \ server \ compat \ CompatChange . java \n + if ( app = = null ) { \n + return defaultValue ( ) ; \n + } \n + / * * \n + * Returns the default value for the change id , assuming there are no overrides . \n + * \n + * @ return { @ code false } if it ' s a default disabled change , { @ code true } otherwise . \n + * / \n + boolean defaultValue ( ) { \n + return ! getDisabled ( ) ; \n + } \n + \n services \ core \ java \ com \ android \ server \ compat \ CompatConfig . java \n + boolean defaultChangeIdValue ( long changeId ) { \n + CompatChange c = mChanges . get ( changeId ) ; \n + if ( c = = null ) { \n + return true ; \n + } \n + return c . defaultValue ( ) ; \n + } \n + \n services \ core \ java \ com \ android \ server \ compat \ PlatformCompat . java \n - boolean value = isChangeEnabledInternalNoLogging ( changeId , appInfo ) ; \n - reportChange ( changeId , appInfo . uid , \n - value ? ChangeReporter . STATE _ ENABLED : ChangeReporter . STATE _ DISABLED ) ; \n - return value ; \n + boolean enabled = isChangeEnabledInternalNoLogging ( changeId , appInfo ) ; \n + if ( appInfo ! = null ) { \n + reportChange ( changeId , appInfo . uid , \n + enabled ? ChangeReporter . STATE _ ENABLED : ChangeReporter . STATE _ DISABLED ) ; \n + } \n + return enabled ; \n - if ( appInfo = = null ) { \n - return true ; \n - } \n - return true ; \n + return mCompatConfig . defaultChangeIdValue ( changeId ) ; \n services \ tests \ servicestests \ src \ com \ android \ server \ compat \ CompatConfigTest . java \n + @ Test \n + public void testIsChangeEnabledForInvalidApp ( ) throws Exception { \n + final long disabledChangeId = 1234L ; \n + final long enabledChangeId = 1235L ; \n + final long targetSdkChangeId = 1236L ; \n + CompatConfig compatConfig = CompatConfigBuilder . create ( mBuildClassifier , mContext ) \n + . addEnabledChangeWithId ( enabledChangeId ) \n + . addDisabledChangeWithId ( disabledChangeId ) \n + . addEnableSinceSdkChangeWithId ( 42 , targetSdkChangeId ) \n + . build ( ) ; \n + \n + assertThat ( compatConfig . isChangeEnabled ( enabledChangeId , null ) ) . isTrue ( ) ; \n + assertThat ( compatConfig . isChangeEnabled ( disabledChangeId , null ) ) . isFalse ( ) ; \n + assertThat ( compatConfig . isChangeEnabled ( targetSdkChangeId , null ) ) . isTrue ( ) ; \n + } \n + \n
build . gradle . kts \n - jcenter ( ) \n + mavenCentral ( ) \n + jcenter { \n + content { \n + includeModule ( " org . jetbrains . trove4j " , " trove4j " ) \n + } \n + } \n - jcenter ( ) \n + mavenCentral ( ) \n + jcenter { \n + content { \n + includeModule ( " org . jetbrains . trove4j " , " trove4j " ) \n + includeModule ( " com . facebook . flipper " , " flipper - network - plugin " ) \n + includeModule ( " com . facebook . flipper " , " flipper " ) \n + includeModule ( " com . facebook . flipper " , " flipper - fresco - plugin " ) \n + includeModule ( " com . facebook . yoga " , " proguard - annotations " ) \n + includeModule ( " com . facebook . fbjni " , " fbjni - java - only " ) \n + includeModule ( " com . facebook . fresco " , " stetho " ) \n + } \n + } \n packages \ react - native - codegen \ android \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n + jcenter { \n + content { \n + includeGroup ( " org . jetbrains . trove4j " ) \n + } \n + } \n - jcenter ( ) \n + mavenCentral ( ) \n + jcenter { \n + content { \n + includeGroup ( " org . jetbrains . trove4j " ) \n + } \n + } \n packages \ react - native - codegen \ android \ gradlePlugin - build \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n + jcenter { \n + content { \n + includeGroup ( " org . jetbrains . trove4j " ) \n + } \n + } \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ config \ ReactFeatureFlags . java \n - / * * Disable UI update operations in non - Fabric renderer after catalyst instance was destroyed * / \n - public static boolean disableNonFabricViewOperationsOnCatalystDestroy = false ; \n - \n ReactAndroid \ src \ main \ java \ com \ facebook \ react \ uimanager \ UIImplementation . java \n - if ( ReactFeatureFlags . disableNonFabricViewOperationsOnCatalystDestroy ) { \n - mViewOperationsEnabled = false ; \n - } \n + mViewOperationsEnabled = false ; \n
build . gradle \n - boolean bwc _ tests _ enabled = true \n - String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = false \n + String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 67414 " / * place a PR link here when committing bwc changes * / \n
build . gradle \n - boolean bwc _ tests _ enabled = false \n - String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 67414 " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = true \n + String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n qa \ mixed - cluster \ src \ test \ java \ org \ elasticsearch \ backwards \ SearchWithMinCompatibleSearchNodeIT . java \n - boolean shouldSetCcsMinimizeRoundtrips = randomBoolean ( ) ; \n - Request request = new Request ( " POST " , index + " / _ search ? min _ compatible _ shard _ node = " + version + \n - ( shouldSetCcsMinimizeRoundtrips ? " & ccs _ minimize _ roundtrips = true " : " " ) ) ; \n + Request request = new Request ( " POST " , index + " / _ search ? min _ compatible _ shard _ node = " + version \n + + " & ccs _ minimize _ roundtrips = true " ) ; \n - if ( bwcVersion . before ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( bwcVersion . before ( Version . V _ 7 _ 12 _ 0 ) ) { \n server \ src \ main \ java \ org \ elasticsearch \ ElasticsearchException . java \n - Version . V _ 8 _ 0 _ 0 ) ; \n + Version . V _ 7 _ 12 _ 0 ) ; \n server \ src \ main \ java \ org \ elasticsearch \ action \ search \ SearchRequest . java \n - if ( in . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( in . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 12 _ 0 ) ) { \n - if ( out . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( out . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 12 _ 0 ) ) { \n
library \ src \ main \ java \ com \ afollestad \ materialdialogs \ AlertDialogWrapper . java \n - * @ param listener notified when an item on the list is clicked . The dialog will not be dismissed when an item is clicked . It will only be dismissed if clicked on a button , if no buttons are supplied it ' s up to the user to dismiss the dialog . * @ return \n + * @ param listener notified when an item on the list is clicked . The dialog will not be dismissed when an item is clicked . It will only be dismissed if clicked on a button , if no buttons are supplied it ' s up to the user to dismiss the dialog . * @ return \n - * @ param listener notified when an item on the list is clicked . The dialog will not be dismissed when an item is clicked . It will only be dismissed if clicked on a button , if no buttons are supplied it ' s up to the user to dismiss the dialog . * @ return \n + * @ param listener notified when an item on the list is clicked . The dialog will not be dismissed when an item is clicked . It will only be dismissed if clicked on a button , if no buttons are supplied it ' s up to the user to dismiss the dialog . * @ return \n + builder . alwaysCallMultiChoiceCallback ( ) ; \n
library \ src \ main \ java \ com \ afollestad \ materialdialogs \ AlertDialogWrapper . java \n + public Builder alwaysCallMultiChoiceCallback ( ) { \n + builder . alwaysCallMultiChoiceCallback ( ) ; \n + return this ; \n + } \n + \n - builder . alwaysCallMultiChoiceCallback ( ) ; \n
README . md \n + * [ Salary Barometer ] ( https : / / play . google . com / store / apps / details ? id = anaware . salarybarometer ) ; \n + * [ Best Business Idea ] ( https : / / play . google . com / store / apps / details ? id = anaware . bestidea ) ; \n + * [ Wi - Fi Password Reminder ] ( https : / / play . google . com / store / apps / details ? id = com . rusdelphi . wifipassword ) ; \n + * [ Safe Notes ] ( https : / / play . google . com / store / apps / details ? id = software . codeplus . safenotes ) ; \n + * [ Xpaper ] ( https : / / play . google . com / store / apps / details ? id = com . dunrite . xpaper & hl = en ) \n + * \n
new file \n library \ src \ main \ res \ values - ru \ strings . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < resources > \n + < string name = " skip _ button " > Пропустить < / string > \n + < string name = " done _ button " > Готово < / string > \n + < / resources > \n
codec - http \ src \ main \ java \ io \ netty \ handler \ codec \ http \ websocketx \ WebSocketClientHandshaker13 . java \n - * Sec - WebSocket - Origin : http : / / example . com \n + * Origin : http : / / example . com \n - . set ( HttpHeaderNames . SEC _ WEBSOCKET _ ORIGIN , websocketOriginValue ( wsURL ) ) ; \n + . set ( HttpHeaderNames . ORIGIN , websocketOriginValue ( wsURL ) ) ; \n - * @ throws WebSocketHandshakeException \n + * @ throws WebSocketHandshakeException if handshake response is invalid . \n codec - http \ src \ main \ java \ io \ netty \ handler \ codec \ http \ websocketx \ WebSocketServerHandshaker13 . java \n - * Sec - WebSocket - Origin : http : / / example . com \n + * Origin : http : / / example . com \n codec - http \ src \ test \ java \ io \ netty \ handler \ codec \ http \ websocketx \ WebSocketClientHandshaker07Test . java \n - HttpHeaderNames . SEC _ WEBSOCKET _ ORIGIN , \n + getOriginHeaderName ( ) , \n codec - http \ src \ test \ java \ io \ netty \ handler \ codec \ http \ websocketx \ WebSocketClientHandshaker13Test . java \n + import io . netty . handler . codec . http . HttpHeaderNames ; \n + \n + \n + @ Override \n + protected CharSequence getOriginHeaderName ( ) { \n + return HttpHeaderNames . ORIGIN ; \n + } \n + \n codec - http \ src \ test \ java \ io \ netty \ handler \ codec \ http \ websocketx \ WebSocketRequestBuilder . java \n - headers . set ( HttpHeaderNames . SEC _ WEBSOCKET _ ORIGIN , origin ) ; \n + if ( version = = WebSocketVersion . V13 | | version = = WebSocketVersion . V00 ) { \n + headers . set ( HttpHeaderNames . ORIGIN , origin ) ; \n + } else { \n + headers . set ( HttpHeaderNames . SEC _ WEBSOCKET _ ORIGIN , origin ) ; \n + } \n
codec - stomp \ src \ main \ java \ io \ netty \ handler \ codec \ stomp \ StompSubframeEncoder . java \n - out . add ( frameBuf ) ; \n - ByteBuf contentBuf = encodeContent ( frame , ctx ) ; \n - out . add ( contentBuf ) ; \n + if ( frame . content ( ) . isReadable ( ) ) { \n + out . add ( frameBuf ) ; \n + ByteBuf contentBuf = encodeContent ( frame , ctx ) ; \n + out . add ( contentBuf ) ; \n + } else { \n + frameBuf . writeByte ( StompConstants . NUL ) ; \n + out . add ( frameBuf ) ; \n + } \n codec - stomp \ src \ test \ java \ io \ netty \ handler \ codec \ stomp \ StompSubframeEncoderTest . java \n + @ Test \n + public void testOneBufferForStompFrameWithEmptyContent ( ) { \n + StompFrame connectedFrame = new DefaultStompFrame ( StompCommand . CONNECTED ) ; \n + connectedFrame . headers ( ) . set ( StompHeaders . VERSION , " 1 . 2 " ) ; \n + \n + assertTrue ( channel . writeOutbound ( connectedFrame ) ) ; \n + \n + ByteBuf stompBuffer = channel . readOutbound ( ) ; \n + \n + assertNotNull ( stompBuffer ) ; \n + assertNull ( channel . readOutbound ( ) ) ; \n + assertEquals ( " CONNECTED \ nversion : 1 . 2 \ n \ n \ 0 " , stompBuffer . toString ( CharsetUtil . UTF _ 8 ) ) ; \n + assertTrue ( stompBuffer . release ( ) ) ; \n + } \n
presto - spark - base \ src \ main \ java \ com \ facebook \ presto \ spark \ PrestoSparkQueryExecutionFactory . java \n + import com . facebook . presto . spark . classloader _ interface . PrestoSparkExecutionException ; \n - import com . facebook . presto . spark . execution . PrestoSparkExecutionException ; \n presto - spark - base \ src \ main \ java \ com \ facebook \ presto \ spark \ execution \ PrestoSparkExecutionExceptionFactory . java \n + import com . facebook . presto . spark . classloader _ interface . PrestoSparkExecutionException ; \n + import com . facebook . presto . spark . classloader _ interface . PrestoSparkNonRetryableExecutionException ; \n + import com . facebook . presto . spark . classloader _ interface . PrestoSparkRetryableExecutionException ; \n presto - spark - base \ src \ test \ java \ com \ facebook \ presto \ spark \ execution \ TestPrestoSparkExecutionExceptionFactory . java \n + import com . facebook . presto . spark . classloader _ interface . PrestoSparkExecutionException ; \n rename from presto - spark - base \ src \ main \ java \ com \ facebook \ presto \ spark \ execution \ PrestoSparkExecutionException . java \n rename to presto - spark - classloader - interface \ src \ main \ java \ com \ facebook \ presto \ spark \ classloader _ interface \ PrestoSparkExecutionException . java \n - package com . facebook . presto . spark . execution ; \n + package com . facebook . presto . spark . classloader _ interface ; \n rename from presto - spark - base \ src \ main \ java \ com \ facebook \ presto \ spark \ execution \ PrestoSparkNonRetryableExecutionException . java \n rename to presto - spark - classloader - interface \ src \ main \ java \ com \ facebook \ presto \ spark \ classloader _ interface \ PrestoSparkNonRetryableExecutionException . java \n - package com . facebook . presto . spark . execution ; \n + package com . facebook . presto . spark . classloader _ interface ; \n rename from presto - spark - base \ src \ main \ java \ com \ facebook \ presto \ spark \ execution \ PrestoSparkRetryableExecutionException . java \n rename to presto - spark - classloader - interface \ src \ main \ java \ com \ facebook \ presto \ spark \ classloader _ interface \ PrestoSparkRetryableExecutionException . java \n - package com . facebook . presto . spark . execution ; \n + package com . facebook . presto . spark . classloader _ interface ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ AddLocalExchanges . java \n - PlanWithProperties source = originalTableWriterNode . getSource ( ) . accept ( this , fixedParallelism ( ) ) ; \n + PlanWithProperties source = originalTableWriterNode . getSource ( ) . accept ( this , defaultParallelism ( session ) ) ; \n
README . md \n - * * Solution for multi - pane layouts . * * Fragments were primarily introduced for extending phone applications to tablet screens , so that you can have both panes A and B on a tablet screen , while either A or B occupy an entire phone screen . If your application is implemented in fragments from the beginning , you will make it easier later to adapt your application to different form - factors . \n - - * * Proper screen - to - screen communication . * * Android ' s API does not provide a proper way of sending complex data ( e . g . , some Java Object ) from one activity to another activity . With fragments , however , you can use the instance of an activity as a channel of communication between its child fragments . \n + - * * Screen - to - screen communication . * * Android ' s API does not provide a proper way of sending complex data ( e . g . , some Java Object ) from one activity to another activity . With fragments , however , you can use the instance of an activity as a channel of communication between its child fragments . Even though this is better than Activity - to - Activity communication , you might want to consider an Event Bus architecture , using e . g . [ Otto ] ( https : / / square . github . io / otto / ) or [ greenrobot EventBus ] ( https : / / github . com / greenrobot / EventBus ) , as a cleaner approach . RxJava can also be used for implementing an Event Bus , in case you want to avoid adding yet another library . \n - * * Fragments are generic enough to not be UI - only . * * You can have a [ fragment without a UI ] ( http : / / developer . android . com / guide / components / fragments . html # AddingWithoutUI ) that works as background workers for the activity . You can take that idea further to create a [ fragment to contain the logic for changing fragments ] ( http : / / stackoverflow . com / questions / 12363790 / how - many - activities - vs - fragments / 12528434 # 12528434 ) , instead of having that logic in the activity . \n
README . md \n - # # # # Avoid testing with Robolectric on Activities , Fragments , and Views \n + # # # # Use Robolectric for unit tests , Robotium for connected ( UI ) tests \n - - - - - - - - - - \n
src \ clj \ clojure \ pprint \ pretty _ writer . clj \n - ( . write this ( subs ( str x ) off ( + off len ) ) ) ) ) \n + ( . write ^ Writer this ( subs ( str x ) off ( + off len ) ) ) ) ) \n
src \ clj \ clojure \ core . clj \n - < classpath > / x / y / , and its root resource is < classpath > / x / y / z . clj . The root \n - resource should contain code to create the lib ' s namespace ( usually by using \n - the ns macro ) and load any additional lib resources . \n + < classpath > / x / y / , and its root resource is < classpath > / x / y / z . clj , or \n + < classpath > / x / y / z . cljc if < classpath > / x / y / z . clj does not exist . The \n + root resource should contain code to create the lib ' s \n + namespace ( usually by using the ns macro ) and load any additional \n + lib resources . \n - at the root of the classpath . Each such file must contain a literal \n - map of symbols , like this : \n + and ' data _ readers . cljc ' at the root of the classpath . Each such file \n + must contain a literal map of symbols , like this : \n - data _ readers . clj or by rebinding this Var . " \n + data _ readers . clj , data _ readers . cljc , or by rebinding this Var . " \n
spring - boot - project \ spring - boot - test \ src \ main \ java \ org \ springframework \ boot \ test \ mock \ web \ SpringBootMockServletContext . java \n - * Copyright 2012 - 2019 the original author or authors . \n + * Copyright 2012 - 2020 the original author or authors . \n + import java . nio . file . Files ; \n - File tempFolder = File . createTempFile ( " spr " , " servlet " ) ; \n - tempFolder . delete ( ) ; \n - tempFolder . mkdirs ( ) ; \n + File tempFolder = Files . createTempDirectory ( " spr - servlet " ) . toFile ( ) ; \n spring - boot - project \ spring - boot \ src \ main \ java \ org \ springframework \ boot \ web \ server \ AbstractConfigurableWebServerFactory . java \n - * Copyright 2012 - 2019 the original author or authors . \n + * Copyright 2012 - 2020 the original author or authors . \n + import java . nio . file . Files ; \n - File tempDir = File . createTempFile ( prefix + " . " , " . " + getPort ( ) ) ; \n - tempDir . delete ( ) ; \n - tempDir . mkdir ( ) ; \n + File tempDir = Files . createTempDirectory ( prefix + " . " + getPort ( ) + " . " ) . toFile ( ) ; \n
spring - boot - project \ spring - boot - autoconfigure \ src \ main \ java \ org \ springframework \ boot \ autoconfigure \ web \ servlet \ UndertowServletWebServerFactoryCustomizer . java \n - factory . setEagerInitFilters ( this . serverProperties . getUndertow ( ) . isEagerFilterInit ( ) ) ; \n + factory . setEagerFilterInit ( this . serverProperties . getUndertow ( ) . isEagerFilterInit ( ) ) ; \n spring - boot - project \ spring - boot - autoconfigure \ src \ test \ java \ org \ springframework \ boot \ autoconfigure \ web \ servlet \ UndertowServletWebServerFactoryCustomizerTests . java \n - assertThat ( factory . isEagerInitFilters ( ) ) . isTrue ( ) ; \n + assertThat ( factory . isEagerFilterInit ( ) ) . isTrue ( ) ; \n - assertThat ( factory . isEagerInitFilters ( ) ) . isFalse ( ) ; \n + assertThat ( factory . isEagerFilterInit ( ) ) . isFalse ( ) ; \n spring - boot - project \ spring - boot \ src \ main \ java \ org \ springframework \ boot \ web \ embedded \ undertow \ UndertowServletWebServerFactory . java \n - private boolean eagerInitFilters = true ; \n + private boolean eagerFilterInit = true ; \n + * @ deprecated since 2 . 4 . 0 in favor of # isEagerFilterInit \n + @ Deprecated \n - return this . eagerInitFilters ; \n + return this . eagerFilterInit ; \n + * @ deprecated since 2 . 4 . 0 in favor of # isEagerFilterInit \n + @ Deprecated \n - this . eagerInitFilters = eagerInitFilters ; \n + this . eagerFilterInit = eagerInitFilters ; \n + } \n + \n + / * * \n + * Return if filters should be eagerly initialized . \n + * @ return { @ code true } if filters are eagerly initialized , otherwise { @ code false } . \n + * @ since 2 . 4 . 0 \n + * / \n + public boolean isEagerFilterInit ( ) { \n + return this . eagerFilterInit ; \n + } \n + \n + / * * \n + * Set whether filters should be eagerly initialized . \n + * @ param eagerFilterInit { @ code true } if filters are eagerly initialized , otherwise \n + * { @ code false } . \n + * @ since 2 . 4 . 0 \n + * / \n + public void setEagerFilterInit ( boolean eagerFilterInit ) { \n + this . eagerFilterInit = eagerFilterInit ; \n - deployment . setEagerFilterInit ( this . eagerInitFilters ) ; \n + deployment . setEagerFilterInit ( this . eagerFilterInit ) ; \n
spring - boot - project \ spring - boot - dependencies \ build . gradle \n - library ( " Prometheus PushGateway " , " 0 . 9 . 0 " ) { \n + library ( " Prometheus PushGateway " , " 0 . 10 . 0 " ) { \n
spring - boot - project \ spring - boot - dependencies \ build . gradle \n - library ( " Selenium HtmlUnit " , " 2 . 46 . 0 " ) { \n + library ( " Selenium HtmlUnit " , " 2 . 47 . 1 " ) { \n
StubLibraries . bp \n - baseline _ file : " : public - api - incompatibilities - with - last - released " , \n + baseline _ file : " : android - incompatibilities . api . public . latest " , \n - baseline _ file : " : system - api - incompatibilities - with - last - released " \n + baseline _ file : " : android - incompatibilities . api . system . latest " \n services \ Android . bp \n - baseline _ file : " : system - server - api - incompatibilities - with - last - released " \n + baseline _ file : " : android - incompatibilities . api . system - server . latest " \n
apex \ Android . bp \n + / / installable implies we ' ll create a non - apex ( platform ) variant , which \n + / / we shouldn ' t ordinarily need ( and it can create issues ) , so disable that . \n + installable : false , \n + \n
src \ test \ java \ org \ junit \ internal \ MethodSorterTest . java \n + import static org . junit . Assert . assertArrayEquals ; \n - Method [ ] fromJvm = DummySortJvm . class . getDeclaredMethods ( ) ; \n - Method [ ] sorted = MethodSorter . getDeclaredMethods ( DummySortJvm . class ) ; \n - assertEquals ( Arrays . asList ( fromJvm ) , Arrays . asList ( sorted ) ) ; \n + Method [ ] fromJvm = DummySortJvm . class . getDeclaredMethods ( ) ; \n + Method [ ] sorted = MethodSorter . getDeclaredMethods ( DummySortJvm . class ) ; \n + assertArrayEquals ( fromJvm , sorted ) ; \n
src \ main \ java \ org \ junit \ ComparisonFailure . java \n + \n + \n + / * * \n + * The length of the shared prefix / suffix of the expected and actual strings . \n + * Equals to zero if the strings do not share a common prefix / suffix . \n + * / \n - String result = DELTA _ START + source . substring ( fPrefix , source . length ( ) - fSuffix + 1 ) + DELTA _ END ; \n + String result = DELTA _ START + source . substring ( fPrefix , source . length ( ) - fSuffix ) + DELTA _ END ; \n - fSuffix = fExpected . length ( ) - expectedSuffix ; \n + fSuffix = fExpected . length ( ) - expectedSuffix - 1 ; \n - int end = Math . min ( fExpected . length ( ) - fSuffix + 1 + fContextLength , fExpected . length ( ) ) ; \n - return fExpected . substring ( fExpected . length ( ) - fSuffix + 1 , end ) + ( fExpected . length ( ) - fSuffix + 1 < fExpected . length ( ) - fContextLength ? ELLIPSIS : " " ) ; \n + int end = Math . min ( fExpected . length ( ) - fSuffix + fContextLength , fExpected . length ( ) ) ; \n + return fExpected . substring ( fExpected . length ( ) - fSuffix , end ) + ( fExpected . length ( ) - fSuffix < fExpected . length ( ) - fContextLength ? ELLIPSIS : " " ) ; \n
presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ s3 \ TestPrestoS3FileSystem . java \n + import com . amazonaws . services . s3 . model . GetObjectRequest ; \n + import com . amazonaws . services . s3 . model . S3Object ; \n + import com . amazonaws . services . s3 . model . S3ObjectInputStream ; \n + import java . io . ByteArrayInputStream ; \n + import java . util . concurrent . atomic . AtomicInteger ; \n + \n + @ Test \n + public void testPrestoS3InputStreamEOS ( ) throws Exception \n + { \n + try ( PrestoS3FileSystem fs = new PrestoS3FileSystem ( ) ) { \n + AtomicInteger readableBytes = new AtomicInteger ( 1 ) ; \n + MockAmazonS3 s3 = new MockAmazonS3 ( ) \n + { \n + @ Override \n + public S3Object getObject ( GetObjectRequest req ) \n + { \n + return new S3Object ( ) \n + { \n + @ Override \n + public S3ObjectInputStream getObjectContent ( ) \n + { \n + return new S3ObjectInputStream ( new ByteArrayInputStream ( new byte [ readableBytes . get ( ) ] ) , null ) ; \n + } \n + } ; \n + } \n + } ; \n + fs . initialize ( new URI ( " s3n : / / test - bucket / " ) , new Configuration ( ) ) ; \n + fs . setS3Client ( s3 ) ; \n + \n + try ( FSDataInputStream inputStream = fs . open ( new Path ( " s3n : / / test - bucket / test " ) ) ) { \n + assertEquals ( inputStream . read ( 0 , new byte [ 2 ] , 0 , 2 ) , 1 ) ; \n + readableBytes . set ( 0 ) ; \n + assertEquals ( inputStream . read ( 0 , new byte [ 1 ] , 0 , 1 ) , - 1 ) ; \n + } \n + } \n + } \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ parquet \ ParquetPageSourceFactory . java \n - return prestoType . equals ( BIGINT ) | | prestoType . equals ( DECIMAL ) ; \n + return prestoType . equals ( BIGINT ) | | prestoType . equals ( DECIMAL ) | | prestoType . equals ( TIMESTAMP ) ; \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveFileFormats . java \n + import static org . apache . hadoop . hive . serde2 . objectinspector . primitive . PrimitiveObjectInspectorFactory . javaTimestampObjectInspector ; \n + TestColumn timestampColumn = new TestColumn ( " column _ name " , javaTimestampObjectInspector , 4L , 4L ) ; \n + / / Make sure INT64 is still readable as Timestamp see https : / / github . com / prestodb / presto / issues / 13855 \n + assertThatFileFormat ( PARQUET ) \n + . withWriteColumns ( ImmutableList . of ( longColumn ) ) \n + . withReadColumns ( ImmutableList . of ( timestampColumn ) ) \n + . withSession ( parquetPageSourceSession ) \n + . isReadableByPageSource ( new ParquetPageSourceFactory ( TYPE _ MANAGER , HDFS _ ENVIRONMENT , STATS , new HadoopFileOpener ( ) ) ) ; \n + \n
build . xml \n + < property name = " hamcrestlibsources " location = " lib / hamcrest - core - 1 . 3 - sources . jar " / > \n - < unjar src = " $ { hamcrestlib } " dest = " $ { hamcrestsrc } " / > \n + < unjar src = " $ { hamcrestlibsources } " dest = " $ { hamcrestsrc } " / > \n
src \ main \ java \ org \ junit \ experimental \ theories \ internal \ AllMembersSupplier . java \n - fMethod = dataPointMethod ; \n + fMethod = dataPointMethod ; \n - fClass = type ; \n + fClass = type ; \n - List < PotentialAssignment > list = new ArrayList < PotentialAssignment > ( ) ; \n + List < PotentialAssignment > list = new ArrayList < PotentialAssignment > ( ) ; \n - Class < ? > type = field . getType ( ) ; \n + Class < ? > type = field . getType ( ) ; \n - for ( int i = 0 ; i < Array . getLength ( array ) ; i + + ) \n + for ( int i = 0 ; i < Array . getLength ( array ) ; i + + ) \n - for ( int i = 0 ; i < Array . getLength ( array ) ; i + + ) { \n + for ( int i = 0 ; i < Array . getLength ( array ) ; i + + ) { \n src \ test \ java \ org \ junit \ tests \ experimental \ theories \ runner \ TypeMatchingBetweenMultiDataPointsMethod . java \n - public static String [ ] [ ] wrongfullyTyped ( ) { \n + public static String [ ] [ ] anotherCorrectlyTyped ( ) { \n
spring - context \ src \ main \ java \ org \ springframework \ scheduling \ support \ BitsCronField . java \n + if ( type = = Type . DAY _ OF _ WEEK & & min = = 7 ) { \n + / / If used as a minimum in a range , Sunday means 0 ( not 7 ) \n + min = 0 ; \n + } \n spring - context \ src \ test \ java \ org \ springframework \ scheduling \ support \ BitsCronFieldTests . java \n + \n + assertThat ( BitsCronField . parseDaysOfWeek ( " 7 - 5 " ) ) . has ( clear ( 0 ) ) . has ( setRange ( 1 , 5 ) ) . has ( clear ( 6 ) ) . has ( set ( 7 ) ) ; \n spring - context \ src \ test \ java \ org \ springframework \ scheduling \ support \ CronExpressionTests . java \n + @ Test \n + public void sundayToFriday ( ) { \n + CronExpression expression = CronExpression . parse ( " 0 0 0 ? * SUN - FRI " ) ; \n + \n + LocalDateTime last = LocalDateTime . of ( 2021 , 2 , 25 , 15 , 0 ) ; \n + LocalDateTime expected = LocalDateTime . of ( 2021 , 2 , 26 , 0 , 0 ) ; \n + LocalDateTime actual = expression . next ( last ) ; \n + assertThat ( actual ) . isNotNull ( ) ; \n + assertThat ( actual ) . isEqualTo ( expected ) ; \n + assertThat ( actual . getDayOfWeek ( ) ) . isEqualTo ( FRIDAY ) ; \n + \n + last = actual ; \n + expected = LocalDateTime . of ( 2021 , 2 , 28 , 0 , 0 ) ; \n + actual = expression . next ( last ) ; \n + assertThat ( actual ) . isNotNull ( ) ; \n + assertThat ( actual ) . isEqualTo ( expected ) ; \n + assertThat ( actual . getDayOfWeek ( ) ) . isEqualTo ( SUNDAY ) ; \n + } \n + \n + \n
spring - context \ src \ main \ java \ org \ springframework \ scheduling \ support \ BitsCronField . java \n - String rangeStr = value . substring ( 0 , slashPos ) ; \n - String deltaStr = value . substring ( slashPos + 1 ) ; \n + String rangeStr = field . substring ( 0 , slashPos ) ; \n + String deltaStr = field . substring ( slashPos + 1 ) ; \n spring - context \ src \ test \ java \ org \ springframework \ scheduling \ support \ BitsCronFieldTests . java \n + \n + assertThat ( BitsCronField . parseMinutes ( " 5 , 10 - 30 / 2 " ) ) \n + . has ( clearRange ( 0 , 5 ) ) \n + . has ( set ( 5 ) ) \n + . has ( clearRange ( 6 , 10 ) ) \n + . has ( set ( 10 , 12 , 14 , 16 , 18 , 20 , 22 , 24 , 26 , 28 , 30 ) ) \n + . has ( clear ( 11 , 13 , 15 , 17 , 19 , 21 , 23 , 25 , 27 , 29 ) ) \n + . has ( clearRange ( 31 , 60 ) ) ; \n
x - pack \ plugin \ ccr \ src \ main \ java \ org \ elasticsearch \ xpack \ ccr \ repository \ CcrRepository . java \n - ListenerTimeouts . wrapWithTimeout ( threadPool , ActionListener . delegateFailure ( listener , ( l , r ) - > { \n - r . incRef ( ) ; \n - threadPool . generic ( ) . execute ( new ActionRunnable < > ( listener ) { \n - @ Override \n - protected void doRun ( ) throws Exception { \n - writeFileChunk ( request . md , r ) ; \n - listener . onResponse ( null ) ; \n - } \n - \n - @ Override \n - public void onAfter ( ) { \n - r . decRef ( ) ; \n - } \n - } ) ; \n - } ) , ccrSettings . getRecoveryActionTimeout ( ) , ThreadPool . Names . GENERIC , GetCcrRestoreFileChunkAction . NAME ) ) ; \n + ListenerTimeouts . wrapWithTimeout ( threadPool , new ActionListener < > ( ) { \n + @ Override \n + public void onResponse ( \n + GetCcrRestoreFileChunkAction . GetCcrRestoreFileChunkResponse getCcrRestoreFileChunkResponse ) { \n + getCcrRestoreFileChunkResponse . incRef ( ) ; \n + threadPool . generic ( ) . execute ( new ActionRunnable < > ( listener ) { \n + @ Override \n + protected void doRun ( ) throws Exception { \n + writeFileChunk ( request . md , getCcrRestoreFileChunkResponse ) ; \n + listener . onResponse ( null ) ; \n + } \n + \n + @ Override \n + public void onAfter ( ) { \n + getCcrRestoreFileChunkResponse . decRef ( ) ; \n + } \n + } ) ; \n + } \n + \n + @ Override \n + public void onFailure ( Exception e ) { \n + threadPool . generic ( ) . execute ( ( ) - > { \n + try { \n + listener . onFailure ( e ) ; \n + } catch ( Exception ex ) { \n + e . addSuppressed ( ex ) ; \n + logger . warn ( ( ) - > \n + new ParameterizedMessage ( " failed to execute failure callback for chunk request " ) , e ) ; \n + } \n + } ) ; \n + } \n + } , ccrSettings . getRecoveryActionTimeout ( ) , ThreadPool . Names . GENERIC , GetCcrRestoreFileChunkAction . NAME ) ) ; \n
x - pack \ plugin \ searchable - snapshots \ src \ test \ java \ org \ elasticsearch \ index \ store \ cache \ SparseFileTrackerTests . java \n - long end = randomLongBetween ( length , length + 1000L ) ; \n + long end = randomLongBetween ( length + 1 , length + 1000L ) ; \n
leakcanary - android - core \ src \ main \ java \ leakcanary \ internal \ activity \ LeakViews . kt \n - clipboard . setPrimaryClip ( ClipData . newPlainText ( \n + clipboard . primaryClip = ClipData . newPlainText ( \n - ) ) \n + ) \n
leakcanary - android - process \ detekt - baseline . xml \n + < ID > NewLineAtEndOfFile : LeakCanaryProcess . kt $ leakcanary . LeakCanaryProcess . kt < / ID > \n
docs \ changelog . md \n - LeakCanary is finally coming to big screens near you ! \n - \n - Best part - no additional setup is required , just enable it like you would for a [ mobile device ] ( getting _ started . md ) . \n - \n - Now whenever there ' s a leak - you will see a helpful Toast appear with all the details . \n - \n - Make sure to check out our new [ Android TV ] ( recipes . md # android - tv ) section and chill ! \n + LeakCanary is finally coming to big screens near you ! Best part - no additional setup is required , just enable it like you would for a [ mobile device ] ( getting _ started . md ) . Now whenever there ' s a leak - you will see a helpful Toast appear with all the details . Make sure to check out our new [ Android TV ] ( recipes . md # android - tv ) section and chill ! \n
leakcanary - android - instrumentation \ src \ androidTest \ java \ leakcanary \ Benchmark . kt \n - var total = 0L \n + val measurements = mutableListOf < Long > ( ) \n - total + = ( end - start ) \n + measurements . add ( end - start ) \n - SharkLog . d { " BenchmarkCode complete . Iterations : $ times , average duration $ { total / times } ms " } \n + measurements . sort ( ) \n + val median : Double = if ( times % 2 = = 0 ) { \n + ( measurements [ times / 2 ] + measurements [ times / 2 - 1 ] ) . toDouble ( ) / 2 \n + } else { \n + measurements [ times / 2 ] . toDouble ( ) \n + } \n + SharkLog . d { " BenchmarkCode complete , $ times iterations . Durations ( ms ) : median $ median , " + \n + " min $ { measurements . first ( ) } , max $ { measurements . last ( ) } " } \n shark - graph \ src \ main \ java \ shark \ HprofHeapGraph . kt \n - / / java . lang . Object is the most accessed class in Heap , so we want to memorize a reference to it \n - private val javaLangObject : HeapClass \n + / / java . lang . Object is the most accessed class in Heap , so we want to memoize a reference to it \n + private val javaLangObjectClass : HeapClass ? = findClassByName ( " java . lang . Object " ) \n - init { \n - val classId = index . classId ( " java . lang . Object " ) ! ! \n - val indexedObject = index . indexedObjectOrNull ( classId ) ! ! \n - javaLangObject = wrapIndexedObject ( indexedObject , classId ) as HeapClass \n - } \n - if ( objectId = = javaLangObject . objectId ) return javaLangObject \n + if ( objectId = = javaLangObjectClass ? . objectId ) return javaLangObjectClass \n
animated - base \ src \ main \ java \ com \ facebook \ fresco \ animation \ bitmap \ wrapper \ AnimatedDrawableBackendFrameRenderer . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . LOCAL ) \n animated - base \ src \ main \ java \ com \ facebook \ imagepipeline \ animated \ base \ AnimatedDrawableBackend . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n - AnimatedDrawableBackend forNewBounds ( Rect bounds ) ; \n + AnimatedDrawableBackend forNewBounds ( @ Nullable Rect bounds ) ; \n animated - base \ src \ main \ java \ com \ facebook \ imagepipeline \ animated \ impl \ AnimatedDrawableBackendImpl . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . LOCAL ) \n - Rect bounds , \n + @ Nullable Rect bounds , \n - private static Rect getBoundsToUse ( AnimatedImage image , Rect targetBounds ) { \n + private static Rect getBoundsToUse ( AnimatedImage image , @ Nullable Rect targetBounds ) { \n - public AnimatedDrawableBackend forNewBounds ( Rect bounds ) { \n + public AnimatedDrawableBackend forNewBounds ( @ Nullable Rect bounds ) { \n - public CloseableReference < Bitmap > getPreDecodedFrame ( int frameNumber ) { \n + public @ Nullable CloseableReference < Bitmap > getPreDecodedFrame ( int frameNumber ) { \n - private synchronized void prepareTempBitmapForThisSize ( int width , int height ) { \n + private synchronized Bitmap prepareTempBitmapForThisSize ( int width , int height ) { \n + return mTempBitmap ; \n - frame . renderFrame ( frameWidth , frameHeight , mTempBitmap ) ; \n + if ( mTempBitmap ! = null ) { \n + frame . renderFrame ( frameWidth , frameHeight , mTempBitmap ) ; \n + } \n - canvas . drawBitmap ( mTempBitmap , mRenderSrcRect , mRenderDstRect , null ) ; \n + if ( mTempBitmap ! = null ) { \n + canvas . drawBitmap ( mTempBitmap , mRenderSrcRect , mRenderDstRect , null ) ; \n + } \n - prepareTempBitmapForThisSize ( frameWidth , frameHeight ) ; \n + mTempBitmap = prepareTempBitmapForThisSize ( frameWidth , frameHeight ) ; \n animated - base \ src \ main \ java \ com \ facebook \ imagepipeline \ animated \ impl \ AnimatedImageCompositor . java \n + import javax . annotation . Nullable ; \n + @ Nullable \n
fbcore \ src \ main \ java \ com \ facebook \ common \ internal \ Predicate . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n fbcore \ src \ main \ java \ com \ facebook \ common \ internal \ Supplier . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n imagepipeline - base \ src \ main \ java \ com \ facebook \ imagepipeline \ bitmaps \ PlatformBitmapFactory . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n - DisplayMetrics display , \n + @ Nullable DisplayMetrics display , \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ BasePostprocessor . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n - return CloseableReference . cloneOrNull ( destBitmapRef ) ; \n + return destBitmapRef . clone ( ) ; \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ Postprocessor . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n
pom . xml \n - < url > http : / / oss . sonatype . org / content / repositories / snapshots < / url > \n + < url > https : / / oss . sonatype . org / content / repositories / snapshots < / url > \n - < url > http : / / oss . sonatype . org / content / repositories / snapshots < / url > \n + < url > https : / / oss . sonatype . org / content / repositories / snapshots < / url > \n
dropwizard - bom \ pom . xml \n - < groupId > com . github . arteam . jadira < / groupId > \n + < groupId > org . jadira . usertype < / groupId > \n - < version > 6 . 0 . 1 . GA - jdk9 < / version > \n + < version > 7 . 0 . 0 . CR1 < / version > \n dropwizard - hibernate \ pom . xml \n - < groupId > com . github . arteam . jadira < / groupId > \n + < groupId > org . jadira . usertype < / groupId > \n dropwizard - hibernate \ src \ test \ java \ io \ dropwizard \ hibernate \ JerseyIntegrationTest . java \n + import com . google . common . collect . ImmutableMap ; \n + dbConfig . setProperties ( ImmutableMap . of ( " hibernate . jdbc . time _ zone " , " UTC " ) ) ; \n + \n dropwizard - hibernate \ src \ test \ java \ io \ dropwizard \ hibernate \ SessionFactoryFactoryTest . java \n - " hibernate . dialect " , " org . hibernate . dialect . HSQLDialect " ) ; \n + " hibernate . dialect " , " org . hibernate . dialect . HSQLDialect " , \n + " hibernate . jdbc . time _ zone " , " UTC " ) ; \n pom . xml \n - < repository > \n - < id > jitpack . io < / id > \n - < url > https : / / jitpack . io < / url > \n - < / repository > \n
src \ main \ java \ io \ reactivex \ plugins \ RxJavaPlugins . java \n + ObjectHelper . requireNonNull ( run , " run is null " ) ; \n + \n src \ test \ java \ io \ reactivex \ plugins \ RxJavaPluginsTest . java \n - assertNull ( RxJavaPlugins . onSchedule ( null ) ) ; \n - \n - assertNull ( RxJavaPlugins . onSchedule ( null ) ) ; \n - \n - \n src \ test \ java \ io \ reactivex \ schedulers \ AbstractSchedulerTests . java \n - } \n + \n + @ Test \n + public void scheduleDirectNullRunnable ( ) { \n + try { \n + getScheduler ( ) . scheduleDirect ( null ) ; \n + fail ( ) ; \n + } catch ( NullPointerException npe ) { \n + assertEquals ( " run is null " , npe . getMessage ( ) ) ; \n + } \n + } \n + \n + @ Test \n + public void scheduleDirectWithDelayNullRunnable ( ) { \n + try { \n + getScheduler ( ) . scheduleDirect ( null , 10 , TimeUnit . MILLISECONDS ) ; \n + fail ( ) ; \n + } catch ( NullPointerException npe ) { \n + assertEquals ( " run is null " , npe . getMessage ( ) ) ; \n + } \n + } \n + \n + @ Test \n + public void schedulePeriodicallyDirectNullRunnable ( ) { \n + try { \n + getScheduler ( ) . schedulePeriodicallyDirect ( null , 5 , 10 , TimeUnit . MILLISECONDS ) ; \n + fail ( ) ; \n + } catch ( NullPointerException npe ) { \n + assertEquals ( " run is null " , npe . getMessage ( ) ) ; \n + } \n + } \n + } \n
build . gradle \n - apply plugin : " java " \n + apply plugin : " java - library " \n - compile " org . reactivestreams : reactive - streams : $ reactiveStreamsVersion " \n + api " org . reactivestreams : reactive - streams : $ reactiveStreamsVersion " \n + jmh " org . reactivestreams : reactive - streams : $ reactiveStreamsVersion " \n - testCompile " junit : junit : $ junitVersion " \n - testCompile " org . mockito : mockito - core : $ mockitoVersion " \n + testImplementation " junit : junit : $ junitVersion " \n + testImplementation " org . mockito : mockito - core : $ mockitoVersion " \n - testCompile " org . reactivestreams : reactive - streams - tck : $ reactiveStreamsVersion " \n - testCompile " org . testng : testng : $ testNgVersion " \n + testImplementation " org . reactivestreams : reactive - streams - tck : $ reactiveStreamsVersion " \n + testImplementation " org . testng : testng : $ testNgVersion " \n
okhttp - logging - interceptor \ src \ main \ java \ com \ squareup \ okhttp \ logging \ HttpLoggingInterceptor . java \n - public void setLevel ( Level level ) { \n + public HttpLoggingInterceptor setLevel ( Level level ) { \n + return this ; \n okhttp - logging - interceptor \ src \ test \ java \ com \ squareup \ okhttp \ logging \ HttpLoggingInterceptorTest . java \n + import static org . junit . Assert . assertSame ; \n + @ Test public void setLevelShouldReturnSameInstanceOfInterceptor ( ) { \n + for ( Level level : Level . values ( ) ) { \n + assertSame ( interceptor , interceptor . setLevel ( level ) ) ; \n + } \n + } \n + \n
okhttp - logging - interceptor \ src \ main \ java \ com \ squareup \ okhttp \ logging \ HttpLoggingInterceptor . java \n + if ( level = = null ) throw new NullPointerException ( " level = = null . Use Level . NONE instead . " ) ; \n okhttp - logging - interceptor \ src \ test \ java \ com \ squareup \ okhttp \ logging \ HttpLoggingInterceptorTest . java \n + import static org . junit . Assert . fail ; \n + @ Test public void setLevelShouldPreventNullValue ( ) { \n + try { \n + interceptor . setLevel ( null ) ; \n + fail ( ) ; \n + } catch ( NullPointerException expected ) { \n + assertEquals ( " level = = null . Use Level . NONE instead . " , expected . getMessage ( ) ) ; \n + } \n + } \n + \n
server \ src \ main \ webapp \ WEB - INF \ appengine - web . xml \n - < instances > 10 < / instances > \n + < instances > 50 < / instances > \n
server \ src \ functions \ functions \ index . js \n + / / Amount of time ( in millis ) before the start of a session that scanning \n + / / of badges can be scanned . 20 minutes . \n + const RES _ SCAN _ BUFFER = 20 * 60 * 1000 ; \n + session . readerStartTime = moment . tz ( sessionResp . time _ start - RES _ SCAN _ BUFFER , ' America / Los _ Angeles ' ) . format ( ' h : mm A ' ) ; \n + readerStartTime : session . readerStartTime , \n
transaction - script \ Readme . md \n - The Hotel class takes care of booking and cancelling a room in a hotel . \n + The ` Hotel ` class takes care of booking and cancelling room reservations . \n
transaction - script \ Readme . md \n - Use the transaction script model when the application has only a small amount of logic and that \n - logic won ' t be extended in the future . \n + Use the Transaction Script pattern when the application has only a small amount of logic and that logic won ' t be extended in the future . \n
core \ src \ main \ java \ io \ plaidapp \ core \ designernews \ data \ api \ DesignerNewsService . kt \n - * Fake - API for searching Designer News . \n + * Search Designer News by scraping website . \n core \ src \ main \ java \ io \ plaidapp \ core \ dribbble \ data \ search \ DribbbleSearchService . kt \n - * Fake - API for searching dribbble \n + * Search Dribbble by scraping website \n
core \ src \ main \ java \ io \ plaidapp \ core \ designernews \ data \ api \ DesignerNewsSearchConverter . kt \n - val searchResults = Jsoup . parse ( body . string ( ) , DesignerNewsSearchService . ENDPOINT ) \n + val searchResults = Jsoup . parse ( body . string ( ) , DesignerNewsService . ENDPOINT ) \n deleted file \n core \ src \ main \ java \ io \ plaidapp \ core \ designernews \ data \ api \ DesignerNewsSearchService . kt \n - / * \n - * Copyright 2018 Google , Inc . \n - * \n - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - * you may not use this file except in compliance with the License . \n - * You may obtain a copy of the License at \n - * \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - * \n - * Unless required by applicable law or agreed to in writing , software \n - * distributed under the License is distributed on an " AS IS " BASIS , \n - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - * See the License for the specific language governing permissions and \n - * limitations under the License . \n - * / \n - \n - package io . plaidapp . core . designernews . data . api \n - \n - import kotlinx . coroutines . Deferred \n - import retrofit2 . Response \n - import retrofit2 . http . GET \n - import retrofit2 . http . Query \n - \n - / * * \n - * Fake - API for searching Designer News \n - * / \n - interface DesignerNewsSearchService { \n - \n - / * * \n - * Returns a list of story IDs \n - * / \n - @ GET ( " search ? t = story " ) \n - fun search ( \n - @ Query ( " q " ) query : String , \n - @ Query ( " p " ) page : Int ? \n - ) : Deferred < Response < List < String > > > \n - \n - companion object { \n - const val ENDPOINT = " https : / / www . designernews . co / " \n - } \n - } \n
README . md \n - compile ' com . facebook . stetho : stetho : 1 . 4 . 1 ' \n + compile ' com . facebook . stetho : stetho : 1 . 4 . 2 ' \n - < version > 1 . 4 . 1 < / version > \n + < version > 1 . 4 . 2 < / version > \n - compile ' com . facebook . stetho : stetho - okhttp3 : 1 . 4 . 1 ' \n + compile ' com . facebook . stetho : stetho - okhttp3 : 1 . 4 . 2 ' \n - compile ' com . facebook . stetho : stetho - urlconnection : 1 . 4 . 1 ' \n + compile ' com . facebook . stetho : stetho - urlconnection : 1 . 4 . 2 ' \n - compile ' com . facebook . stetho : stetho - js - rhino : 1 . 4 . 1 ' \n + compile ' com . facebook . stetho : stetho - js - rhino : 1 . 4 . 2 ' \n gradle . properties \n - VERSION _ NAME = 1 . 4 . 2 - SNAPSHOT \n + VERSION _ NAME = 1 . 4 . 2 \n stetho - js - rhino \ README . md \n - compile ' com . facebook . stetho : stetho - js - rhino : 1 . 4 . 1 ' \n + compile ' com . facebook . stetho : stetho - js - rhino : 1 . 4 . 2 ' \n - < version > 1 . 4 . 1 < / version > \n + < version > 1 . 4 . 2 < / version > \n
gradle . properties \n - VERSION _ NAME = 1 . 4 . 2 \n + VERSION _ NAME = 1 . 4 . 3 - SNAPSHOT \n
cmds \ statsd \ OWNERS \n - jeffreyhuang @ google . com \n - joeo @ google . com \n - jtnguyen @ google . com \n - muhammadq @ google . com \n - ruchirr @ google . com \n - singhtejinder @ google . com \n - tsaichristine @ google . com \n - yaochen @ google . com \n - yro @ google . com \n + baligh @ google . com \n
deleted file \n cmds \ statsd \ src \ OWNERS \n - # Temporary OWNERS Block to assist with migration \n - # bug : 167962588 \n - per - file * atoms . proto = set noparent \n - per - file * atom _ field _ options . proto = set noparent \n - per - file * atoms . proto = baligh @ google . com , yro @ google . com , singhtejinder @ google . com , jeffreyhuang @ google . com \n - per - file * atom _ field _ options . proto = baligh @ google . com , yro @ google . com , singhtejinder @ google . com , jeffreyhuang @ google . com \n core \ proto \ OWNERS \n - \n - # Temporary Block to assist in migration \n - # Bug : 143080132 \n - per - file * enums . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * media _ output _ enum . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * networkcapabilities . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * data _ stall _ event . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * procstats _ enum . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * usb . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * network _ stack . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * tethering . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * dns _ resolver . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * device _ policy . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * launcher . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n - per - file * mediametrics . proto = baligh @ google . com , yro @ google . com , jeffreyhuang @ google . com \n
presto - druid \ src \ main \ java \ com \ facebook \ presto \ druid \ DruidConfig . java \n - this . hadoopResourceConfigFiles = Splitter . on ( ' , ' ) . trimResults ( ) . omitEmptyStrings ( ) . splitToList ( files ) ; \n + if ( files ! = null ) { \n + this . hadoopResourceConfigFiles = Splitter . on ( ' , ' ) . trimResults ( ) . omitEmptyStrings ( ) . splitToList ( files ) ; \n + } \n - this . hadoopResourceConfigFiles = ImmutableList . copyOf ( files ) ; \n + if ( files ! = null ) { \n + this . hadoopResourceConfigFiles = ImmutableList . copyOf ( files ) ; \n + } \n presto - druid \ src \ test \ java \ com \ facebook \ presto \ druid \ TestDruidConfig . java \n + import com . google . common . collect . ImmutableList ; \n - . setDruidBrokerUrl ( null ) \n - . setDruidCoordinatorUrl ( null ) \n - . setDruidSchema ( " druid " ) \n - . setComputePushdownEnabled ( false ) ) ; \n + . setDruidBrokerUrl ( null ) \n + . setDruidCoordinatorUrl ( null ) \n + . setDruidSchema ( " druid " ) \n + . setComputePushdownEnabled ( false ) \n + . setHadoopResourceConfigFiles ( ( String ) null ) ) ; \n + . put ( " druid . hadoop . config . resources " , " / etc / core - site . xml , / etc / hdfs - site . xml " ) \n - . setComputePushdownEnabled ( true ) ; \n + . setComputePushdownEnabled ( true ) \n + . setHadoopResourceConfigFiles ( ImmutableList . of ( " / etc / core - site . xml " , " / etc / hdfs - site . xml " ) ) ; \n
presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveWriteUtils . java \n + import java . io . File ; \n - / / HdfsContext CONTEXT = new HdfsContext ( new ConnectorIdentity ( " test " , Optional . empty ( ) , Optional . empty ( ) ) ) ; \n - / / ViewFS check requires the mount point config \n - hdfsEnvironment . getConfiguration ( CONTEXT , viewfsPath ) . set ( " fs . viewfs . mounttable . ns - default . link . / test - dir " , " file : / / " + Files . createTempDir ( ) ) ; \n + File storageDir = Files . createTempDir ( ) ; \n + / / ViewFS check requires the mount point config , using system temporary folder as the storage \n + hdfsEnvironment . getConfiguration ( CONTEXT , viewfsPath ) . set ( " fs . viewfs . mounttable . ns - default . link . / test - dir " , " file : / / " + storageDir ) ; \n + / / Make temporary folder under an existing data folder without staging folder " . hive - staging " \n + \n + / / Make temporary folder under an existing data folder with an existing staging folder " . hive - staging " \n + temporaryPath = createTemporaryPath ( SESSION , CONTEXT , hdfsEnvironment , viewfsPath ) ; \n + \n + assertEquals ( temporaryPath . getParent ( ) . toString ( ) , " viewfs : / / ns - default / test - dir / . hive - staging " ) ; \n + try { \n + UUID . fromString ( temporaryPath . getName ( ) ) ; \n + } \n + catch ( IllegalArgumentException e ) { \n + fail ( " Expected a UUID folder name " ) ; \n + } \n + \n + / / Make temporary folder under a non - existing data folder ( for new tables ) , it would use the temporary folder of the parent \n + temporaryPath = createTemporaryPath ( SESSION , CONTEXT , hdfsEnvironment , new Path ( viewfsPath , " non - existing " ) ) ; \n + assertEquals ( temporaryPath . getParent ( ) . toString ( ) , " viewfs : / / ns - default / test - dir / . hive - staging " ) ; \n + try { \n + UUID . fromString ( temporaryPath . getName ( ) ) ; \n + } \n + catch ( IllegalArgumentException e ) { \n + fail ( " Expected a UUID folder name " ) ; \n + } \n
gradle . properties \n + version = 2 . 0 . 0 - DP0 - SNAPSHOT \n
gradle . properties \n - version = 2 . 0 . 0 - DP0 - SNAPSHOT \n + release . version = 2 . 0 . 0 - DP0 \n
build . gradle \n - classpath ' com . netflix . nebula : gradle - rxjava - project - plugin : 1 . 12 . 13 ' \n - classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 1 . 12 . 3 ' \n + classpath ' com . netflix . nebula : gradle - rxjava - project - plugin : 2 . + ' \n + classpath ' com . netflix . nebula : gradle - extra - configurations - plugin : 2 . + ' \n + apply plugin : ' java ' \n gradle \ wrapper \ gradle - wrapper . jar \n Binary files a / gradle / wrapper / gradle - wrapper . jar and b / gradle / wrapper / gradle - wrapper . jar differ \n gradle \ wrapper \ gradle - wrapper . properties \n - # Wed Oct 22 12 : 19 : 29 CEST 2014 \n + # Sat Dec 13 00 : 15 : 28 PST 2014 \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 1 . 12 - bin . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 2 . 1 - bin . zip \n
settings . gradle \n - include ' sample - app ' \n + / / include ' sample - app ' \n
test \ clojure \ test _ clojure \ rt . clj \n + ( testing " reflection cannot resolve instance method , with nil literal " \n + ( should - print - err - message \n + # " Reflection warning , . * : \ d + - call to zap can ' t be resolved with arguments of type \ ( nil \ ) \ . \ r ? \ n " \n + ( defn foo [ x ] ( . zap x nil ) ) ) ) \n
src \ jvm \ clojure \ lang \ Util . java \n + / * * \n + * Throw even checked exceptions without being required \n + * to declare them or catch them . Suggested idiom : \n + * < p > \n + * < code > throw sneakyThrow ( some exception ) ; < / code > \n + * / \n + static public RuntimeException sneakyThrow ( Throwable t ) { \n + / / http : / / www . mail - archive . com / javaposse @ googlegroups . com / msg05984 . html \n + if ( t = = null ) \n + throw new NullPointerException ( ) ; \n + Util . < RuntimeException > sneakyThrow0 ( t ) ; \n + return null ; \n + } \n + \n + @ SuppressWarnings ( " unchecked " ) \n + static private < T extends Throwable > void sneakyThrow0 ( Throwable t ) throws T { \n + throw ( T ) t ; \n + \n + } \n + \n
core \ src \ main \ java \ io \ plaidapp \ core \ dagger \ ProductHuntModule . kt \n - import io . plaidapp . core . data . api . DenvelopingConverter \n + import io . plaidapp . core . data . api . DeEnvelopingConverter \n - denvelopingConverter : DenvelopingConverter , \n + deEnvelopingConverter : DeEnvelopingConverter , \n - denvelopingConverter , \n + deEnvelopingConverter , \n - @ Provides \n - fun provideDenvelopingConverter ( gson : Gson ) : DenvelopingConverter { \n - return DenvelopingConverter ( gson ) \n - } \n - \n - denvelopingConverter : DenvelopingConverter , \n + deEnvelopingConverter : DeEnvelopingConverter , \n - . addConverterFactory ( denvelopingConverter ) \n + . addConverterFactory ( deEnvelopingConverter ) \n core \ src \ main \ java \ io \ plaidapp \ core \ dagger \ designernews \ DesignerNewsDataModule . kt \n - import io . plaidapp . core . data . api . DenvelopingConverter \n + import io . plaidapp . core . data . api . DeEnvelopingConverter \n - . addConverterFactory ( DenvelopingConverter ( gson ) ) \n + . addConverterFactory ( DeEnvelopingConverter ( gson ) ) \n rename from core \ src \ main \ java \ io \ plaidapp \ core \ data \ api \ DenvelopingConverter . java \n rename to core \ src \ main \ java \ io \ plaidapp \ core \ data \ api \ DeEnvelopingConverter . java \n - \n - \n - import java . lang . annotation . Annotation ; \n - import java . lang . reflect . Type ; \n - \n + import javax . inject . Inject ; \n + import java . lang . annotation . Annotation ; \n + import java . lang . reflect . Type ; \n + \n - public class DenvelopingConverter extends Converter . Factory { \n + public class DeEnvelopingConverter extends Converter . Factory { \n - public DenvelopingConverter ( @ NonNull Gson gson ) { \n + @ Inject \n + public DeEnvelopingConverter ( @ NonNull Gson gson ) { \n designernews \ src \ main \ java \ io \ plaidapp \ designernews \ dagger \ DataModule . kt \n - import io . plaidapp . core . data . api . DenvelopingConverter \n + import io . plaidapp . core . data . api . DeEnvelopingConverter \n - . addConverterFactory ( DenvelopingConverter ( gson ) ) \n + . addConverterFactory ( DeEnvelopingConverter ( gson ) ) \n
designernews \ src \ main \ java \ io \ plaidapp \ designernews \ dagger \ LoginComponent . kt \n + import io . plaidapp . core . dagger . CoreDataModule \n + import io . plaidapp . core . dagger . designernews . DesignerNewsDataModule \n - @ Component ( modules = [ LoginModule : : class ] ) \n + @ Component ( \n + modules = [ \n + CoreDataModule : : class , \n + DesignerNewsDataModule : : class , \n + SharedPreferencesModule : : class \n + ] \n + ) \n deleted file \n designernews \ src \ main \ java \ io \ plaidapp \ designernews \ dagger \ LoginModule . kt \n - / * \n - * Copyright 2018 Google , Inc . \n - * \n - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - * you may not use this file except in compliance with the License . \n - * You may obtain a copy of the License at \n - * \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - * \n - * Unless required by applicable law or agreed to in writing , software \n - * distributed under the License is distributed on an " AS IS " BASIS , \n - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - * See the License for the specific language governing permissions and \n - * limitations under the License . \n - * / \n - \n - package io . plaidapp . designernews . dagger \n - \n - import dagger . Module \n - import io . plaidapp . core . dagger . CoreDataModule \n - import io . plaidapp . core . dagger . SharedPreferencesModule \n - import io . plaidapp . core . dagger . designernews . DesignerNewsDataModule \n - \n - / * * \n - * Dagger module for [ io . plaidapp . designernews . ui . login . LoginActivity ] . \n - * / \n - @ Module ( \n - includes = [ \n - CoreDataModule : : class , \n - DesignerNewsDataModule : : class , \n - SharedPreferencesModule : : class \n - ] \n - ) \n - class LoginModule \n
framework - jarjar - rules . txt \n + rule com . android . server . vcn . util . * * com . android . server . vcn . repackaged . util . @ 1 \n
services \ java \ com \ android \ server \ SystemServer . java \n - t . traceBegin ( " StartVcnManagementService " ) ; \n - try { \n - vcnManagement = VcnManagementService . create ( context ) ; \n - ServiceManager . addService ( Context . VCN _ MANAGEMENT _ SERVICE , vcnManagement ) ; \n - } catch ( Throwable e ) { \n - reportWtf ( " starting VCN Management Service " , e ) ; \n - } \n - t . traceEnd ( ) ; \n - \n + t . traceBegin ( " StartVcnManagementService " ) ; \n + try { \n + vcnManagement = VcnManagementService . create ( context ) ; \n + ServiceManager . addService ( Context . VCN _ MANAGEMENT _ SERVICE , vcnManagement ) ; \n + } catch ( Throwable e ) { \n + reportWtf ( " starting VCN Management Service " , e ) ; \n + } \n + t . traceEnd ( ) ; \n + \n - t . traceBegin ( " MakeVcnManagementServiceReady " ) ; \n - try { \n - if ( vcnManagementF ! = null ) { \n - vcnManagementF . systemReady ( ) ; \n - } \n - } catch ( Throwable e ) { \n - reportWtf ( " making VcnManagementService ready " , e ) ; \n - } \n - t . traceEnd ( ) ; \n + t . traceBegin ( " MakeVcnManagementServiceReady " ) ; \n + try { \n + if ( vcnManagementF ! = null ) { \n + vcnManagementF . systemReady ( ) ; \n + } \n + } catch ( Throwable e ) { \n + reportWtf ( " making VcnManagementService ready " , e ) ; \n + } \n + t . traceEnd ( ) ; \n
build . gradle \n - versionName = ' 6 . 1 . 2 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n - versionCodeBase = 61020 / / XYZZM ; M = Module ( tv , mobile ) \n + versionName = ' 7 . 0 . 0 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n + versionCodeBase = 70000 / / XYYZZM ; M = Module ( tv , mobile ) \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ MainActivity . kt \n + val isTopLevelDestination = TOP _ LEVEL _ DESTINATIONS . contains ( destination . id ) \n + val lockMode = if ( isTopLevelDestination ) { \n + DrawerLayout . LOCK _ MODE _ UNLOCKED \n + } else { \n + DrawerLayout . LOCK _ MODE _ LOCKED _ CLOSED \n + } \n + drawer . setDrawerLockMode ( lockMode ) \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ starlarkbuildapi \ cpp \ CcModuleApi . java \n - doc = " Creates a < code > LinkingContext < / code > . " , \n + doc = " Creates a < code > LinkerInput < / code > . " , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ remote \ RemoteActionInputFetcher . java \n + import com . google . devtools . build . lib . actions . cache . VirtualActionInput . EmptyActionInput ; \n - VirtualActionInput virtualActionInput = ( VirtualActionInput ) input ; \n - Path outputPath = execRoot . getRelative ( virtualActionInput . getExecPath ( ) ) ; \n - SandboxHelpers . atomicallyWriteVirtualInput ( virtualActionInput , outputPath , " . remote " ) ; \n + if ( ! ( input instanceof EmptyActionInput ) ) { \n + VirtualActionInput virtualActionInput = ( VirtualActionInput ) input ; \n + Path outputPath = execRoot . getRelative ( virtualActionInput . getExecPath ( ) ) ; \n + SandboxHelpers . atomicallyWriteVirtualInput ( virtualActionInput , outputPath , " . remote " ) ; \n + } \n src \ test \ java \ com \ google \ devtools \ build \ lib \ remote \ RemoteActionInputFetcherTest . java \n + import com . google . devtools . build . lib . exec . SpawnInputExpander ; \n + Path dev = fs . getPath ( " / dev " ) ; \n + dev . createDirectory ( ) ; \n + dev . setWritable ( false ) ; \n + @ Test \n + public void testStagingEmptyVirtualActionInput ( ) throws Exception { \n + / / arrange \n + MetadataProvider metadataProvider = new StaticMetadataProvider ( new HashMap < > ( ) ) ; \n + RemoteCache remoteCache = newCache ( options , digestUtil , new HashMap < > ( ) ) ; \n + RemoteActionInputFetcher actionInputFetcher = \n + new RemoteActionInputFetcher ( remoteCache , execRoot , RequestMetadata . getDefaultInstance ( ) ) ; \n + \n + / / act \n + actionInputFetcher . prefetchFiles ( \n + ImmutableList . of ( SpawnInputExpander . EMPTY _ FILE ) , metadataProvider ) ; \n + \n + / / assert that nothing happened \n + assertThat ( actionInputFetcher . downloadedFiles ( ) ) . isEmpty ( ) ; \n + assertThat ( actionInputFetcher . downloadsInProgress ) . isEmpty ( ) ; \n + } \n + \n
backends \ gdx - backend - robovm \ src \ com \ badlogic \ gdx \ backends \ iosrobovm \ DefaultIOSInput . java \n - int keyCode = getGdxKeyCode ( key . getKeyCode ( ) ) ; \n + int keyCode = getGdxKeyCode ( key ) ; \n - protected int getGdxKeyCode ( UIKeyboardHIDUsage keyCode ) { \n + protected int getGdxKeyCode ( UIKey key ) { \n + UIKeyboardHIDUsage keyCode ; \n + try { \n + keyCode = key . getKeyCode ( ) ; \n + } catch ( IllegalArgumentException e ) { \n + return Keys . UNKNOWN ; \n + } \n + \n
backends \ gdx - backend - robovm \ src \ com \ badlogic \ gdx \ backends \ iosrobovm \ DefaultIOSInput . java \n + import org . robovm . apple . foundation . Foundation ; \n + import org . robovm . apple . gamecontroller . GCKeyboard ; \n - if ( peripheral = = Peripheral . HardwareKeyboard ) return hadHardwareKeyEvent ; \n + if ( peripheral = = Peripheral . HardwareKeyboard ) \n + return Foundation . getMajorSystemVersion ( ) > = 14 ? GCKeyboard . getCoalescedKeyboard ( ) ! = null : hadHardwareKeyEvent ; \n extensions \ gdx - setup \ res \ com \ badlogic \ gdx \ setup \ resources \ ios \ robovm . xml \n + < framework > GameController < / framework > \n tests \ gdx - tests - iosrobovm \ robovm . xml \n + < framework > GameController < / framework > \n
backends \ gdx - backend - android \ src \ com \ badlogic \ gdx \ backends \ android \ AndroidInput . java \n + / / If the key is held sufficiently long that it repeats , then the initial down is followed \n + / / additional key events with ACTION _ DOWN and a non - zero value for getRepeatCount ( ) . \n + / / We are only interested in the first key down event here and must ignore all others \n + if ( e . getAction ( ) = = android . view . KeyEvent . ACTION _ DOWN & & e . getRepeatCount ( ) > 0 ) \n + return keysToCatch . contains ( keyCode ) ; \n + \n
backends \ gdx - backend - android \ src \ com \ badlogic \ gdx \ backends \ android \ AndroidDaydream . java \n + \n + / / detect an already connected bluetooth keyboardAvailable \n + if ( getResources ( ) . getConfiguration ( ) . keyboard ! = Configuration . KEYBOARD _ NOKEYS ) \n + this . getInput ( ) . keyboardAvailable = true ; \n backends \ gdx - backend - android \ src \ com \ badlogic \ gdx \ backends \ android \ AndroidFragmentApplication . java \n + \n + / / detect an already connected bluetooth keyboardAvailable \n + if ( getResources ( ) . getConfiguration ( ) . keyboard ! = Configuration . KEYBOARD _ NOKEYS ) \n + this . getInput ( ) . keyboardAvailable = true ; \n
client \ rest - high - level \ src \ test \ java \ org \ elasticsearch \ client \ MachineLearningIT . java \n - new GetTrainedModelsRequest ( modelIdCompressed ) . setDecompressDefinition ( true ) . setIncludeDefinition ( true ) , \n + new GetTrainedModelsRequest ( modelIdCompressed ) . setDecompressDefinition ( true ) . includeDefinition ( ) , \n - new GetTrainedModelsRequest ( modelId + " * " ) . setIncludeDefinition ( false ) . setAllowNoMatch ( true ) , \n + new GetTrainedModelsRequest ( modelId + " * " ) . setAllowNoMatch ( true ) , \n - new GetTrainedModelsRequest ( modelId + " * " ) . setIncludeDefinition ( false ) . setAllowNoMatch ( true ) , \n + new GetTrainedModelsRequest ( modelId + " * " ) . setAllowNoMatch ( true ) , \n - new GetTrainedModelsRequest ( " lang _ ident _ model _ 1 " ) . setIncludeDefinition ( true ) , \n + new GetTrainedModelsRequest ( " lang _ ident _ model _ 1 " ) . includeDefinition ( ) , \n x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ rest \ cat \ RestCatTrainedModelsAction . java \n - GetTrainedModelsAction . Request modelsAction = new GetTrainedModelsAction . Request ( modelId , false , null ) ; \n + GetTrainedModelsAction . Request modelsAction = new GetTrainedModelsAction . Request ( modelId , null , Collections . emptySet ( ) ) ; \n
x - pack \ qa \ password - protected - keystore \ src \ test \ java \ org \ elasticsearch \ password _ protected _ keystore \ ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66951 " ) \n
presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ reader \ SliceDictionarySelectiveReader . java \n + dictionary = null ; \n + currentDictionaryData = null ; \n + rowGroupDictionaryLength = null ; \n + stripeDictionaryData = null ; \n + stripeDictionaryLength = null ; \n + values = null ; \n + outputPositions = null ; \n presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ reader \ SliceDirectSelectiveStreamReader . java \n + dataAsSlice = null ; \n + data = null ; \n + lengthVector = null ; \n + isNullVector = null ; \n + offsets = null ; \n + outputPositions = null ; \n
presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ reader \ LongDictionarySelectiveStreamReader . java \n + values = null ; \n + nulls = null ; \n + outputPositions = null ; \n + dictionary = null ; \n + dictionaryFilterStatus = null ; \n + \n + dataStreamSource = null ; \n + dataStream = null ; \n + dictionaryDataStreamSource = null ; \n + \n presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ reader \ LongDirectSelectiveStreamReader . java \n + values = null ; \n + outputPositions = null ; \n + \n + presentStream = null ; \n + presentStreamSource = null ; \n + dataStream = null ; \n + dataStreamSource = null ; \n + \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ BeaconConfigHelper . java \n + closeUriBeacon ( ) ; \n android \ PhysicalWeb \ app \ version . properties \n - # Thu Oct 23 12 : 49 : 30 PDT 2014 \n + # Fri Oct 17 12 : 47 : 40 PDT 2014 \n - BUILD = 743 \n + BUILD = 680 \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ BeaconConfigHelper . java \n - closeUriBeacon ( ) ; \n
packages \ SettingsLib \ HelpUtils \ res \ values - ar \ strings . xml \n - < string name = " help _ feedback _ label " msgid = " 7106780063063027882 " > " المساعدة والتعليقات " < / string > \n + < string name = " help _ feedback _ label " msgid = " 7106780063063027882 " > " المساعدة والملاحظات والآراء " < / string > \n packages \ SettingsLib \ HelpUtils \ res \ values - es \ strings . xml \n - < string name = " help _ feedback _ label " msgid = " 7106780063063027882 " > " Ayuda y sugerencias " < / string > \n + < string name = " help _ feedback _ label " msgid = " 7106780063063027882 " > " Ayuda y comentarios " < / string > \n
packages \ CarSystemUI \ res \ values - uz \ strings . xml \n - < string name = " hvac _ min _ text " msgid = " 8167124789068494624 " > " Daq . " < / string > \n + < string name = " hvac _ min _ text " msgid = " 8167124789068494624 " > " Min " < / string > \n
gradle . properties \n - version = 0 . 17 . 0 \n + version = 0 . 17 . 1 - SNAPSHOT \n
gradle . properties \n - version = 0 . 19 . 1 - SNAPSHOT \n + version = 0 . 19 . 1 \n
core \ api \ current . txt \n + field public static final String KEY _ ENABLE _ PRESENCE _ PUBLISH _ BOOL = " ims . enable _ presence _ publish _ bool " ; \n telephony \ java \ android \ telephony \ CarrierConfigManager . java \n - * Flag indicating whether the carrier supports RCS presence indication for \n - * User Capability Exchange ( UCE ) . When presence is supported , the device should use the \n + * Flag indicating whether or not the carrier supports the periodic exchange of phone numbers \n + * in the user ' s address book with the carrier ' s presence server in order to retrieve the RCS \n + * capabilities for each contact used in the RCS User Capability Exchange ( UCE ) procedure . See \n + * RCC . 71 , section 3 for more information . \n + * < p > \n + * The flag { @ link Ims # KEY _ ENABLE _ PRESENCE _ PUBLISH _ BOOL } must also be enabled if this flag is \n + * enabled , as sending a periodic SIP PUBLISH with this device ' s RCS capabilities is a \n + * requirement for capability exchange to begin . \n + * < p > \n + * When presence is supported , the device should use the \n + / * * \n + * A boolean flag specifying whether or not this carrier supports the device notifying the \n + * network of its RCS capabilities using the SIP PUBLISH procedure defined for User \n + * Capability Exchange ( UCE ) . See RCC . 71 , section 3 for more information . \n + * < p > \n + * If this key ' s value is set to false , the procedure for RCS contact capability exchange \n + * via SIP SUBSCRIBE / NOTIFY will also be disabled internally , and \n + * { @ link # KEY _ USE _ RCS _ PRESENCE _ BOOL } must also be set to false to ensure apps do not \n + * improperly think that capability exchange via SIP PUBLISH is enabled . \n + * < p > The default value for this key is { @ code false } . \n + * / \n + public static final String KEY _ ENABLE _ PRESENCE _ PUBLISH _ BOOL = \n + KEY _ PREFIX + " enable _ presence _ publish _ bool " ; \n + \n + defaults . putBoolean ( KEY _ ENABLE _ PRESENCE _ PUBLISH _ BOOL , false ) ; \n
core \ api \ system - current . txt \n + method public void triggerSipDelegateDeregistration ( ) ; \n + method public void updateSipDelegateRegistration ( ) ; \n telephony \ java \ android \ telephony \ ims \ aidl \ IImsRegistration . aidl \n - } \n + oneway void triggerUpdateSipDelegateRegistration ( ) ; \n + oneway void triggerSipDelegateDeregistration ( ) ; \n + } \n telephony \ java \ android \ telephony \ ims \ stub \ ImsRegistrationImplBase . java \n + * < p > \n + * Note : There is no guarantee on the thread that the calls from the framework will be called on . It \n + * is the implementors responsibility to handle moving the calls to a working thread if required . \n + \n + @ Override \n + public void triggerUpdateSipDelegateRegistration ( ) { \n + ImsRegistrationImplBase . this . updateSipDelegateRegistration ( ) ; \n + } \n + \n + @ Override \n + public void triggerSipDelegateDeregistration ( ) { \n + ImsRegistrationImplBase . this . triggerSipDelegateDeregistration ( ) ; \n + } \n - * @ hide \n - * @ hide \n
src \ test \ java \ org \ junit \ tests \ junit3compatibility \ JUnit38ClassRunnerTest . java \n - public static class RejectAllFilter extends Filter { \n + public static class RejectAllTestsFilter extends Filter { \n - if ( description . isTest ( ) ) { \n - return false ; \n - } \n - return true ; \n + return description . isSuite ( ) ; \n - runner . filter ( new RejectAllFilter ( ) ) ; \n + runner . filter ( new RejectAllTestsFilter ( ) ) ; \n
src \ main \ java \ org \ junit \ internal \ runners \ JUnit38ClassRunner . java \n - Method m = test . getClass ( ) . getDeclaredMethod ( test . getName ( ) ) ; \n + Method m = test . getClass ( ) . getMethod ( test . getName ( ) ) ; \n src \ test \ java \ org \ junit \ tests \ junit3compatibility \ JUnit38ClassRunnerTest . java \n + public static class DerivedAnnotatedMethod extends JUnit3ClassWithAnnotatedMethod { \n + } \n + \n + assertAnnotationFiltering ( runner ) ; \n + } \n + \n + @ Test \n + public void getDescriptionWithAnnotationInSuper ( ) { \n + JUnit38ClassRunner runner = new JUnit38ClassRunner ( DerivedAnnotatedMethod . class ) ; \n + assertAnnotationFiltering ( runner ) ; \n + } \n + \n + private void assertAnnotationFiltering ( JUnit38ClassRunner runner ) { \n
settings . gradle \n - settings . gradle . rootProject . getBuildDir ( ) . mkdirs ( ) \n - new File ( settings . gradle . rootProject . getBuildDir ( ) , " build - scan - uri . txt " ) . text = " ( build scan not generated ) " \n + File buildDir = settings . gradle . rootProject . getBuildDir ( ) \n + buildDir . mkdirs ( ) \n + new File ( buildDir , " build - scan - uri . txt " ) . text = " ( build scan not generated ) " \n - new File ( settings . gradle . rootProject . getBuildDir ( ) , " build - scan - uri . txt " ) . text = " $ { scan . buildScanUri } \ n " \n + if ( buildDir . exists ( ) ) { \n + new File ( buildDir , " build - scan - uri . txt " ) . text = " $ { scan . buildScanUri } \ n " \n + } \n
README . md \n + # # Micro - Benchmarks \n + \n + See the [ Micro - Benchmarks ] ( https : / / github . com / spring - projects / spring - framework / wiki / Micro - Benchmarks ) Wiki page . \n + \n build . gradle \n + id " me . champeau . gradle . jmh " version " 0 . 5 . 0 " apply false \n gradle \ spring - module . gradle \n + apply plugin : ' me . champeau . gradle . jmh ' \n + dependencies { \n + jmh ' org . openjdk . jmh : jmh - core : 1 . 23 ' \n + jmh ' org . openjdk . jmh : jmh - generator - annprocess : 1 . 23 ' \n + jmh ' net . sf . jopt - simple : jopt - simple : 4 . 6 ' \n + } \n + jmh { \n + duplicateClassesStrategy = DuplicatesStrategy . EXCLUDE \n + } \n + \n src \ checkstyle \ checkstyle - suppressions . xml \n + < ! - - JMH benchmarks - - > \n + < suppress files = " [ \ \ / ] src [ \ \ / ] jmh [ \ \ / ] java [ \ \ / ] org [ \ \ / ] springframework [ \ \ / ] " checks = " JavadocVariable | JavadocStyle " / > \n + \n
spring - webmvc \ src \ main \ java \ org \ springframework \ web \ servlet \ handler \ AbstractUrlHandlerMapping . java \n - * Copyright 2002 - 2020 the original author or authors . \n + * Copyright 2002 - 2021 the original author or authors . \n - if ( pattern . matches ( path ) ) { \n + if ( pattern . matches ( path . pathWithinApplication ( ) ) ) { \n - PathContainer pathWithinMapping = pattern . extractPathWithinPattern ( path ) ; \n + PathContainer pathWithinMapping = pattern . extractPathWithinPattern ( path . pathWithinApplication ( ) ) ; \n spring - webmvc \ src \ test \ java \ org \ springframework \ web \ servlet \ handler \ SimpleUrlHandlerMappingTests . java \n - * Copyright 2002 - 2020 the original author or authors . \n + * Copyright 2002 - 2021 the original author or authors . \n + request = PathPatternsTestUtils . initRequest ( " GET " , " / app " , " / welcome . x " , usePathPatterns ) ; \n + chain = getHandler ( hm , request ) ; \n + assertThat ( chain . getHandler ( ) ) . isSameAs ( otherBean ) ; \n + assertThat ( request . getAttribute ( PATH _ WITHIN _ HANDLER _ MAPPING _ ATTRIBUTE ) ) . isEqualTo ( " welcome . x " ) ; \n + assertThat ( request . getAttribute ( BEST _ MATCHING _ HANDLER _ ATTRIBUTE ) ) . isEqualTo ( otherBean ) ; \n + \n + \n
ci \ images \ spring - framework - ci - image \ Dockerfile \n - FROM ubuntu : focal - 20201106 \n + FROM ubuntu : focal - 20210119 \n ci \ images \ spring - framework - jdk11 - ci - image \ Dockerfile \n - FROM ubuntu : focal - 20201106 \n + FROM ubuntu : focal - 20210119 \n ci \ images \ spring - framework - jdk15 - ci - image \ Dockerfile \n - FROM ubuntu : focal - 20201106 \n + FROM ubuntu : focal - 20210119 \n
new file \n core \ tests \ uwbtests \ OWNERS \n + include / core / java / android / uwb / OWNERS \n
new file \n core \ java \ android \ uwb \ OWNERS \n + bstack @ google . com \n + eliptus @ google . com \n + jsolnit @ google . com \n + siyuanh @ google . com \n + zachoverflow @ google . com \n
codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ Http2CodecUtil . java \n - private static final ByteBuf EMPTY _ PING = \n - unreleasableBuffer ( directBuffer ( PING _ FRAME _ PAYLOAD _ LENGTH ) . writeZero ( PING _ FRAME _ PAYLOAD _ LENGTH ) ) \n - . asReadOnly ( ) ; \n - / * * \n - * Returns a buffer filled with all zeros that is the appropriate length for a PING frame . \n - * / \n - public static ByteBuf emptyPingBuf ( ) { \n - / / Return a duplicate so that modifications to the reader index will not affect the original buffer . \n - return EMPTY _ PING . retainedDuplicate ( ) ; \n - } \n - \n
codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ DefaultHttp2ConnectionDecoder . java \n - logger . info ( " { } ignoring { } frame for stream { } { } " , ctx . channel ( ) , frameName , \n + logger . info ( " { } ignoring { } frame for stream { } " , ctx . channel ( ) , frameName , \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ ReferenceCountedOpenSslEngine . java \n - sslWrote = SSL . writeToSSL ( ssl , Buffer . address ( src ) + pos , len ) ; \n + sslWrote = SSL . writeToSSL ( ssl , bufferAddress ( src ) + pos , len ) ; \n - SSL . bioSetByteBuffer ( networkBIO , Buffer . address ( src ) + pos , len , false ) ; \n + SSL . bioSetByteBuffer ( networkBIO , bufferAddress ( src ) + pos , len , false ) ; \n - sslRead = SSL . readFromSSL ( ssl , Buffer . address ( dst ) + pos , dst . limit ( ) - pos ) ; \n + sslRead = SSL . readFromSSL ( ssl , bufferAddress ( dst ) + pos , dst . limit ( ) - pos ) ; \n - SSL . bioSetByteBuffer ( networkBIO , Buffer . address ( dst ) + dst . position ( ) , dst . remaining ( ) , \n + SSL . bioSetByteBuffer ( networkBIO , bufferAddress ( dst ) + dst . position ( ) , dst . remaining ( ) , \n + private static long bufferAddress ( ByteBuffer b ) { \n + assert b . isDirect ( ) ; \n + if ( PlatformDependent . hasUnsafe ( ) ) { \n + return PlatformDependent . directBufferAddress ( b ) ; \n + } \n + return Buffer . address ( b ) ; \n + } \n + \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ SslHandler . java \n + outboundClosed = true ; \n + outboundClosed = true ; \n + engine . closeOutbound ( ) ; \n + \n - outboundClosed = true ; \n - engine . closeOutbound ( ) ; \n - \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ HttpUrlConnectionNetworkFetcher . java \n + @ Nullable private final Map < String , String > mRequestHeaders ; \n - this ( null , RealtimeSinceBootClock . get ( ) ) ; \n + this ( null , null , RealtimeSinceBootClock . get ( ) ) ; \n - this ( null , RealtimeSinceBootClock . get ( ) ) ; \n + this ( null , null , RealtimeSinceBootClock . get ( ) ) ; \n - this ( userAgent , RealtimeSinceBootClock . get ( ) ) ; \n + this ( userAgent , null , RealtimeSinceBootClock . get ( ) ) ; \n + mHttpConnectionTimeout = httpConnectionTimeout ; \n + } \n + \n + public HttpUrlConnectionNetworkFetcher ( \n + String userAgent , @ Nullable Map < String , String > requestHeaders , int httpConnectionTimeout ) { \n + this ( userAgent , requestHeaders , RealtimeSinceBootClock . get ( ) ) ; \n - HttpUrlConnectionNetworkFetcher ( @ Nullable String userAgent , MonotonicClock monotonicClock ) { \n + HttpUrlConnectionNetworkFetcher ( \n + @ Nullable String userAgent , \n + @ Nullable Map < String , String > requestHeaders , \n + MonotonicClock monotonicClock ) { \n + mRequestHeaders = requestHeaders ; \n + if ( mRequestHeaders ! = null ) { \n + for ( Map . Entry < String , String > entry : mRequestHeaders . entrySet ( ) ) { \n + connection . setRequestProperty ( entry . getKey ( ) , entry . getValue ( ) ) ; \n + } \n + } \n imagepipeline \ src \ test \ java \ com \ facebook \ imagepipeline \ producers \ HttpUrlConnectionNetworkFetcherTest . java \n - mFetcher = new HttpUrlConnectionNetworkFetcher ( " user - agent - blabla " , mock ( MonotonicClock . class ) ) ; \n + mFetcher = \n + new HttpUrlConnectionNetworkFetcher ( " user - agent - blabla " , null , mock ( MonotonicClock . class ) ) ; \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ PriorityNetworkFetcher . java \n - @ VisibleForTesting \n - static class PriorityFetchState < FETCH _ STATE extends FetchState > extends FetchState { \n - final FETCH _ STATE delegatedState ; \n + public static class PriorityFetchState < FETCH _ STATE extends FetchState > extends FetchState { \n + public final FETCH _ STATE delegatedState ; \n
services \ core \ java \ com \ android \ server \ connectivity \ Vpn . java \n - private int mLegacyState = LegacyVpnInfo . STATE _ DISCONNECTED ; \n + private int mLegacyState ; \n + mLegacyState = LegacyVpnInfo . STATE _ DISCONNECTED ; \n + mLegacyState = LegacyVpnInfo . STATE _ CONNECTING ; \n
tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n - / / Captive portal change shouldn ' t update ifaces \n - mCellNetworkAgent . addCapability ( NetworkCapabilities . NET _ CAPABILITY _ CAPTIVE _ PORTAL ) ; \n + / / Temp metered change shouldn ' t update ifaces \n + mCellNetworkAgent . addCapability ( NetworkCapabilities . NET _ CAPABILITY _ TEMPORARILY _ NOT _ METERED ) ; \n
version . txt \n - 3 . 7 . 2 \n + 3 . 7 . 3 - SNAPSHOT \n
CHANGELOG . md \n + # # 4 . 3 . 2 ( YYYY - MM - DD ) \n + \n + # # # Bug Fixes \n + \n + * Throws a better exception message when calling ` RealmObjectSchema . addField ( ) ` with a ` RealmModel ` class ( # 3388 ) . \n + \n + \n realm \ realm - library \ src \ androidTest \ java \ io \ realm \ RealmObjectSchemaTests . java \n + @ Test \n + public void addField _ realmModelThrows ( ) { \n + if ( type = = ObjectSchemaType . IMMUTABLE ) { \n + return ; \n + } \n + try { \n + schema . addField ( " test " , Dog . class ) ; \n + fail ( ) ; \n + } catch ( IllegalArgumentException e ) { \n + assertThat ( e . getMessage ( ) , CoreMatchers . containsString ( \n + " Use ' addRealmObjectField ( ) ' instead to add fields that link to other RealmObjects : " ) ) ; \n + } \n + } \n + \n realm \ realm - library \ src \ main \ java \ io \ realm \ MutableRealmObjectSchema . java \n + } else if ( RealmModel . class . isAssignableFrom ( fieldType ) ) { \n + throw new IllegalArgumentException ( String . format ( Locale . US , \n + " Use ' addRealmObjectField ( ) ' instead to add fields that link to other RealmObjects : % s ( % s ) " , \n + fieldName , fieldType ) ) ; \n realm \ realm - library \ src \ main \ java \ io \ realm \ RealmObjectSchema . java \n - * @ throws UnsupportedOperationException if this { @ link RealmObjectSchema } is immutable . \n + * @ throws UnsupportedOperationException if this { @ link RealmObjectSchema } is immutable . \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ remote \ RemoteModule . java \n - boolean enableGrpcCache = GrpcCacheClient . isRemoteCacheOptions ( remoteOptions ) ; \n + / / If - - remote _ cache is empty but - - remote _ executor is not , endpoint for cache should be the one \n + / / for execution . \n + if ( enableRemoteExecution & & Strings . isNullOrEmpty ( remoteOptions . remoteCache ) ) { \n + remoteOptions . remoteCache = remoteOptions . remoteExecutor ; \n + } \n + boolean enableGrpcCache = GrpcCacheClient . isRemoteCacheOptions ( remoteOptions ) ; \n - if ( Strings . isNullOrEmpty ( remoteOptions . remoteCache ) \n - | | remoteOptions . remoteCache . equals ( remoteOptions . remoteExecutor ) ) { \n + if ( remoteOptions . remoteCache . equals ( remoteOptions . remoteExecutor ) ) { \n
. bazelci \ postsubmit . yml \n - " / / src : bazel _ jdk _ minimal " \n - build \n + kythe _ ubuntu2004 : \n + shell _ commands : \n + - sed - i . bak - e ' s / ^ # android _ sdk _ repository / android _ sdk _ repository / ' \n + - e ' s / ^ # android _ ndk _ repository / android _ ndk _ repository / ' WORKSPACE \n + - rm - f WORKSPACE . bak \n + index _ flags : \n + - " - - define = kythe _ corpus = github . com / bazelbuild / bazel " \n + index _ targets _ query : " kind ( \ " cc _ ( binary | library | test | proto _ library ) rule \ " , . . . ) union kind ( \ " java _ ( binary | import | library | plugin | test | proto _ library ) rule \ " , . . . ) union kind ( \ " proto _ library rule \ " , . . . ) " \n + index _ upload _ policy : Always \n + index _ upload _ gcs : True \n
core \ api \ current . txt \n - method public int getNrState ( ) ; \n services \ core \ java \ com \ android \ server \ connectivity \ DataConnectionStats . java \n + private int mNrState = NetworkRegistrationInfo . NR _ STATE _ NONE ; \n - if ( regInfo ! = null & & regInfo . getNrState ( ) = = NetworkRegistrationInfo . NR _ STATE _ CONNECTED ) { \n + if ( mNrState = = NetworkRegistrationInfo . NR _ STATE _ CONNECTED ) { \n + mNrState = state . getNrState ( ) ; \n telephony \ java \ android \ telephony \ NetworkRegistrationInfo . java \n + * @ hide \n
packages \ Connectivity \ framework \ src \ android \ net \ IpPrefix . java \n + import com . android . net . module . util . NetUtils ; \n + \n - NetworkUtils . maskRawAddress ( address , prefixLength ) ; \n + NetUtils . maskRawAddress ( address , prefixLength ) ; \n - NetworkUtils . maskRawAddress ( addrBytes , prefixLength ) ; \n + NetUtils . maskRawAddress ( addrBytes , prefixLength ) ; \n - NetworkUtils . maskRawAddress ( otherAddress , prefixLength ) ; \n + NetUtils . maskRawAddress ( otherAddress , prefixLength ) ; \n packages \ Connectivity \ framework \ src \ android \ net \ NetworkUtils . java \n - import java . net . UnknownHostException ; \n - / * * \n - * Masks a raw IP address byte array with the specified prefix length . \n - * / \n - public static void maskRawAddress ( byte [ ] array , int prefixLength ) { \n - if ( prefixLength < 0 | | prefixLength > array . length * 8 ) { \n - throw new RuntimeException ( " IP address with " + array . length + \n - " bytes has invalid prefix length " + prefixLength ) ; \n - } \n - \n - int offset = prefixLength / 8 ; \n - int remainder = prefixLength % 8 ; \n - byte mask = ( byte ) ( 0xFF < < ( 8 - remainder ) ) ; \n - \n - if ( offset < array . length ) array [ offset ] = ( byte ) ( array [ offset ] & mask ) ; \n - \n - offset + + ; \n - \n - for ( ; offset < array . length ; offset + + ) { \n - array [ offset ] = 0 ; \n - } \n - } \n - \n - / * * \n - * Get InetAddress masked with prefixLength . Will never return null . \n - * @ param address the IP address to mask with \n - * @ param prefixLength the prefixLength used to mask the IP \n - * / \n - public static InetAddress getNetworkPart ( InetAddress address , int prefixLength ) { \n - byte [ ] array = address . getAddress ( ) ; \n - maskRawAddress ( array , prefixLength ) ; \n - \n - InetAddress netPart = null ; \n - try { \n - netPart = InetAddress . getByAddress ( array ) ; \n - } catch ( UnknownHostException e ) { \n - throw new RuntimeException ( " getNetworkPart error - " + e . toString ( ) ) ; \n - } \n - return netPart ; \n - } \n - \n
vito \ core \ src \ main \ java \ com \ facebook \ fresco \ vito \ core \ impl \ source \ FirstAvailableImageSource . java \n + for ( ImageSource imageSource : mFirstAvailableImageSources ) { \n + if ( imageSource instanceof VitoImageSource ) { \n + ImageRequest imageRequest = \n + ( ( VitoImageSource ) imageSource ) \n + . maybeExtractFinalImageRequest ( imagePipelineUtils , imageOptions ) ; \n + if ( imageRequest ! = null ) { \n + return imageRequest ; \n + } \n + } \n + } \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipeline . java \n - / * * Experimental prefetch method . Do not use as it can be removed in the future * / \n - @ Deprecated \n - public DataSource < Void > prefetchToBitmapCacheWithHighPriority ( \n - ImageRequest imageRequest , Object callerContext ) { \n - return prefetchToBitmapCache ( imageRequest , callerContext , Priority . HIGH ) ; \n - } \n - \n
src \ clj \ clojure \ core . clj \n - ( . a ( dispatch ( binding - conveyor - fn f ) args false ) ) ) \n + ( binding [ * agent * a ] \n + ( . dispatch a ( binding - conveyor - fn f ) args false ) ) ) \n - ( . a ( dispatch ( binding - conveyor - fn f ) args true ) ) ) \n + ( binding [ * agent * a ] \n + ( . dispatch a ( binding - conveyor - fn f ) args true ) ) ) \n src \ jvm \ clojure \ lang \ Agent . java \n - Var . pushThreadBindings ( RT . map ( RT . AGENT , action . agent ) ) ; \n - Var . popThreadBindings ( ) ; \n test \ clojure \ test _ clojure \ agents . clj \n + ( deftest earmuff - agent - bound \n + ( let [ a ( agent 1 ) ] \n + ( send a ( fn [ _ ] * agent * ) ) \n + ( await a ) \n + ( is ( = a @ a ) ) ) ) \n + \n
test \ clojure \ test _ clojure \ agents . clj \n + ( let [ target - agent ( agent : before - error ) \n + handler ( fn [ agt err ] \n + ( send target - agent ( constantly : sent - after - error ) ) ) \n + failing - agent ( agent nil : error - handler handler ) ] \n + ( send failing - agent ( fn [ _ ] ( throw ( RuntimeException . ) ) ) ) \n + ( await - for 1000 failing - agent ) \n + ( is ( = : sent - after - error @ target - agent ) ) ) ) \n + \n + ( deftest can - send - to - self - from - error - handler - before - popping - action - that - caused - error \n
library \ pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n - < tag > v1 . 2 . 1 < / tag > \n + < tag > HEAD < / tag > \n sample \ pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n
library \ pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n - < tag > v1 . 2 . 1 < / tag > \n + < tag > HEAD < / tag > \n sample \ pom . xml \n - < version > 1 . 2 . 1 < / version > \n + < version > 1 . 2 . 2 - SNAPSHOT < / version > \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ util \ StatusBarScrimBehavior . kt \n - import androidx . core . view . children \n + / / Return false so that the child is laid out by the parent \n + return false \n + } \n - / / Find a AppBarLayout sibling and copy it ' s elevation \n - val appBarLayout = parent . children . first { it is AppBarLayout } \n - ( appBarLayout as ? AppBarLayout ) ? . let { \n - child . elevation = appBarLayout . elevation \n + override fun layoutDependsOn ( \n + parent : CoordinatorLayout , \n + child : View , \n + dependency : View \n + ) : Boolean { \n + if ( dependency is AppBarLayout ) { \n + / / Jump the drawable state in case the elevation is animating \n + dependency . jumpDrawablesToCurrentState ( ) \n + / / Copy over the elevation value \n + child . elevation = dependency . elevation \n + return true \n + return false \n + } \n - / / Return false so that the child is laid out by the parent \n + override fun onDependentViewChanged ( \n + parent : CoordinatorLayout , \n + child : View , \n + dependency : View \n + ) : Boolean { \n + child . elevation = dependency . elevation \n mobile \ src \ main \ res \ layout \ fragment _ info . xml \n - app : layout _ scrollFlags = " scroll | snap | exitUntilCollapsed " \n + app : layout _ scrollFlags = " scroll | enterAlways | snap " \n - android : layout _ height = " ? actionBarSize " / > \n + android : layout _ height = " wrap _ content " / > \n + < ! - - A view to draw above the AppBarLayout to mimic the status bar - - > \n + < View \n + android : layout _ width = " match _ parent " \n + android : layout _ height = " 0dp " \n + android : background = " ? attr / colorSurface " \n + android : fitsSystemWindows = " true " \n + app : layout _ behavior = " com . google . samples . apps . iosched . util . StatusBarScrimBehavior " / > \n + \n + \n
mobile \ src \ main \ res \ drawable \ info _ transport _ footer . xml \n - < path \n - android : fillColor = " # FFFEFE " \n - android : pathData = " M0 , 0H512V288H0z " / > \n - android : strokeColor = " # E9E9E9 " \n + android : strokeColor = " ? attr / colorControlLight " \n
common \ src \ main \ java \ io \ netty \ util \ concurrent \ DefaultEventExecutorChooserFactory . java \n + import java . util . concurrent . atomic . AtomicLong ; \n - @ SuppressWarnings ( " unchecked " ) \n - private final AtomicInteger idx = new AtomicInteger ( ) ; \n + / / Use a ' long ' counter to avoid non - round - robin behaviour at the 32 - bit overflow boundary . \n + / / The 64 - bit long solves this by placing the overflow so far into the future , that no system \n + / / will encounter this in practice . \n + private final AtomicLong idx = new AtomicLong ( ) ; \n - return executors [ Math . abs ( idx . getAndIncrement ( ) % executors . length ) ] ; \n + return executors [ ( int ) Math . abs ( idx . getAndIncrement ( ) % executors . length ) ] ; \n
example \ src \ main \ java \ io \ netty \ example \ objectecho \ ObjectEchoClientHandler . java \n + import io . netty . channel . ChannelFuture ; \n + import io . netty . channel . ChannelFutureListener ; \n + import static io . netty . channel . ChannelFutureListener . FIRE _ EXCEPTION _ ON _ FAILURE ; \n + \n - ctx . writeAndFlush ( firstMessage ) ; \n + ChannelFuture future = ctx . writeAndFlush ( firstMessage ) ; \n + future . addListener ( FIRE _ EXCEPTION _ ON _ FAILURE ) ; / / Let object serialisation exceptions propagate . \n
core \ src \ main \ java \ dagger \ internal \ SetBinding . java \n - private final Set < Binding < ? > > contributors = new LinkedHashSet < Binding < ? > > ( ) ; \n + private final Set < Binding < ? > > contributors ; \n + contributors = new LinkedHashSet < Binding < ? > > ( ) ; \n - contributors . addAll ( original . contributors ) ; \n + this . setLibrary ( original . library ( ) ) ; \n + this . setDependedOn ( original . dependedOn ( ) ) ; \n + contributors = new LinkedHashSet < Binding < ? > > ( original . contributors ) ; \n
compiler \ src \ main \ java \ dagger \ internal \ codegen \ GraphAnalysisProcessor . java \n + import static java . util . Arrays . asList ; \n + private static final Set < String > ERROR _ NAMES _ TO _ PROPAGATE = new LinkedHashSet < String > ( asList ( \n + " com . sun . tools . javac . code . Symbol $ CompletionFailure " ) ) ; \n + \n - error ( " Graph validation failed : " + e . getMessage ( ) , moduleType ) ; \n + if ( ERROR _ NAMES _ TO _ PROPAGATE . contains ( e . getClass ( ) . getName ( ) ) ) { \n + throw e ; \n + } \n + error ( " Unknown error " + e . getClass ( ) . getName ( ) + " thrown by javac in graph validation : " \n + + e . getMessage ( ) , moduleType ) ; \n
CHANGELOG . md \n - # # 7 . 0 . 7 ( YYYY - MM - DD ) \n + # # 7 . 0 . 7 ( 2020 - 09 - 25 ) \n
version . txt \n - 7 . 0 . 7 \n + 7 . 0 . 8 - SNAPSHOT \n
gdx \ src \ com \ badlogic \ gdx \ utils \ ObjectSet . java \n - if ( tableSize > 1 < < 30 ) throw new IllegalArgumentException ( " The required capacity is too large : " + capacity ) ; \n + / / Note : 0x40000000 is " 1 < < 30 " but crashes under certain circumstances - see : https : / / github . com / libgdx / libgdx / issues / 4065 \n + if ( tableSize > 0x40000000 ) throw new IllegalArgumentException ( " The required capacity is too large : " + capacity ) ; \n
gdx \ src \ com \ badlogic \ gdx \ utils \ ObjectSet . java \n - / / Note : 0x40000000 is " 1 < < 30 " but crashes under certain circumstances - see : https : / / github . com / libgdx / libgdx / issues / 4065 \n - if ( tableSize > 0x40000000 ) throw new IllegalArgumentException ( " The required capacity is too large : " + capacity ) ; \n + if ( tableSize > 1 < < 30 ) throw new IllegalArgumentException ( " The required capacity is too large : " + capacity ) ; \n
client \ rest - high - level \ src \ test \ java \ org \ elasticsearch \ client \ RankEvalIT . java \n - import org . elasticsearch . index . rankeval . RecallAtK ; \n + import org . elasticsearch . index . rankeval . RecallAtK ; \n - assertEquals ( expectedPrecision , response . getMetricScore ( ) , Double . MIN _ VALUE ) ; \n + assertEquals ( expectedPrecision , response . getMetricScore ( ) , 0 . 00000000001 ) ; \n - assertEquals ( expectedScores [ i ] , response . getMetricScore ( ) , Double . MIN _ VALUE ) ; \n + assertEquals ( expectedScores [ i ] , response . getMetricScore ( ) , 0 . 00000000001 ) ; \n modules \ rank - eval \ src \ internalClusterTest \ java \ org \ elasticsearch \ index \ rankeval \ RankEvalRequestIT . java \n - assertEquals ( expectedPrecision , response . getMetricScore ( ) , Double . MIN _ VALUE ) ; \n + assertEquals ( expectedPrecision , response . getMetricScore ( ) , 0 . 0000000001 ) ; \n - assertEquals ( expectedPrecision , response . getMetricScore ( ) , Double . MIN _ VALUE ) ; \n + assertEquals ( expectedPrecision , response . getMetricScore ( ) , 0 . 0000000001 ) ; \n modules \ rank - eval \ src \ test \ java \ org \ elasticsearch \ index \ rankeval \ RankEvalResponseTests . java \n - assertEquals ( randomResponse . getMetricScore ( ) , deserializedResponse . getMetricScore ( ) , Double . MIN _ VALUE ) ; \n + assertEquals ( randomResponse . getMetricScore ( ) , deserializedResponse . getMetricScore ( ) , 0 . 0000000001 ) ; \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search \ 330 _ fetch _ fields . yml \n - match : \n - \n - - - \n - skip : \n - match : { hits . hits . 0 . fields . number . 2 : 3 } \n - match : { hits . hits . 0 . fields . number . 3 : 5 } \n - match : { hits . hits . 0 . fields . number . 4 : 6 } \n + - - - \n + Test token _ count inside nested field doesn ' t fail : \n + - skip : \n + version : ' - 7 . 99 . 99 ' \n + reason : ' Added in 8 . 0 - change on backport ' \n + - do : \n + indices . create : \n + index : test \n + body : \n + mappings : \n + properties : \n + user : \n + type : nested \n + properties : \n + name : \n + type : text \n + fields : \n + length : \n + type : token _ count \n + analyzer : standard \n + \n + - do : \n + index : \n + index : test \n + id : 1 \n + refresh : true \n + body : \n + user : \n + - { " name " : " Ann Marie Smith " } \n + - { " name " : " James Brown " } \n + \n + - do : \n + search : \n + index : test \n + body : \n + _ source : false \n + fields : [ " * " ] \n server \ src \ main \ java \ org \ elasticsearch \ index \ mapper \ NestedValueFetcher . java \n + import org . apache . lucene . index . LeafReaderContext ; \n + \n + @ Override \n + public void setNextReader ( LeafReaderContext context ) { \n + this . nestedFieldFetcher . setNextReader ( context ) ; \n + } \n
hystrix - core \ src \ test \ java \ com \ netflix \ hystrix \ HystrixObservableCommandTest . java \n - . withExecutionTimeoutEnabled ( false ) \n
hystrix - core \ src \ test \ java \ com \ netflix \ hystrix \ HystrixObservableCommandTest . java \n + . withExecutionTimeoutInMilliseconds ( 30000 ) \n
src \ jvm \ clojure \ lang \ Util . java \n - return ( ( IHashEq ) o ) . hasheq ( ) ; \n + return dohasheq ( o ) ; \n + public static int dohasheq ( Object o ) { \n + return ( ( IHashEq ) o ) . hasheq ( ) ; \n + } \n + \n
src \ jvm \ clojure \ lang \ Compiler . java \n + private class Recur { } ; \n + static final public Class RECUR _ CLASS = Recur . class ; \n + \n + | | thenExpr . getJavaClass ( ) = = RECUR _ CLASS \n + | | elseExpr . getJavaClass ( ) = = RECUR _ CLASS \n - & & thenExpr . getJavaClass ( ) = = elseExpr . getJavaClass ( ) \n + & & ( thenExpr . getJavaClass ( ) = = elseExpr . getJavaClass ( ) \n + | | thenExpr . getJavaClass ( ) = = RECUR _ CLASS \n + | | elseExpr . getJavaClass ( ) = = RECUR _ CLASS ) \n - if ( thenClass ! = null ) \n + if ( thenClass ! = null & & thenClass ! = RECUR _ CLASS ) \n - public static class RecurExpr implements Expr { \n + public static class RecurExpr implements Expr , MaybePrimitiveExpr { \n - return null ; \n + return RECUR _ CLASS ; \n + \n + public boolean canEmitPrimitive ( ) { \n + return true ; \n + } \n + \n + public void emitUnboxed ( C context , ObjExpr objx , GeneratorAdapter gen ) { \n + emit ( context , objx , gen ) ; \n + } \n
mobile \ src \ main \ java \ com \ example \ android \ uamp \ playback \ LocalPlayback . java \n - giveUpAudioFocus ( ) ; \n
mobile \ src \ main \ java \ com \ example \ android \ uamp \ playback \ LocalPlayback . java \n + if ( source ! = null ) { \n + source = source . replaceAll ( " " , " % 20 " ) ; / / Escape spaces for URLs \n + } \n
example \ . project \n - < name > example < / name > \n + < name > SlidingMenuExample < / name > \n
example \ AndroidManifest . xml \n + android : configChanges = " orientation | screenSize | screenLayout " \n library \ src \ com \ slidingmenu \ lib \ CustomViewAbove . java \n - private int mSlidingMenuThreshold = 10 ; \n + private final int mSlidingMenuThreshold = 10 ; \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + \n + if ( DEBUG ) Log . v ( TAG , " OnSizeChange oldWidth [ " + oldw + " ] newWidth [ " + w + " ] " ) ; \n - recomputeScrollPosition ( w , oldw , mShadowWidth , mShadowWidth ) ; \n + / / [ ChrisJ ] - This fixes the onConfiguration change for orientation issue . . \n + / / maybe worth having a look why the recomputeScroll pos is screwing \n + / / up ? \n + completeScroll ( ) ; \n + scrollTo ( getChildLeft ( mCurItem ) , getScrollY ( ) ) ; \n + / / recomputeScrollPosition ( w , oldw , mShadowWidth , mShadowWidth ) ; \n + / * \n + * FIXME : [ ChrisJ ] Look at this to improve , this causes orientation change issues . \n + * / \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n - private Paint mBehindFadePaint = new Paint ( ) ; \n + private final Paint mBehindFadePaint = new Paint ( ) ; \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n + @ Override \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search . aggregation \ 370 _ doc _ count _ field . yml \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " Doc count fields are only implemented in 8 . 0 " \n - \n + version : " - 7 . 10 . 99 " \n + reason : " doc _ count field has been added in 7 . 11 " \n - do : \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " Doc count fields are only implemented in 8 . 0 " \n + version : " - 7 . 10 . 99 " \n + reason : " doc _ count field has been added in 7 . 11 " \n - do : \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " Doc count fields are only implemented in 8 . 0 " \n + version : " - 7 . 10 . 99 " \n + reason : " doc _ count field has been added in 7 . 11 " \n - do : \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " Doc count fields are only implemented in 8 . 0 " \n + version : " - 7 . 10 . 99 " \n + reason : " doc _ count field has been added in 7 . 11 " \n - do : \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " Doc count fields are only implemented in 8 . 0 " \n + version : " - 7 . 10 . 99 " \n + reason : " doc _ count field has been added in 7 . 11 " \n - do : \n
docs \ reference \ mapping \ fields . asciidoc \n - q [ discrete ] \n + [ discrete ] \n
src \ main \ java \ io \ vertx \ core \ json \ Json . java \n - throw new DecodeException ( " Failed to decode : " + e . getMessage ( ) ) ; \n + throw new DecodeException ( " Failed to decode : " + e . getMessage ( ) ) ; \n - throw new DecodeException ( " Failed to decode : " + e . getMessage ( ) , e ) ; \n + throw new DecodeException ( " Failed to decode : " + e . getMessage ( ) , e ) ; \n
src \ main \ java \ io \ vertx \ core \ impl \ launcher \ commands \ BareCommand . java \n - System . out . println ( " Shutdown hook ! " + vertx ) ; \n
pom . xml \n - < version > 4 . 12 - site - test < / version > \n + < version > 4 . 12 - SNAPSHOT < / version > \n - < tag > r4 . 12 - site - test < / tag > \n + < tag > HEAD < / tag > \n
pom . xml \n - < version > 4 . 12 - SNAPSHOT < / version > \n + < version > 4 . 12 - beta - 3 < / version > \n - < tag > HEAD < / tag > \n + < tag > r4 . 12 - beta - 3 < / tag > \n
services \ core \ java \ com \ android \ server \ vcn \ VcnGatewayConnection . java \n - / / Attempt to set the safe mode alarm - this requires the Vcn Network being validated \n - / / while in ConnectedState ( which cancels the previous alarm ) \n + / / Will only set a new alarm if no safe mode alarm is currently scheduled . \n
services \ core \ java \ com \ android \ server \ vcn \ VcnGatewayConnection . java \n - " java . lang . RuntimeException " , \n + RuntimeException . class . getName ( ) , \n + exception . getClass ( ) . getSimpleName ( ) \n + " with message : " \n - exceptionClass = " java . io . IOException " ; \n + exceptionClass = IOException . class . getName ( ) ; \n - exceptionClass = " java . lang . RuntimeException " ; \n + exceptionClass = RuntimeException . class . getName ( ) ; \n + exception . getClass ( ) . getSimpleName ( ) \n tests \ vcn \ java \ android \ net \ vcn \ VcnManagerTest . java \n - " java . net . UnknownHostException " , \n + UnknownHostException . class . getName ( ) , \n
src \ clj \ clojure \ java \ io . clj \n + ( : require clojure . string ) \n - ( as - url [ f ] ( . toURL f ) ) \n + ( as - url [ f ] ( . toURL ( . toURI f ) ) ) \n - ( as - file ( . getPath u ) ) \n + ( as - file \n + ( clojure . string / replace \n + ( . replace ( . getFile u ) \ / File / separatorChar ) \n + # " % . . " \n + ( fn [ escape ] \n + ( - > escape \n + ( . substring 1 3 ) \n + ( Integer / parseInt 16 ) \n + ( char ) \n + ( str ) ) ) ) ) \n - ( FileInputStream . ( . getPath x ) ) \n + ( FileInputStream . ( as - file x ) ) \n - ( make - output - stream ( File . ( . getPath x ) ) opts ) \n + ( make - output - stream ( as - file x ) opts ) \n test \ clojure \ test _ clojure \ java \ io . clj \n + ( File . " bar + baz " ) ( URL . " file : bar + baz " ) \n + ( File . " bar baz qux " ) ( URL . " file : bar % 20baz % 20qux " ) \n + ( deftest test - resources - with - spaces \n + ( let [ file - with - spaces ( temp - file " test resource 2 " " txt " ) \n + url ( as - url ( . getParentFile file - with - spaces ) ) \n + loader ( java . net . URLClassLoader . ( into - array [ url ] ) ) \n + r ( resource ( . getName file - with - spaces ) loader ) ] \n + ( is ( = r ( as - url file - with - spaces ) ) ) \n + ( spit r " foobar " ) \n + ( is ( = " foobar " ( slurp r ) ) ) ) ) \n + \n
src \ clj \ clojure \ core . clj \n - derefs . A subsequent call to deliver on a promise will throw an exception . " \n + derefs . A subsequent call to deliver on a promise will have no effect . " \n
web - service \ tests . py \n + import signal \n + import sys \n - ] , bufsize = 1 , stderr = subprocess . PIPE ) \n + ] , bufsize = 1 , stderr = subprocess . PIPE , preexec _ fn = os . setsid ) \n - for line in iter ( server . stderr . readline , b ' ' ) : \n + while True : \n + line = server . stderr . readline ( ) \n + if ' Unable to bind ' in line : \n + print ' Rogue server already running . ' \n + return 1 \n - server . kill ( ) \n + os . killpg ( os . getpgid ( server . pid ) , signal . SIGINT ) \n + server . wait ( ) \n
java \ libs \ src \ main \ java \ org \ physical _ web \ collection \ PhysicalWebCollection . java \n + / * * \n + * Return the top - ranked PwPair for a given group ID . \n + * @ return a PwPair . \n + * / \n + public PwPair getTopRankedPwPairByGroupId ( String groupId ) { \n + for ( PwPair pwPair : getGroupedPwPairsSortedByRank ( ) ) { \n + if ( pwPair . getPwsResult ( ) . getGroupId ( ) . equals ( groupId ) ) { \n + return pwPair ; \n + } \n + } \n + return null ; \n + } \n + \n java \ libs \ src \ test \ java \ org \ physical _ web \ collection \ PhysicalWebCollectionTest . java \n + \n + @ Test \n + public void getTopRankedPwPairByGroupIdWorks ( ) { \n + PhysicalWebCollection physicalWebCollection = new PhysicalWebCollection ( ) ; \n + addRankedDeviceAndMetadata ( physicalWebCollection , ID1 , URL1 , GROUP _ ID1 , . 1 ) ; / / Group 1 \n + addRankedDeviceAndMetadata ( physicalWebCollection , ID2 , URL2 , GROUP _ ID1 , . 2 ) ; / / Better rank \n + addRankedDeviceAndMetadata ( physicalWebCollection , ID1 , URL1 , GROUP _ ID2 , . 3 ) ; / / Group 2 \n + assertNull ( physicalWebCollection . getTopRankedPwPairByGroupId ( " notagroup " ) ) ; \n + PwPair pwPair = physicalWebCollection . getTopRankedPwPairByGroupId ( GROUP _ ID1 ) ; \n + assertNotNull ( pwPair ) ; \n + assertEquals ( ID2 , pwPair . getUrlDevice ( ) . getId ( ) ) ; \n + } \n
src \ main \ java \ org \ junit \ runners \ BlockJUnit4ClassRunner . java \n - * \n - * @ deprecated Will be private soon : use Rules instead \n - @ Deprecated \n - * \n - * @ deprecated Will be private soon : use Rules instead \n - @ Deprecated \n
src \ main \ java \ org \ junit \ runners \ BlockJUnit4ClassRunner . java \n + * \n + * @ deprecated Will be private soon : use Rules instead \n + @ Deprecated \n + * \n + * @ deprecated Will be private soon : use Rules instead \n + @ Deprecated \n
AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ helper \ APTCodeModelHelper . java \n - return environment . getClasses ( ) . OBJECT . wildcard ( ) ; \n + return environment . getClasses ( ) . OBJECT . wildcardExtends ( ) ; \n - return environment . getClasses ( ) . OBJECT . wildcard ( ) ; \n + return environment . getClasses ( ) . OBJECT . wildcardExtends ( ) ; \n - return typeMirrorToJClass ( extendsBound , substitute ) . wildcard ( ) ; \n + return typeMirrorToJClass ( extendsBound , substitute ) . wildcardExtends ( ) ; \n AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ generation \ ResourceCodeWriter . java \n - super ( charset ) ; \n + super ( charset , getDefaultNewLine ( ) ) ; \n AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ generation \ SourceCodeWriter . java \n - super ( charset ) ; \n + super ( charset , getDefaultNewLine ( ) ) ; \n AndroidAnnotations \ pom . xml \n - < version > 2 . 8 . 6 < / version > \n + < version > 3 . 0 . 1 < / version > \n
AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ process \ ProcessHolder . java \n + codeModel . addDontImportClass ( refClass ( " android . R " ) ) ; \n AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ test \ java \ org \ androidannotations \ databinding \ DataBindingTest . java \n - " ViewGroup contentView = internalFindViewById ( R . id . content ) ; " , \n - " viewDataBinding _ = DataBindingUtil . inflate ( LayoutInflater . from ( this ) , org . androidannotations . databinding . R . layout . activity _ main , contentView , false ) ; " , \n + " ViewGroup contentView = internalFindViewById ( android . R . id . content ) ; " , \n + " viewDataBinding _ = DataBindingUtil . inflate ( LayoutInflater . from ( this ) , R . layout . activity _ main , contentView , false ) ; " , \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ SqlStageExecution . java \n - return stateMachine . getBasicStageStats ( \n - ( ) - > getAllTasks ( ) . stream ( ) \n - . map ( RemoteTask : : getTaskInfo ) \n - . collect ( toImmutableList ( ) ) ) ; \n + return stateMachine . getBasicStageStats ( this : : getAllTaskInfo ) ; \n - return stateMachine . getStageInfo ( \n - ( ) - > getAllTasks ( ) . stream ( ) \n - . map ( RemoteTask : : getTaskInfo ) \n - . collect ( toImmutableList ( ) ) ) ; \n + return stateMachine . getStageInfo ( this : : getAllTaskInfo ) ; \n + } \n + \n + private Iterable < TaskInfo > getAllTaskInfo ( ) \n + { \n + return getAllTasks ( ) . stream ( ) \n + . map ( RemoteTask : : getTaskInfo ) \n + . collect ( toImmutableList ( ) ) ; \n presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ StageStateMachine . java \n + import static com . google . common . base . Preconditions . checkState ; \n - StateChangeListener < StageState > stateChangeListener = state - > { \n - if ( state . isDone ( ) ) { \n - finalStatusReady . set ( true ) ; \n - } \n - } ; \n - stageState . addStateChangeListener ( stateChangeListener ) ; \n + checkState ( stageState . get ( ) . isDone ( ) ) ; \n + finalStatusReady . set ( true ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ StageStateMachine . java \n - private final Distribution scheduleTaskDistribution = new Distribution ( ) ; \n - private final Distribution addSplitDistribution = new Distribution ( ) ; \n - scheduleTaskDistribution . snapshot ( ) , \n - addSplitDistribution . snapshot ( ) , \n - public void recordScheduleTaskTime ( long startNanos ) \n - { \n - scheduleTaskDistribution . add ( System . nanoTime ( ) - startNanos ) ; \n - } \n - \n - public void recordAddSplit ( long startNanos ) \n - { \n - addSplitDistribution . add ( System . nanoTime ( ) - startNanos ) ; \n - } \n - \n presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ StageStats . java \n - private final DistributionSnapshot scheduleTaskDistribution ; \n - private final DistributionSnapshot addSplitDistribution ; \n - @ JsonProperty ( " scheduleTaskDistribution " ) DistributionSnapshot scheduleTaskDistribution , \n - @ JsonProperty ( " addSplitDistribution " ) DistributionSnapshot addSplitDistribution , \n - this . scheduleTaskDistribution = requireNonNull ( scheduleTaskDistribution , " scheduleTaskDistribution is null " ) ; \n - this . addSplitDistribution = requireNonNull ( addSplitDistribution , " addSplitDistribution is null " ) ; \n - @ JsonProperty \n - public DistributionSnapshot getScheduleTaskDistribution ( ) \n - { \n - return scheduleTaskDistribution ; \n - } \n - \n - @ JsonProperty \n - public DistributionSnapshot getAddSplitDistribution ( ) \n - { \n - return addSplitDistribution ; \n - } \n - \n presto - main \ src \ test \ java \ com \ facebook \ presto \ execution \ TestStageStats . java \n - public static final StageStats EXPECTED = new StageStats ( \n + private static final StageStats EXPECTED = new StageStats ( \n - getTestDistribution ( 2 ) , \n - getTestDistribution ( 3 ) , \n - public static void assertExpectedStageStats ( StageStats actual ) \n + private static void assertExpectedStageStats ( StageStats actual ) \n - assertEquals ( actual . getScheduleTaskDistribution ( ) . getCount ( ) , 2 . 0 ) ; \n - assertEquals ( actual . getAddSplitDistribution ( ) . getCount ( ) , 3 . 0 ) ; \n
build . gradle \n - defaultTasks ' buildAll ' \n + defaultTasks ' build ' \n - task buildAll ( dependsOn : [ build , perfClasses ] ) \n - \n
build . gradle \n - classpath + = ( sourceSets . main . runtimeClasspath + sourceSets . test . runtimeClasspath ) \n + classpath + = sourceSets . main . runtimeClasspath \n rename from src \ test \ java \ com \ lmax \ disruptor \ support \ DaemonThreadFactory . java \n rename to src \ main \ java \ com \ lmax \ disruptor \ util \ DaemonThreadFactory . java \n - package com . lmax . disruptor . support ; \n + package com . lmax . disruptor . util ; \n src \ perftest \ java \ com \ lmax \ disruptor \ OnePublisherToOneProcessorUniCastThroughputTest . java \n + import com . lmax . disruptor . util . DaemonThreadFactory ; \n src \ test \ java \ com \ lmax \ disruptor \ PreallocatedRingBufferTest . java \n - import com . lmax . disruptor . support . DaemonThreadFactory ; \n + import com . lmax . disruptor . util . DaemonThreadFactory ; \n src \ test \ java \ com \ lmax \ disruptor \ SingleProducerSequencerTest . java \n - import com . lmax . disruptor . support . DaemonThreadFactory ; \n + import com . lmax . disruptor . util . DaemonThreadFactory ; \n src \ test \ java \ com \ lmax \ disruptor \ dsl \ stubs \ StubExecutor . java \n - import com . lmax . disruptor . support . DaemonThreadFactory ; \n + import com . lmax . disruptor . util . DaemonThreadFactory ; \n
AndroidAnnotations \ androidannotations - api \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n AndroidAnnotations \ androidannotations - bundle \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n AndroidAnnotations \ androidannotations - with - codemodel \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n AndroidAnnotations \ androidannotations \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n AndroidAnnotations \ functional - test - 1 - 5 - tests \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n AndroidAnnotations \ functional - test - 1 - 5 \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n - < ignore > < / ignore > \n + < ignore / > \n AndroidAnnotations \ pom . xml \n - < version > 3 . 1 - SNAPSHOT < / version > \n + < version > 3 . 1 < / version > \n - < / scm > \n + < tag > androidannotations - 3 . 1 < / tag > \n + < / scm > \n
AndroidAnnotations \ androidannotations - api \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ androidannotations - bundle \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ androidannotations - with - codemodel \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ androidannotations \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ functional - test - 1 - 5 - tests \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ functional - test - 1 - 5 \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n AndroidAnnotations \ pom . xml \n - < version > 3 . 1 < / version > \n + < version > 3 . 2 - SNAPSHOT < / version > \n - < tag > androidannotations - 3 . 1 < / tag > \n + < tag > HEAD < / tag > \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ org \ androidannotations \ helper \ ValidatorHelper . java \n - if ( ! element . getModifiers ( ) . contains ( Modifier . ABSTRACT ) ) { \n + if ( ! annotationHelper . isAbstract ( element ) ) { \n new file \n AndroidAnnotations \ functional - test - 1 - 5 \ src \ main \ java \ org \ androidannotations \ test15 \ ebean \ AbstractBean . java \n + package org . androidannotations . test15 . ebean ; \n + \n + import org . androidannotations . annotations . Background ; \n + import org . androidannotations . annotations . EBean ; \n + import org . androidannotations . annotations . RootContext ; \n + \n + import android . content . Context ; \n + \n + @ EBean \n + public abstract class AbstractBean { \n + \n + @ RootContext Context context ; \n + \n + public AbstractBean ( String param ) { \n + \n + } \n + \n + @ Background \n + void backgroundMethod ( ) { \n + \n + } \n + \n + } \n new file \n AndroidAnnotations \ functional - test - 1 - 5 \ src \ main \ java \ org \ androidannotations \ test15 \ ebean \ ChildBean1 . java \n + package org . androidannotations . test15 . ebean ; \n + \n + import org . androidannotations . annotations . EBean ; \n + \n + @ EBean \n + public class ChildBean1 extends AbstractBean { \n + \n + public ChildBean1 ( ) { \n + super ( " MyBeanConstructorParam " ) ; \n + } \n + \n + } \n new file \n AndroidAnnotations \ functional - test - 1 - 5 \ src \ main \ java \ org \ androidannotations \ test15 \ ebean \ ChildBean2 . java \n + package org . androidannotations . test15 . ebean ; \n + \n + import org . androidannotations . annotations . EBean ; \n + \n + import android . content . Context ; \n + \n + @ EBean \n + public class ChildBean2 extends AbstractBean { \n + \n + public ChildBean2 ( Context context ) { \n + super ( " MyBeanConstructorParam " ) ; \n + } \n + \n + } \n
AndroidAnnotations \ functional - test - 1 - 5 \ AndroidManifest . xml \n + < activity android : name = " . ActivityWithGenerics _ " / > \n AndroidAnnotations \ functional - test - 1 - 5 \ src \ main \ java \ org \ androidannotations \ test15 \ ActivityWithGenerics . java \n + import java . util . List ; \n + \n - \n + \n + \n + } \n + \n + @ Background \n + < T extends Number > void emptyBackgroundMethod ( T param , List < T > param2 ) { \n
server \ src \ test \ java \ org \ elasticsearch \ cluster \ metadata \ DataStreamTests . java \n - var indicesToAdd = DataStreamTestHelper . randomIndexInstances ( ) ; \n + var indicesToAdd = new ArrayList < Index > ( ) ; \n + while ( indicesToAdd . isEmpty ( ) ) { \n + / / ensure at least one index \n + indicesToAdd . addAll ( DataStreamTestHelper . randomIndexInstances ( ) ) ; \n + } \n
x - pack \ qa \ rolling - upgrade \ src \ test \ java \ org \ elasticsearch \ upgrades \ MlJobSnapshotUpgradeIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67059 " ) \n
retrofit - adapters \ rxjava \ src \ main \ java \ retrofit \ RxJavaCallAdapterFactory . java \n - subscriber . onError ( t ) ; \n + if ( ! subscriber . isUnsubscribed ( ) ) { \n + subscriber . onError ( t ) ; \n + } \n - subscriber . onCompleted ( ) ; \n + if ( ! subscriber . isUnsubscribed ( ) ) { \n + subscriber . onCompleted ( ) ; \n + } \n
retrofit - adapters \ rxjava \ src \ main \ java \ retrofit \ RxJavaCallAdapterFactory . java \n - call . enqueue ( new Callback < T > ( ) { \n - @ Override public void onResponse ( Response < T > response , Retrofit retrofit ) { \n - if ( subscriber . isUnsubscribed ( ) ) { \n - return ; \n - } \n - try { \n - subscriber . onNext ( response ) ; \n - } catch ( Throwable t ) { \n - if ( ! subscriber . isUnsubscribed ( ) ) { \n - subscriber . onError ( t ) ; \n - } \n - return ; \n - } \n - if ( ! subscriber . isUnsubscribed ( ) ) { \n - subscriber . onCompleted ( ) ; \n - } \n - } \n + if ( subscriber . isUnsubscribed ( ) ) { \n + return ; \n + } \n - @ Override public void onFailure ( Throwable t ) { \n - if ( subscriber . isUnsubscribed ( ) ) { \n - return ; \n - } \n + try { \n + Response < T > response = call . execute ( ) ; \n + if ( ! subscriber . isUnsubscribed ( ) ) { \n + subscriber . onNext ( response ) ; \n + } \n + } catch ( Throwable t ) { \n + if ( ! subscriber . isUnsubscribed ( ) ) { \n - } ) ; \n + return ; \n + } \n + \n + if ( ! subscriber . isUnsubscribed ( ) ) { \n + subscriber . onCompleted ( ) ; \n + } \n
butterknife \ src \ main \ java \ butterknife \ Views . java \n + INJECTORS . put ( targetClass , NO _ OP ) ; \n + \n + / * * No - op method for use for Classes that don ' t have any { @ link View } s to inject . * / \n + public static void noOp ( Object finder , Object target , Object source ) { } \n + \n + / * * No - op method reference * / \n + private static final Method NO _ OP = Views . class . getMethod ( " noOp " , Object . class , Object . class , Object . class ) ; \n
butterknife \ src \ main \ java \ butterknife \ Views . java \n + if ( target = = null ) \n + throw new UnableToInjectException ( " target of injection cannot be null " ) ; \n + \n + Class < ? > targetClass = target . getClass ( ) ; \n - Class < ? > targetClass = target . getClass ( ) ; \n
telephony \ java \ com \ android \ internal \ telephony \ RILConstants . java \n + int RIL _ REQUEST _ ALLOCATE _ PDU _ SESSION _ ID = 215 ; \n + int RIL _ REQUEST _ RELEASE _ PDU _ SESSION _ ID = 216 ; \n + int RIL _ REQUEST _ BEGIN _ HANDOVER = 217 ; \n + int RIL _ REQUEST _ CANCEL _ HANDOVER = 218 ; \n
services \ core \ Android . bp \n + " java / com / android / server / connectivity / QosCallbackAgentConnection . java " , \n + " java / com / android / server / connectivity / QosCallbackTracker . java " , \n new file \n services \ core \ java \ com \ android \ server \ connectivity \ QosCallbackAgentConnection . java \n + / * \n + * Copyright ( C ) 2021 The Android Open Source Project \n + * \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n + * \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n + * / \n + \n + package com . android . server . connectivity ; \n + \n + class QosCallbackAgentConnection { \n + } \n new file \n services \ core \ java \ com \ android \ server \ connectivity \ QosCallbackTracker . java \n + / * \n + * Copyright ( C ) 2021 The Android Open Source Project \n + * \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n + * \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n + * / \n + \n + package com . android . server . connectivity ; \n + \n + class QosCallbackTracker { \n + } \n
MPChartLib \ src \ com \ github \ mikephil \ charting \ renderer \ YAxisRenderer . java \n - double first = Math . ceil ( yMin / interval ) * interval ; \n - double last = Utils . nextUp ( Math . floor ( yMax / interval ) * interval ) ; \n + double first = interval = = 0 . 0 ? 0 . 0 : Math . ceil ( yMin / interval ) * interval ; \n + double last = interval = = 0 . 0 ? 0 . 0 : Utils . nextUp ( Math . floor ( yMax / interval ) * interval ) ; \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ data \ BarData . java \n - private float mBarWidth = 1f ; \n + private float mBarWidth = 0 . 85f ; \n - * Default 1f \n + * Default 0 . 85f \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ listener \ BarLineChartTouchListener . java \n - mChart . zoom ( mChart . isScaleXEnabled ( ) ? 1 . 4f : 1f , mChart . isScaleYEnabled ( ) ? 1 . 4f : 1f , trans . x , trans . y ) ; \n + float scaleX = mChart . isScaleXEnabled ( ) ? 1 . 4f : 1f ; \n + float scaleY = mChart . isScaleYEnabled ( ) ? 1 . 4f : 1f ; \n + \n + mChart . zoom ( scaleX , scaleY , trans . x , trans . y ) ; \n + trans . y ) ; \n + if ( l ! = null ) { \n + l . onChartScale ( e , scaleX , scaleY ) ; \n + } \n + \n MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ listener \ OnChartGestureListener . java \n - * Callbacks when the chart is scaled / zoomed via pinch zoom gesture . \n + * Callbacks when the chart is scaled / zoomed via pinch zoom / double - tap gesture . \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ components \ Legend . java \n - if ( i < entryCount - 1 ) \n - maxHeight + = labelLineHeight + yEntrySpace ; \n + maxHeight + = labelLineHeight + yEntrySpace ; \n
samples \ showcase \ src \ androidTest \ java \ com \ facebook \ fresco \ samples \ showcase \ ShowcaseRunTest . java \n + import org . junit . Ignore ; \n + @ Ignore / * TODO T34443404 , Circle CI instrumentation test fails due to network issue * / \n
build . gradle \n - inputs . file ( " src / main / jni / $ { name } " ) \n + inputs . files ( " src / main / jni / $ { name } " ) \n imagepipeline \ build . gradle \n + testImplementation project ( ' : native - imagetranscoder ' ) \n
gdx \ src \ com \ badlogic \ gdx \ scenes \ scene2d \ Stage . java \n - if ( screenX < viewport . getScreenX ( ) | | screenX > = viewport . getScreenX ( ) + viewport . getScreenWidth ( ) ) return false ; \n - if ( Gdx . graphics . getHeight ( ) - screenY < viewport . getScreenY ( ) \n - | | Gdx . graphics . getHeight ( ) - screenY > = viewport . getScreenY ( ) + viewport . getScreenHeight ( ) ) return false ; \n + if ( ! isInsideViewport ( screenX , screenY ) ) return false ; \n - if ( screenX < viewport . getScreenX ( ) | | screenX > = viewport . getScreenX ( ) + viewport . getScreenWidth ( ) ) return false ; \n - if ( Gdx . graphics . getHeight ( ) - screenY < viewport . getScreenY ( ) \n - | | Gdx . graphics . getHeight ( ) - screenY > = viewport . getScreenY ( ) + viewport . getScreenHeight ( ) ) return false ; \n + if ( ! isInsideViewport ( screenX , screenY ) ) return false ; \n + / * * Check if screen coordinates are inside the viewport ' s screen area . * / \n + protected boolean isInsideViewport ( int screenX , int screenY ) { \n + int x0 = viewport . getScreenX ( ) ; \n + int x1 = x0 + viewport . getScreenWidth ( ) ; \n + int y0 = viewport . getScreenY ( ) ; \n + int y1 = y0 + viewport . getScreenHeight ( ) ; \n + screenY = Gdx . graphics . getHeight ( ) - screenY ; \n + return screenX > = x0 & & screenX < x1 & & screenY > = y0 & & screenY < y1 ; \n + } \n + \n
fetch . xml \n - < property name = " lwjgl - version " value = " 3 . 1 . 5 " / > \n + < property name = " lwjgl - version " value = " 3 . 2 . 0 " / > \n gradle \ dependencies . gradle \n - versions . lwjgl3 = " 3 . 1 . 5 " \n + versions . lwjgl3 = " 3 . 2 . 0 " \n pom . xml \n - < lwjgl3 . version > 3 . 1 . 5 < / lwjgl3 . version > \n + < lwjgl3 . version > 3 . 2 . 0 < / lwjgl3 . version > \n
client \ rest - high - level \ src \ test \ java \ org \ elasticsearch \ client \ IndexLifecycleIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 64907 " ) \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search \ 110 _ field _ collapsing . yml \n - - - \n + - skip : \n + version : " all " \n + reason : " Awaits fix : https : / / github . com / elastic / elasticsearch / issues / 52416 " \n + \n - do : \n - - - \n + - skip : \n + version : " all " \n + reason : " Awaits fix : https : / / github . com / elastic / elasticsearch / issues / 52416 " \n + \n - do : \n
library \ src \ main \ java \ com \ loopj \ android \ http \ SerializableCookie . java \n - String name = ( String ) in . readObject ( ) ; \n + String key = ( String ) in . readObject ( ) ; \n - clientCookie = new BasicClientCookie ( name , value ) ; \n + clientCookie = new BasicClientCookie ( key , value ) ; \n
sample \ src \ main \ java \ com \ loopj \ android \ http \ sample \ PrePostProcessingSample . java \n - public PrePostProcessRequest ( AbstractHttpClient client , HttpContext context , HttpUriRequest request , ResponseHandlerInterface responseHandler ) { \n - super ( client , context , request , responseHandler ) ; \n + public PrePostProcessRequest ( AbstractHttpClient client , HttpContext httpContext , HttpUriRequest request , ResponseHandlerInterface responseHandler ) { \n + super ( client , httpContext , request , responseHandler ) ; \n
hystrix - contrib \ hystrix - metrics - event - stream \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ requests \ stream \ HystrixRequestEventsJsonStream . java \n - if ( ! eventType . equals ( HystrixEventType . COLLAPSED ) ) { \n + if ( eventType ! = HystrixEventType . COLLAPSED ) { \n hystrix - core \ src \ main \ java \ com \ netflix \ hystrix \ AbstractCommand . java \n - if ( properties . executionIsolationStrategy ( ) . get ( ) . equals ( ExecutionIsolationStrategy . THREAD ) ) { \n + if ( properties . executionIsolationStrategy ( ) . get ( ) = = ExecutionIsolationStrategy . THREAD ) { \n - return properties . executionIsolationThreadInterruptOnTimeout ( ) . get ( ) & & _ cmd . isCommandTimedOut . get ( ) . equals ( TimedOutStatus . TIMED _ OUT ) ; \n + return properties . executionIsolationThreadInterruptOnTimeout ( ) . get ( ) & & _ cmd . isCommandTimedOut . get ( ) = = TimedOutStatus . TIMED _ OUT ; \n - if ( properties . executionIsolationStrategy ( ) . get ( ) . equals ( ExecutionIsolationStrategy . SEMAPHORE ) ) { \n + if ( properties . executionIsolationStrategy ( ) . get ( ) = = ExecutionIsolationStrategy . SEMAPHORE ) { \n - return commandState . get ( ) . equals ( CommandState . TERMINAL ) ; \n + return commandState . get ( ) = = CommandState . TERMINAL ; \n hystrix - core \ src \ main \ java \ com \ netflix \ hystrix \ metric \ HystrixCommandExecutionStarted . java \n - return isolationStrategy . equals ( HystrixCommandProperties . ExecutionIsolationStrategy . THREAD ) ; \n + return isolationStrategy = = HystrixCommandProperties . ExecutionIsolationStrategy . THREAD ; \n
hystrix - contrib \ hystrix - javanica \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ javanica \ cache \ CacheInvocationContext . java \n - Annotation [ ] [ ] parametersAnnotations = method . getParameterAnnotations ( ) ; \n + Annotation [ ] [ ] parametersAnnotations = method . getParameterAnnotations ( ) ; \n
build . gradle \n - dependencies { classpath ' com . netflix . nebula : gradle - rxjava - project - plugin : 2 . + ' } \n + dependencies { classpath ' com . netflix . nebula : gradle - rxjava - project - plugin : 2 . 2 . 3 ' } \n
src \ main \ java \ io \ reactivex \ internal \ operators \ flowable \ FlowableDoAfterNext . java \n + if ( done ) { \n + return ; \n + } \n new file \n src \ test \ java \ io \ reactivex \ flowable \ FlowableDoAfterNextTest . java \n + / * * \n + * Copyright 2016 Netflix , Inc . \n + * \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n + * \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n + * / \n + package io . reactivex . flowable ; \n + \n + import static org . junit . Assert . assertEquals ; \n + \n + import java . util . concurrent . atomic . AtomicInteger ; \n + \n + import org . junit . Test ; \n + \n + import io . reactivex . functions . Consumer ; \n + \n + public class FlowableDoAfterNextTest { \n + \n + @ Test \n + public void testIfFunctionThrowsThatNoMoreEventsAreProcessed ( ) { \n + final AtomicInteger count = new AtomicInteger ( ) ; \n + final RuntimeException e = new RuntimeException ( ) ; \n + Burst . items ( 1 , 2 ) . create ( ) \n + . doAfterNext ( new Consumer < Integer > ( ) { \n + @ Override \n + public void accept ( Integer t ) throws Exception { \n + count . incrementAndGet ( ) ; \n + throw e ; \n + } } ) \n + . test ( ) \n + . assertError ( e ) \n + . assertValue ( 1 ) ; \n + assertEquals ( 1 , count . get ( ) ) ; \n + } \n + } \n
language - adaptors \ rxjava - clojure \ src \ main \ clojure \ rx \ lang \ clojure \ core . clj \n - " " \n + " Experimental , subject to change or deletion . " \n - " Returns a new implementation of rx . Observable $ Operator that calls the given \n + " Experimental , subject to change or deletion . \n + \n + Returns a new implementation of rx . Observable $ Operator that calls the given \n + " Subscribe to the given observable . \n + \n + on - X - action is a normal clojure function . \n + \n + See : \n + rx . Observable / subscribe \n + " \n + " Synchronize execution . \n + \n + See : \n + rx . Observable / synchronize \n + " \n
language - adaptors \ rxjava - clojure \ src \ main \ clojure \ rx \ lang \ clojure \ core . clj \n - ( key - fn x ) and the val is an Observable of ( val - fn x ) for each key . If val - fn is \n - omitted , it defaults to identity . \n + ( key - fn x ) and the val is an Observable of x for each key . \n - ( map ( fn [ ^ GroupedObservable go ] \n - ( clojure . lang . MapEntry . ( . getKey go ) go ) ) ) ) ) \n - ( [ key - fn val - fn ^ Observable xs ] \n - ; TODO reinstate once this is implemented \n - ; see https : / / github . com / Netflix / RxJava / commit / 02ccc4d727a9297f14219549208757c6e0efce2a \n - ( throw ( UnsupportedOperationException . " groupBy with val - fn is currently unimplemented in RxJava " ) ) \n - ( - > > ( . groupBy xs \n - ( iop / fn * key - fn ) \n - ( iop / fn * val - fn ) ) \n
okhttp \ src \ test \ java \ okhttp3 \ internal \ http2 \ HttpOverHttp2Test . java \n - . around ( clientTestRule ) \n - . around ( new Timeout ( 5 , SECONDS ) ) ; \n + . around ( new Timeout ( 60 , SECONDS ) ) \n + . around ( clientTestRule ) ; \n
okhttp \ src \ test \ java \ okhttp3 \ internal \ ws \ RealWebSocketTest . java \n + \n + client . listener . assertClosed ( 1000 , " Hello ! " ) ; \n + \n + server . processNextFrame ( ) ; \n + server . listener . assertClosing ( 1000 , " Bye ! " ) ; \n + server . listener . assertClosed ( 1000 , " Bye ! " ) ; \n
src \ main \ java \ rx \ Observable . java \n + * @ since ( if this graduates from Experimental / Beta to supported , replace this parenthetical with the release number ) \n + * @ since ( if this graduates from Experimental / Beta to supported , replace this parenthetical with the release number ) \n + \n + \n + * @ since ( if this graduates from Experimental / Beta to supported , replace this parenthetical with the release number ) \n + \n src \ main \ java \ rx \ observers \ Subscribers . java \n - * \n + * @ since ( if this graduates from Experimental / Beta to supported , replace this parenthetical with the release number ) \n
src \ main \ java \ rx \ Observable . java \n - * < img width = " 640 " height = " 485 " src = " https : / / raw . github . com / wiki / ReactiveX / RxJava / images / rx - operators / window1 . png " alt = " " > \n + * < img width = " 640 " height = " 460 " src = " https : / / raw . github . com / wiki / ReactiveX / RxJava / images / rx - operators / window1 . png " alt = " " > \n
README . md \n - < a href = ' https : / / travis - ci . com / ReactiveX / RxJava / builds ' > < img src = ' https : / / travis - ci . com / ReactiveX / RxJava . svg ? branch = 3 . x ' > < / a > \n + < a href = ' https : / / github . com / ReactiveX / RxJava / actions ? query = workflow % 3ASnapshot ' > < img src = ' https : / / github . com / ReactiveX / RxJava / workflows / Snapshot / badge . svg ' > < / a > \n
src \ main \ java \ io \ reactivex \ rxjava3 \ core \ FlowableSubscriber . java \n - * Represents a Reactive - Streams inspired { @ link Subscriber } that is RxJava 2 only \n - * and weakens rules §1 . 3 and §3 . 9 of the specification for gaining performance . \n + * Represents a Reactive - Streams inspired { @ link Subscriber } that is RxJava 3 only \n + * and weakens the Reactive Streams rules < a href = ' https : / / github . com / reactive - streams / reactive - streams - jvm # 1 . 3 ' > §1 . 3 < / a > \n + * and < a href = ' https : / / github . com / reactive - streams / reactive - streams - jvm # 3 . 9 ' > §3 . 9 < / a > of the specification \n + * for gaining performance . \n src \ main \ java \ io \ reactivex \ rxjava3 \ internal \ operators \ flowable \ FlowableUsing . java \n - upstream . cancel ( ) ; \n - upstream . cancel ( ) ; \n - upstream . cancel ( ) ; \n - upstream . cancel ( ) ; \n src \ main \ java \ io \ reactivex \ rxjava3 \ internal \ operators \ observable \ ObservableUsing . java \n - upstream . dispose ( ) ; \n - upstream . dispose ( ) ; \n - upstream . dispose ( ) ; \n - upstream . dispose ( ) ; \n
x - pack \ plugin \ searchable - snapshots \ src \ test \ java \ org \ elasticsearch \ xpack \ searchablesnapshots \ cache \ CacheServiceTests . java \n + import org . apache . lucene . util . Constants ; \n + assumeFalse ( " https : / / github . com / elastic / elasticsearch / issues / 65543 " , Constants . WINDOWS ) ; \n
docs \ reference \ rollup \ apis \ rollup - api . asciidoc \n - - - - \n - / / TEST [ setup : my _ index ] \n + / / CONSOLE \n + / / TEST [ skip : " AwaitsFix https : / / github . com / elastic / elasticsearch / issues / 65544 " ] \n + \n
rxjava - contrib \ rxjava - android \ src \ main \ java \ rx \ android \ schedulers \ HandlerThreadScheduler . java \n - scheduledAction . addParent ( mCompositeSubscription ) ; \n + scheduledAction . addParent ( mCompositeSubscription ) ; \n + mCompositeSubscription . add ( scheduledAction ) ; \n - \n
src \ main \ java \ rx \ android \ schedulers \ HandlerThreadScheduler . java \n - import rx . functions . Action1 ; \n - import rx . subscriptions . BooleanSubscription ; \n - private final CompositeSubscription mCompositeSubscription = new CompositeSubscription ( ) ; \n + private final CompositeSubscription compositeSubscription = new CompositeSubscription ( ) ; \n - mCompositeSubscription . unsubscribe ( ) ; \n + compositeSubscription . unsubscribe ( ) ; \n - return mCompositeSubscription . isUnsubscribed ( ) ; \n + return compositeSubscription . isUnsubscribed ( ) ; \n - scheduledAction . addParent ( mCompositeSubscription ) ; \n - mCompositeSubscription . add ( scheduledAction ) ; \n + scheduledAction . addParent ( compositeSubscription ) ; \n + compositeSubscription . add ( scheduledAction ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ operator \ aggregation \ ReduceAggregationFunction . java \n + import com . facebook . presto . spi . PrestoException ; \n + import static com . facebook . presto . spi . StandardErrorCode . NOT _ SUPPORTED ; \n + import static java . lang . String . format ; \n - throw new UnsupportedOperationException ( ) ; \n + throw new PrestoException ( NOT _ SUPPORTED , format ( " State type not supported for % s : % s " , NAME , stateType . getDisplayName ( ) ) ) ; \n
rename from presto - spi \ src \ main \ java \ com \ facebook \ presto \ spi \ classloader \ ClassLoaderSafeConnectorPageSink . java \n rename to presto - spi \ src \ main \ java \ com \ facebook \ presto \ spi \ connector \ classloader \ ClassLoaderSafeConnectorPageSink . java \n - package com . facebook . presto . spi . classloader ; \n + package com . facebook . presto . spi . connector . classloader ; \n + import com . facebook . presto . spi . classloader . ThreadContextClassLoader ; \n presto - spi \ src \ main \ java \ com \ facebook \ presto \ spi \ connector \ classloader \ ClassLoaderSafeConnectorPageSinkProvider . java \n - import com . facebook . presto . spi . classloader . ClassLoaderSafeConnectorPageSink ; \n presto - spi \ src \ test \ java \ com \ facebook \ presto \ spi \ connector \ classloader \ TestClassLoaderSafeWrappers . java \n - import com . facebook . presto . spi . classloader . ClassLoaderSafeConnectorPageSink ; \n
x - pack \ plugin \ core \ src \ main \ java \ org \ elasticsearch \ xpack \ core \ ml \ utils \ MlIndexAndAlias . java \n - resolver . concreteIndexNames ( clusterState , IndicesOptions . lenientExpandOpen ( ) , indexPattern ) ; \n + resolver . concreteIndexNames ( clusterState , IndicesOptions . lenientExpandHidden ( ) , indexPattern ) ; \n - / / If it was created between our last check , and this request being handled , we should add the alias \n - / / Adding an alias that already exists is idempotent . So , no need to double check if the alias exists \n - / / as well . \n - updateWriteAlias ( client , alias , null , index , listener ) ; \n + / / If it was created between our last check and this request being handled , we should add the alias \n + / / if we were asked to add it on creation . Adding an alias that already exists is idempotent . So \n + / / no need to double check if the alias exists as well . But if we weren ' t asked to add the alias \n + / / on creation then we should leave it up to the caller to decide what to do next ( some call sites \n + / / already have more advanced alias update logic in their success handlers ) . \n + if ( addAlias ) { \n + updateWriteAlias ( client , alias , null , index , listener ) ; \n + } else { \n + listener . onResponse ( true ) ; \n + } \n x - pack \ plugin \ ml \ src \ internalClusterTest \ java \ org \ elasticsearch \ xpack \ ml \ integration \ JobStorageDeletionTaskIT . java \n - private static long bucketSpan = AnalysisConfig . Builder . DEFAULT _ BUCKET _ SPAN . getMillis ( ) ; \n + private static final long bucketSpan = AnalysisConfig . Builder . DEFAULT _ BUCKET _ SPAN . getMillis ( ) ; \n - . setIndicesOptions ( IndicesOptions . LENIENT _ EXPAND _ OPEN ) \n + . setIndicesOptions ( IndicesOptions . LENIENT _ EXPAND _ OPEN _ CLOSED _ HIDDEN ) \n
x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ action \ TransportStartDataFrameAnalyticsAction . java \n - Optional < PersistentTasksCustomMetadata . Assignment > optionalAssignment = getPotentialAssignment ( params , clusterState ) ; \n + Optional < PersistentTasksCustomMetadata . Assignment > optionalAssignment = \n + getPotentialAssignment ( params , clusterState , isMemoryTrackerRecentlyRefreshed ) ; \n x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ job \ snapshot \ upgrader \ SnapshotUpgradeTaskExecutor . java \n - Optional < PersistentTasksCustomMetadata . Assignment > optionalAssignment = getPotentialAssignment ( params , clusterState ) ; \n + Optional < PersistentTasksCustomMetadata . Assignment > optionalAssignment = \n + getPotentialAssignment ( params , clusterState , isMemoryTrackerRecentlyRefreshed ) ; \n x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ job \ task \ OpenJobPersistentTasksExecutor . java \n - Optional < Assignment > optionalAssignment = getPotentialAssignment ( params , clusterState ) ; \n + Optional < Assignment > optionalAssignment = getPotentialAssignment ( params , clusterState , isMemoryTrackerRecentlyRefreshed ) ; \n x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ task \ AbstractJobPersistentTasksExecutor . java \n - public Optional < PersistentTasksCustomMetadata . Assignment > getPotentialAssignment ( Params params , ClusterState clusterState ) { \n + public Optional < PersistentTasksCustomMetadata . Assignment > getPotentialAssignment ( Params params , ClusterState clusterState , \n + boolean isMemoryTrackerRecentlyRefreshed ) { \n - Optional < PersistentTasksCustomMetadata . Assignment > staleMemory = checkMemoryFreshness ( jobId ) ; \n + Optional < PersistentTasksCustomMetadata . Assignment > staleMemory = checkMemoryFreshness ( jobId , isMemoryTrackerRecentlyRefreshed ) ; \n - public Optional < PersistentTasksCustomMetadata . Assignment > checkMemoryFreshness ( String jobId ) { \n - boolean isMemoryTrackerRecentlyRefreshed = memoryTracker . isRecentlyRefreshed ( ) ; \n + public Optional < PersistentTasksCustomMetadata . Assignment > checkMemoryFreshness ( String jobId , boolean isMemoryTrackerRecentlyRefreshed ) { \n
build . xml \n - < property name = " version - base " value = " 4 . 10 " / > \n + < property name = " version - base " value = " 4 . 10 . 1 " / > \n
build . xml \n - < property name = " version - base " value = " 4 . 10 . 1 " / > \n + < property name = " version - base " value = " 4 . 10 " / > \n
src \ main \ java \ org \ junit \ experimental \ interceptor \ TestWatchman . java \n - / * * \n - * \n - * / \n src \ test \ java \ org \ junit \ tests \ experimental \ TimeoutInterceptorTest . java \n + import org . junit . Ignore ; \n + / / TODO ( May 6 , 2009 11 : 30 : 19 AM ) : Make a separate build that makes gump happy \n + @ Ignore ( " For gump , for now " ) \n
src \ test \ java \ org \ junit \ tests \ AllTests . java \n + import org . junit . tests . experimental . parallel . ParallelClassTest ; \n + import org . junit . tests . experimental . parallel . ParallelMethodTest ; \n - TimeoutInterceptorTest . class \n + TimeoutInterceptorTest . class , \n + ParallelClassTest . class , \n + ParallelMethodTest . class \n
new file \n src \ main \ java \ org \ junit \ experimental \ interceptor \ MethodRule . java \n + package org . junit . experimental . interceptor ; \n + \n + import org . junit . runners . model . FrameworkMethod ; \n + import org . junit . runners . model . Statement ; \n + \n + public interface MethodRule { \n + / / TODO ( Jul 1 , 2009 1 : 43 : 11 PM ) : add documentation to \n + / / BlockJUnit4ClassRunner \n + Statement apply ( Statement base , FrameworkMethod method , Object target ) ; \n + } \n new file \n src \ main \ java \ org \ junit \ experimental \ interceptor \ Rule . java \n + package org . junit . experimental . interceptor ; \n + \n + import java . lang . annotation . Retention ; \n + import java . lang . annotation . RetentionPolicy ; \n + \n + / * * \n + * Annotates fields that contain rules . Such a field must be public , not \n + * static , and a subtype of { @ link MethodRule } . For more information , \n + * see { @ link MethodRule } \n + * / \n + @ Retention ( RetentionPolicy . RUNTIME ) \n + public @ interface Rule { \n + \n + } \n
src \ main \ java \ org \ junit \ experimental \ categories \ Categories . java \n + import java . util . ArrayList ; \n + import java . util . Arrays ; \n + import java . util . List ; \n - Category annotation = description . getAnnotation ( Category . class ) ; \n - if ( annotation = = null ) \n + List < Class < ? > > categories = categories ( description ) ; \n + if ( categories . isEmpty ( ) ) \n - for ( Class < ? > each : annotation . value ( ) ) { \n + for ( Class < ? > each : categories ) \n + for ( Class < ? > each : categories ) \n - } \n + \n + private List < Class < ? > > categories ( Description description ) { \n + ArrayList < Class < ? > > categories = new ArrayList < Class < ? > > ( ) ; \n + categories . addAll ( Arrays . asList ( directCategories ( description ) ) ) ; \n + categories . addAll ( Arrays . asList ( directCategories ( parentDescription ( description ) ) ) ) ; \n + return categories ; \n + } \n + \n + private Description parentDescription ( Description description ) { \n + / / TODO : how heavy are we cringing ? \n + return Description . createSuiteDescription ( description . getTestClass ( ) ) ; \n + } \n + \n + private Class < ? > [ ] directCategories ( Description description ) { \n + Category annotation = description . getAnnotation ( Category . class ) ; \n + if ( annotation = = null ) \n + return new Class < ? > [ 0 ] ; \n + return annotation . value ( ) ; \n + } \n src \ test \ java \ org \ junit \ tests \ experimental \ categories \ CategoryTest . java \n + @ Category ( { Category2 . class , Category1 . class } ) @ Test public void bothReversed ( ) { } \n - public void testsThatAreBothIncludedAndExcludedAreIncluded ( ) { \n + public void testsThatAreBothIncludedAndExcludedAreExcluded ( ) { \n + assertEquals ( 2 , result . getRunCount ( ) ) ; \n
src \ main \ java \ org \ junit \ experimental \ max \ MaxHistory . java \n - / / TODO ( Feb 23 , 2009 10 : 41 : 36 PM ) : V \n src \ main \ java \ org \ junit \ internal \ ComparisonCriteria . java \n + / * * \n + * Defines criteria for finding two items " equal enough " . Concrete subclasses \n + * may demand exact equality , or , for example , equality within a given delta . \n + * / \n - \n + \n - * Asserts that two arrays are equal . If they are not , an \n - * { @ link AssertionError } is thrown with the given message . If \n - * < code > expecteds < / code > and < code > actuals < / code > are < code > null < / code > , \n - * they are considered equal . \n + * Asserts that two arrays are equal , according to the criteria defined by \n + * the concrete subclass . If they are not , an { @ link AssertionError } is \n + * thrown with the given message . If < code > expecteds < / code > and \n + * < code > actuals < / code > are < code > null < / code > , they are considered equal . \n - * the identifying message for the { @ link AssertionError } ( < code > null < / code > \n - * okay ) \n + * the identifying message for the { @ link AssertionError } ( \n + * < code > null < / code > okay ) \n - * @ param criteria TODO \n - public void arrayEquals ( String message , Object expecteds , \n - Object actuals ) throws ArrayComparisonFailure { \n - / / TODO : DUP above \n - / / TODO ( Sep 8 , 2008 4 : 32 : 50 PM ) : Test that this fails sometimes \n - / / TODO ( Sep 8 , 2008 4 : 33 : 04 PM ) : Update javadoc \n - \n + public void arrayEquals ( String message , Object expecteds , Object actuals ) \n + throws ArrayComparisonFailure { \n - \n - int expectedsLength = Assert . assertArraysAreSameLength ( expecteds , actuals , \n - header ) ; \n + \n + int expectedsLength = Assert . assertArraysAreSameLength ( expecteds , \n + actuals , header ) ; \n - \n + \n src \ main \ java \ org \ junit \ internal \ ExactComparisonCriteria . java \n - / / TODO ( Apr 29 , 2009 4 : 17 : 49 PM ) : where should this live ? \n
. settings \ org . eclipse . jdt . core . prefs \n - # Fri Jul 17 17 : 27 : 50 EDT 2009 \n + # Mon Jul 27 22 : 30 : 22 EDT 2009 \n - org . eclipse . jdt . core . compiler . problem . missingJavadocComments = warning \n + org . eclipse . jdt . core . compiler . problem . missingJavadocComments = ignore \n new file \n src \ main \ java \ CategoryTest . java \n + import static org . junit . Assert . fail ; \n + import org . junit . rules . MethodRule ; \n + import org . junit . rules . Timeout ; \n + import org . junit . runner . RunWith ; \n + import org . junit . runners . Suite ; \n + import org . junit . runners . Suite . SuiteClasses ; \n + \n + \n + public class CategoryTest { \n + public static class A { \n + public void a ( ) { \n + / / pass \n + } \n + \n + @ Category ( SlowTests . class ) \n + public void b ( ) { \n + fail ( ) ; \n + } \n + } \n + \n + @ Category ( SlowTests . class ) \n + public static class B { \n + public void c ( ) { \n + \n + } \n + } \n + \n + public static class C { \n + public void d ( ) { \n + \n + } \n + } \n + \n + @ RunWith ( Suite . class ) \n + @ SuiteClasses ( { A . class , B . class , C . class } ) \n + public static class AbcTest { \n + enum JUnitCategories { \n + INTEGRATION , UNIT , GOOD , BAD ; \n + } \n + \n + enum GoogleCategories extends JUnitCategories { \n + SMALL , MEDIUM , LARGE , ENORMOUS ; \n + } \n + \n + @ SuiteRule public Filter filter = new CategoryFilter ( Category . class , SLOW ) ; \n + @ SuiteRule public Filter decimator = new RandomFilter ( 0 . 1 ) ; \n + \n + @ SuiteRule public SuiteRule globalTimeout = GlobalTimeout . createTimeoutOnEachMethod ( 1000 ) ; \n + \n + public static MethodRule GOOGLE _ DEFAULT _ TIMEOUT = new Timeout ( 1000 ) ; \n + \n + SuiteRule \n + @ SuiteRule public MethodRule timeout = new Timeout ( 1000 ) ; \n + \n + @ SuiteRule public MethodRuleDistributor timeoutDistributer = \n + new MethodRuleDistributor ( new Timeout ( 1000 ) ) ; \n + } \n + } \n
server \ src \ main \ java \ org \ elasticsearch \ action \ StepListener . java \n - import org . elasticsearch . action . support . GroupedActionListener ; \n - import java . util . Optional ; \n - import java . util . function . BinaryOperator ; \n + import java . util . function . BiFunction ; \n - public StepListener < Response > thenCombine ( StepListener < Response > other , BinaryOperator < Response > fn ) { \n - final StepListener < Response > combined = new StepListener < > ( ) ; \n - final GroupedActionListener < Response > groupedActionListener = \n - new GroupedActionListener < > ( combined . map ( results - > { \n - final Optional < Response > response = results . stream ( ) . reduce ( fn ) ; \n - assert response . isPresent ( ) ; \n - return response . get ( ) ; \n - } ) , 2 ) ; \n - delegate . addListener ( groupedActionListener , EsExecutors . newDirectExecutorService ( ) , null ) ; \n - other . delegate . addListener ( groupedActionListener , EsExecutors . newDirectExecutorService ( ) , null ) ; \n + public < OtherResponse , OuterResponse > StepListener < OuterResponse > thenCombine ( \n + StepListener < OtherResponse > other , \n + BiFunction < Response , OtherResponse , OuterResponse > fn ) { \n + final StepListener < OuterResponse > combined = new StepListener < > ( ) ; \n + whenComplete ( r1 - > other . whenComplete ( r2 - > combined . onResponse ( fn . apply ( r1 , r2 ) ) , combined : : onFailure ) , combined : : onFailure ) ; \n
docs \ reference \ searchable - snapshots \ index . asciidoc \n + [ discrete ] \n + [ [ searchable - snapshots - reliability ] ] \n + = = = Reliability of { search - snaps } \n + \n + The sole copy of the data in a { search - snap } index is the underlying snapshot , \n + stored in the repository . If the repository fails or corrupts the contents of \n + the snapshot then the data is lost . Although { es } may have made copies of the \n + data onto local storage , these copies may be incomplete and cannot be used to \n + recover any data after a repository failure . You must make sure that your \n + repository is reliable and protects against corruption of your data while it is \n + at rest in the repository . \n + \n + The blob storage offered by all major public cloud providers typically offers \n + very good protection against data loss or corruption . If you manage your own \n + repository storage then you are responsible for its reliability . \n + \n docs \ reference \ snapshot - restore \ register - repository . asciidoc \n + \n + [ discrete ] \n + [ [ snapshots - repository - backup ] ] \n + = = = Repository backup \n + \n + You may wish to make an independent backup of your repository , for instance so \n + that you have an archive copy of its contents that you can use to recreate the \n + repository in its current state at a later date . \n + \n + You must ensure that { es } does not write to the repository while you are taking \n + the backup of its contents . You can do this by unregistering it , or registering \n + it with ` readonly : true ` , on all your clusters . If { es } writes any data to the \n + repository during the backup then the contents of the backup may not be \n + consistent and it may not be possible to recover any data from it in future . \n + \n + Alternatively , if your repository supports it , you may take an atomic snapshot \n + of the underlying filesystem and then take a backup of this filesystem \n + snapshot . It is very important that the filesystem snapshot is taken \n + atomically . \n + \n + WARNING : You cannot use filesystem snapshots of individual nodes as a backup \n + mechanism . You must use the { es } snapshot and restore feature to copy the \n + cluster contents to a separate repository . Then , if desired , you can take a \n + filesystem snapshot of this repository . \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ fabric \ Binding . java \n - / / TODO ( T67721598 ) Remove the jsContext param once we ' ve migrated to using RuntimeExecutor \n
ReactCommon \ react \ renderer \ components \ view \ YogaLayoutableShadowNode . cpp \n - LOG ( INFO ) < < " RNYogaLogger " < < buffer . data ( ) ; \n + LOG ( ERROR ) < < " RNYogaLogger " < < buffer . data ( ) ; \n
compiler \ fir \ fir2ir \ src \ org \ jetbrains \ kotlin \ fir \ backend \ Fir2IrConverter . kt \n - declarationStorage . createIrConstructor ( it , irClass , isLocal = regularClass . isLocal ) \n + declarationStorage . getOrCreateIrConstructor ( it , irClass , isLocal = regularClass . isLocal ) \n - declarationStorage . createIrConstructor ( \n + declarationStorage . getOrCreateIrConstructor ( \n compiler \ fir \ fir2ir \ src \ org \ jetbrains \ kotlin \ fir \ backend \ Fir2IrDeclarationStorage . kt \n + fun getOrCreateIrConstructor ( \n + constructor : FirConstructor , \n + irParent : IrClass , \n + origin : IrDeclarationOrigin = IrDeclarationOrigin . DEFINED , \n + isLocal : Boolean = false \n + ) : IrConstructor { \n + getCachedIrConstructor ( constructor ) ? . let { return it } \n + return createIrConstructor ( constructor , irParent , origin , isLocal ) \n + } \n + \n
compiler \ fir \ fir2ir \ src \ org \ jetbrains \ kotlin \ fir \ backend \ Fir2IrDeclarationStorage . kt \n - val declarationOrigin = computeDeclarationOrigin ( firFunctionSymbol , parentOrigin , irParent ) \n + val declarationOrigin = computeDeclarationOrigin ( firFunctionSymbol , parentOrigin ) \n - val declarationOrigin = computeDeclarationOrigin ( firSymbol , parentOrigin , irParent ) \n + val declarationOrigin = computeDeclarationOrigin ( firSymbol , parentOrigin ) \n - parentOrigin : IrDeclarationOrigin , \n - irParent : IrDeclarationParent ? \n + parentOrigin : IrDeclarationOrigin \n - return if ( irParent . isSourceClass ( ) & & ( symbol . fir . isIntersectionOverride | | symbol . fir . isSubstitutionOverride ) ) \n + return if ( symbol . fir . isIntersectionOverride | | symbol . fir . isSubstitutionOverride ) \n - private fun IrDeclarationParent ? . isSourceClass ( ) = this is IrClass & & this ! is Fir2IrLazyClass & & this ! is IrLazyClass \n - \n
storm - core \ src \ jvm \ backtype \ storm \ Config . java \n - public static final Object ISOLATION _ SCHEDULER _ MACHINES _ SCHEMA = Number . class ; \n + public static final Object ISOLATION _ SCHEDULER _ MACHINES _ SCHEMA = Map . class ; \n storm - core \ test \ clj \ backtype \ storm \ config _ test . clj \n - ( . validateField validator " test " x ) ) ) ) \n + ( is ( nil ? ( try \n + ( . validateField validator " test " x ) \n + ( catch Exception e e ) ) ) ) ) ) ) \n - ( . validateField validator " test " x ) ) ) ) \n + ( is ( nil ? ( try \n + ( . validateField validator " test " x ) \n + ( catch Exception e e ) ) ) ) ) ) ) \n + \n + ( deftest test - isolation - scheduler - machines - is - map \n + ( let [ validator ( CONFIG - SCHEMA - MAP ISOLATION - SCHEDULER - MACHINES ) ] \n + ( is ( nil ? ( try \n + ( . validateField validator " test " { } ) \n + ( catch Exception e e ) ) ) ) \n + ( is ( nil ? ( try \n + ( . validateField validator " test " { " host0 " 1 " host1 " 2 } ) \n + ( catch Exception e e ) ) ) ) \n + ( is ( thrown - cause ? java . lang . IllegalArgumentException \n + ( . validateField validator " test " 42 ) ) ) ) ) \n
storm - core \ src \ clj \ backtype \ storm \ daemon \ logviewer . clj \n - ( html \n + ( html4 \n storm - core \ src \ clj \ backtype \ storm \ ui \ core . clj \n - ( html \n + ( html4 \n
build . gradle \n - classpath " com . badlogicgames . gdx : gdx - jnigen - gradle : 2 . 0 . 0 - SNAPSHOT " \n + classpath " com . badlogicgames . gdx : gdx - jnigen - gradle : 2 . 0 . 0 " \n
. github \ workflows \ build . yml \n - name : Build macOS natives \n - run : ant - f build - mac - ios . xml \n + run : . / gradlew jnigen jnigenBuild \n
x - pack \ plugin \ ilm \ qa \ multi - node \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ ilm \ actions \ ShrinkActionIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 69325 " ) \n
x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ action \ TransportStartDataFrameAnalyticsAction . java \n - import org . elasticsearch . action . search . SearchResponse ; \n - import org . elasticsearch . action . support . IndicesOptions ; \n - import org . elasticsearch . index . query . QueryBuilders ; \n - import org . elasticsearch . search . SearchHit ; \n - import org . elasticsearch . xpack . ml . dataframe . StoredProgress ; \n - import org . elasticsearch . xpack . ml . utils . persistence . MlParserUtils ; \n - startContext - > { \n - estimateMemoryUsageAndUpdateMemoryTracker ( startContext , memoryUsageHandledListener ) ; \n - } , \n + startContext - > estimateMemoryUsageAndUpdateMemoryTracker ( startContext , memoryUsageHandledListener ) , \n - private void searchProgressFromIndex ( String jobId , ActionListener < StoredProgress > listener ) { \n - SearchRequest searchRequest = new SearchRequest ( AnomalyDetectorsIndex . jobStateIndexPattern ( ) ) ; \n - searchRequest . indicesOptions ( IndicesOptions . lenientExpandOpen ( ) ) ; \n - searchRequest . source ( ) . size ( 1 ) ; \n - searchRequest . source ( ) . query ( QueryBuilders . idsQuery ( ) . addIds ( StoredProgress . documentId ( jobId ) ) ) ; \n - searchRequest . allowPartialSearchResults ( false ) ; \n - \n - ActionListener < SearchResponse > searchListener = ActionListener . wrap ( \n - searchResponse - > { \n - SearchHit [ ] hits = searchResponse . getHits ( ) . getHits ( ) ; \n - if ( hits . length = = 0 ) { \n - logger . debug ( ( ) - > new ParameterizedMessage ( " [ { } ] No stored progress found " , jobId ) ) ; \n - listener . onResponse ( null ) ; \n - } else { \n - StoredProgress storedProgress = MlParserUtils . parse ( hits [ 0 ] , StoredProgress . PARSER ) ; \n - logger . debug ( ( ) - > new ParameterizedMessage ( " [ { } ] Found stored progress { } " , jobId , storedProgress . get ( ) . get ( 0 ) ) ) ; \n - listener . onResponse ( storedProgress ) ; \n - } \n - } , \n - listener : : onFailure \n - ) ; \n - \n - executeAsyncWithOrigin ( client , ML _ ORIGIN , SearchAction . INSTANCE , searchRequest , searchListener ) ; \n - } \n - \n
picasso \ src \ main \ java \ com \ squareup \ picasso \ RequestBuilder . java \n - this . transformations = new ArrayList < Transformation > ( 4 ) ; \n
picasso \ src \ main \ java \ com \ squareup \ picasso \ Picasso . java \n - final ReferenceQueue < ? super ImageView > imageReferenceQueue ; \n - final ReferenceQueue < ? super Target > targetReferenceQueue ; \n + final ReferenceQueue < Object > referenceQueue ; \n - this . imageReferenceQueue = new ReferenceQueue < ImageView > ( ) ; \n - this . targetReferenceQueue = new ReferenceQueue < Target > ( ) ; \n + this . referenceQueue = new ReferenceQueue < Object > ( ) ; \n - new CleanupThread ( imageReferenceQueue , handler ) . start ( ) ; \n - new CleanupThread ( targetReferenceQueue , handler ) . start ( ) ; \n + new CleanupThread ( referenceQueue , handler ) . start ( ) ; \n + setName ( Utils . THREAD _ PREFIX + " refQueue " ) ; \n - } catch ( InterruptedException e ) { \n - break ; \n - new RuntimeException ( e ) ; \n + throw new RuntimeException ( e ) ; \n + break ; \n picasso \ src \ main \ java \ com \ squareup \ picasso \ Request . java \n - this . target = new IdWeakReference < ImageView > ( id , imageView , picasso . imageReferenceQueue ) ; \n + this . target = new IdWeakReference < ImageView > ( id , imageView , picasso . referenceQueue ) ; \n picasso \ src \ main \ java \ com \ squareup \ picasso \ TargetRequest . java \n - strong ? null : new WeakReference < Target > ( target , picasso . targetReferenceQueue ) ; \n + strong ? null : new WeakReference < Target > ( target , picasso . referenceQueue ) ; \n
native \ commonizer \ src \ org \ jetbrains \ kotlin \ descriptors \ commonizer \ CommonizerParameters . kt \n - fun hasAnythingToCommonize ( ) : Boolean { \n - if ( _ targetProviders . size < 2 ) return false / / too few targets \n + fun getCommonModuleNames ( ) : Set < String > { \n + if ( _ targetProviders . size < 2 ) return emptySet ( ) / / too few targets \n - val commonModuleNames : Set < String > = allModuleNames . reduce { a , b - > a intersect b } \n - return commonModuleNames . isNotEmpty ( ) / / there are modules that are present in every target \n + return allModuleNames . reduce { a , b - > a intersect b } / / there are modules that are present in every target \n + } \n + \n + fun hasAnythingToCommonize ( ) : Boolean { \n + return getCommonModuleNames ( ) . isNotEmpty ( ) \n native \ commonizer \ src \ org \ jetbrains \ kotlin \ descriptors \ commonizer \ mergedtree \ CirTreeMerger . kt \n - val commonModuleNames = allModuleInfos . map { it . keys } . reduce { a , b - > a intersect b } \n + val commonModuleNames = parameters . getCommonModuleNames ( ) \n - moduleNode . targetDeclarations [ targetIndex ] = CirModuleFactory . create ( moduleDescriptor ) \n + moduleNode . targetDeclarations [ targetIndex ] = CirModuleFactory . create ( moduleName ) \n
native \ commonizer \ src \ org \ jetbrains \ kotlin \ descriptors \ commonizer \ cir \ CirName . kt \n - import org . jetbrains . kotlin . descriptors . commonizer . cir . CirPackageName . Companion . create \n
common \ src \ main \ java \ io \ netty \ util \ internal \ ConcurrentSet . java \n + / * * \n + * @ deprecated For removal in Netty 4 . 2 . Please use { @ link ConcurrentHashMap # newKeySet ( ) } instead \n + * / \n + @ Deprecated \n
common \ src \ main \ java \ io \ netty \ util \ internal \ IntegerHolder . java \n + / * * \n + * @ deprecated For removal in netty 4 . 2 \n + * / \n + @ Deprecated \n common \ src \ main \ java \ io \ netty \ util \ internal \ InternalThreadLocalMap . java \n + @ Deprecated \n + @ Deprecated \n
codec - mqtt \ src \ main \ java \ io \ netty \ handler \ codec \ mqtt \ MqttDecoder . java \n - int qos = buffer . readUnsignedByte ( ) & 0x03 ; \n + int qos = buffer . readUnsignedByte ( ) ; \n + if ( qos ! = MqttQoS . FAILURE . value ( ) ) { \n + qos & = 0x03 ; \n + } \n codec - mqtt \ src \ test \ java \ io \ netty \ handler \ codec \ mqtt \ MqttCodecTest . java \n + @ Test \n + public void testSubAckMessageWithFailureInPayload ( ) throws Exception { \n + MqttFixedHeader mqttFixedHeader = \n + new MqttFixedHeader ( MqttMessageType . SUBACK , false , MqttQoS . AT _ MOST _ ONCE , false , 0 ) ; \n + MqttMessageIdVariableHeader mqttMessageIdVariableHeader = MqttMessageIdVariableHeader . from ( 12345 ) ; \n + MqttSubAckPayload mqttSubAckPayload = new MqttSubAckPayload ( MqttQoS . FAILURE . value ( ) ) ; \n + MqttSubAckMessage message = \n + new MqttSubAckMessage ( mqttFixedHeader , mqttMessageIdVariableHeader , mqttSubAckPayload ) ; \n + \n + ByteBuf byteBuf = MqttEncoder . doEncode ( ALLOCATOR , message ) ; \n + \n + List < Object > out = new LinkedList < Object > ( ) ; \n + mqttDecoder . decode ( ctx , byteBuf , out ) ; \n + \n + assertEquals ( " Expected one object but got " + out . size ( ) , 1 , out . size ( ) ) ; \n + \n + MqttSubAckMessage decodedMessage = ( MqttSubAckMessage ) out . get ( 0 ) ; \n + validateFixedHeaders ( message . fixedHeader ( ) , decodedMessage . fixedHeader ( ) ) ; \n + validateMessageIdVariableHeader ( message . variableHeader ( ) , decodedMessage . variableHeader ( ) ) ; \n + validateSubAckPayload ( message . payload ( ) , decodedMessage . payload ( ) ) ; \n + assertEquals ( 1 , decodedMessage . payload ( ) . grantedQoSLevels ( ) . size ( ) ) ; \n + assertEquals ( MqttQoS . FAILURE , MqttQoS . valueOf ( decodedMessage . payload ( ) . grantedQoSLevels ( ) . get ( 0 ) ) ) ; \n + } \n + \n
transport \ src \ main \ java \ io \ netty \ channel \ DefaultChannelPipeline . java \n + / * * \n + * Called once a message hit the end of the { @ link ChannelPipeline } without been handled by the user \n + * in { @ link ChannelInboundHandler # channelRead ( ChannelHandlerContext , Object ) } . This method is responsible \n + * to call { @ link ReferenceCountUtil # release ( Object ) } on the given msg at some point . \n + * / \n + protected void onUnhandledInboundMessage ( ChannelHandlerContext ctx , Object msg ) { \n + onUnhandledInboundMessage ( msg ) ; \n + if ( logger . isDebugEnabled ( ) ) { \n + logger . debug ( " Discarded message pipeline : { } . Channel : { } . " , \n + ctx . pipeline ( ) . names ( ) , ctx . channel ( ) ) ; \n + } \n + } \n + \n - onUnhandledInboundMessage ( msg ) ; \n + onUnhandledInboundMessage ( ctx , msg ) ; \n
compiler \ tests - common - new \ tests \ org \ jetbrains \ kotlin \ test \ frontend \ fir \ handlers \ FirCfgDumpHandler . kt \n + alreadyDumped = true \n
compiler \ compiler . version \ src \ org \ jetbrains \ kotlin \ config \ KotlinCompilerVersion . java \n - private static final boolean IS _ PRE _ RELEASE = false ; \n + private static final boolean IS _ PRE _ RELEASE = true ; \n
compiler \ fir \ fir2ir \ tests - gen \ org \ jetbrains \ kotlin \ codegen \ ir \ FirBytecodeTextTestGenerated . java \n + @ TestMetadata ( " kt39612 . kt " ) \n + public void testKt39612 ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / bytecodeText / callableReference / kt39612 . kt " ) ; \n + } \n + \n compiler \ ir \ backend . common \ src \ org \ jetbrains \ kotlin \ backend \ common \ lower \ KCallableNamePropertyLowering . kt \n - val callableReference = expression . dispatchReceiver as ? IrCallableReference < * > ? : return expression \n + val callableReference = expression . dispatchReceiver as ? IrCallableReference < * > \n + ? : return super . visitCall ( expression ) \n - / / TODO rewrite checking \n - val irClass = directMember . parent as ? IrClass ? : return expression \n - if ( ! irClass . isSubclassOf ( lower . context . irBuiltIns . kCallableClass . owner ) ) return expression \n + \n + val irClass = directMember . parent as ? IrClass \n + ? : return super . visitCall ( expression ) \n + if ( ! irClass . isSubclassOf ( lower . context . irBuiltIns . kCallableClass . owner ) ) { \n + return super . visitCall ( expression ) \n + } \n + \n new file \n compiler \ testData \ codegen \ bytecodeText \ callableReference \ kt39612 . kt \n + / / IGNORE _ BACKEND _ FIR : JVM _ IR \n + fun foo ( ) { } \n + \n + fun id ( s : String ) = s \n + \n + fun test1 ( ) = id ( : : foo . name ) \n + \n + fun test2 ( name : String ) = ( if ( name = = : : foo . name ) : : foo else : : id ) . annotations \n + \n + / / 0 getName \n + / / 3 LDC " foo " \n compiler \ tests - gen \ org \ jetbrains \ kotlin \ codegen \ BytecodeTextTestGenerated . java \n + @ TestMetadata ( " kt39612 . kt " ) \n + public void testKt39612 ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / bytecodeText / callableReference / kt39612 . kt " ) ; \n + } \n + \n compiler \ tests - gen \ org \ jetbrains \ kotlin \ codegen \ ir \ IrBytecodeTextTestGenerated . java \n + @ TestMetadata ( " kt39612 . kt " ) \n + public void testKt39612 ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / bytecodeText / callableReference / kt39612 . kt " ) ; \n + } \n + \n
compiler \ backend \ src \ org \ jetbrains \ kotlin \ codegen \ DefaultParameterValueSubstitutor . kt \n + import org . jetbrains . kotlin . resolve . DescriptorUtils \n + if ( DescriptorUtils . isSealedClass ( classDescriptor ) ) return false \n compiler \ ir \ backend . jvm \ src \ org \ jetbrains \ kotlin \ backend \ jvm \ lower \ JvmDefaultConstructorLowering . kt \n + import org . jetbrains . kotlin . descriptors . Modality \n - if ( irClass . kind ! = ClassKind . CLASS | | irClass . visibility = = DescriptorVisibilities . LOCAL | | irClass . isInline | | irClass . isInner ) \n + if ( irClass . kind ! = ClassKind . CLASS | | irClass . visibility = = DescriptorVisibilities . LOCAL | | irClass . isInline | | irClass . isInner | | \n + irClass . modality = = Modality . SEALED \n + ) \n new file \n compiler \ testData \ codegen \ bytecodeListing \ sealedClassConstructorWithDefaultParams . kt \n + / / ! LANGUAGE : + AllowSealedInheritorsInDifferentFilesOfSamePackage \n + \n + sealed class Test ( val x : Int = 0 ) \n new file \n compiler \ testData \ codegen \ bytecodeListing \ sealedClassConstructorWithDefaultParams . txt \n + @ kotlin . Metadata \n + public abstract class Test { \n + / / source : ' sealedClassConstructorWithDefaultParams . kt ' \n + private final field x : int \n + public method < init > ( p0 : int ) : void \n + public synthetic method < init > ( p0 : int , p1 : int , p2 : kotlin . jvm . internal . DefaultConstructorMarker ) : void \n + public final method getX ( ) : int \n + } \n compiler \ tests - gen \ org \ jetbrains \ kotlin \ codegen \ BytecodeListingTestGenerated . java \n + @ TestMetadata ( " sealedClassConstructorWithDefaultParams . kt " ) \n + public void testSealedClassConstructorWithDefaultParams ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / bytecodeListing / sealedClassConstructorWithDefaultParams . kt " ) ; \n + } \n + \n compiler \ tests - gen \ org \ jetbrains \ kotlin \ codegen \ ir \ IrBytecodeListingTestGenerated . java \n + @ TestMetadata ( " sealedClassConstructorWithDefaultParams . kt " ) \n + public void testSealedClassConstructorWithDefaultParams ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / bytecodeListing / sealedClassConstructorWithDefaultParams . kt " ) ; \n + } \n + \n
idea \ kotlin - gradle - tooling \ src \ KotlinMPPGradleModelBuilder . kt \n - ( allSourceSetToCompilations [ sourceSet ] ? . all { it . isTestModule } \n - ? : if ( ! isHMPPEnabled & & sourceSet . name = = KotlinSourceSet . COMMON _ TEST _ SOURCE _ SET _ NAME ) true else null ) ? . let { isTest - > \n + allSourceSetToCompilations [ sourceSet ] ? . all { it . isTestModule } ? . let { isTest - > \n + \n
idea \ kotlin - gradle - tooling \ src \ KotlinMPPGradleModelBuilder . kt \n - reportUnresolvedDependencies ( targets ) \n - private fun reportUnresolvedDependencies ( targets : Collection < KotlinTarget > ) { \n - targets . asSequence ( ) \n - . flatMap { it . compilations . asSequence ( ) } \n - . flatMap { it . dependencies . asSequence ( ) } \n - . mapNotNull { ( it as ? UnresolvedExternalDependency ) ? . failureMessage } \n - . toSet ( ) \n - . forEach { logger . warn ( it ) } \n - } \n - \n
common \ src \ main \ java \ com \ example \ android \ uamp \ media \ PackageValidator . kt \n + import androidx . core . app . NotificationManagerCompat \n - * This last permission can be specifically granted to apps , and , in addition to \n - * allowing them to retrieve notifications , it also allows them to connect to an \n - * active [ MediaSessionCompat ] . \n - * As with the above , it ' s not required to allow apps holding this permission to \n - * connect to your [ MediaBrowserServiceCompat ] , but it does allow easy comparability \n + * If the calling app has a notification listener it is able to retrieve notifications \n + * and can connect to an active [ MediaSessionCompat ] . \n + * \n + * It ' s not required to allow apps with a notification listener to \n + * connect to your [ MediaBrowserServiceCompat ] , but it does allow easy compatibility \n - callerPackageInfo . permissions . contains ( BIND _ NOTIFICATION _ LISTENER _ SERVICE ) - > true \n - / / If none of the pervious checks succeeded , then the caller is unrecognized . \n + NotificationManagerCompat . getEnabledListenerPackages ( this . context ) \n + . contains ( callerPackageInfo . packageName ) - > true \n + \n + / / If none of the previous checks succeeded , then the caller is unrecognized . \n
app \ src \ main \ java \ com \ example \ android \ uamp \ cast \ UampCastOptionsProvider . kt \n - import com . google . android . gms . cast . CastMediaControlIntent . DEFAULT _ MEDIA _ RECEIVER _ APPLICATION _ ID \n + import com . google . android . exoplayer2 . ext . cast . DefaultCastOptionsProvider . APP _ ID _ DEFAULT _ RECEIVER _ WITH _ DRM \n - / / Use the Default Media Receiver . \n - / / See : https : / / developers . google . com / cast / docs / caf _ receiver # default _ media _ receiver . \n - / / If your content is DRM protected you can use the ExoPlayer default receiver app id \n - / / which has a value of " A12D4273 " \n - . setReceiverApplicationId ( DEFAULT _ MEDIA _ RECEIVER _ APPLICATION _ ID ) \n + / / Use the Default Media Receiver with DRM support . \n + . setReceiverApplicationId ( APP _ ID _ DEFAULT _ RECEIVER _ WITH _ DRM ) \n
pom . xml \n - < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " \n - xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > \n - \n + < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > \n + < parent > \n + < groupId > org . sonatype . oss < / groupId > \n + < artifactId > oss - parent < / artifactId > \n + < version > 7 < / version > \n + < / parent > \n + \n + < developerConnection > scm : git : git @ github . com : jfeinstein10 / SlidingMenu . git < / developerConnection > \n
changelog . txt \n + * Adding APK splits to gridViewExample ( # 1834 ) . \n examples \ gridViewExample \ build . gradle \n + \n + splits { \n + / / Split apks on build target ABI , view all options for the splits here : \n + / / http : / / tools . android . com / tech - docs / new - build - system / user - guide / apk - splits \n + abi { \n + enable true \n + reset ( ) \n + include ' arm ' , ' arm - v7a ' , ' arm64 ' , ' mips ' , ' x86 ' , ' x86 _ 64 ' \n + } \n + } \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ schedule \ ScheduleFragment . kt \n + override fun onStart ( ) { \n + super . onStart ( ) \n + scheduleViewModel . initializeTimeZone ( ) \n + } \n + \n mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ schedule \ ScheduleViewModel . kt \n - getTimeZoneUseCase : GetTimeZoneUseCase , \n + private val getTimeZoneUseCase : GetTimeZoneUseCase , \n - getTimeZoneUseCase ( Unit , preferConferenceTimeZoneResult ) \n - \n + \n + fun initializeTimeZone ( ) { \n + getTimeZoneUseCase ( Unit , preferConferenceTimeZoneResult ) \n + } \n
build . gradle \n + leakCanaryVersion = " 1 . 5 . 4 " \n mobile \ build . gradle \n + \n + / / Leak Canary \n + debugImplementation " com . squareup . leakcanary : leakcanary - android : $ leakCanaryVersion " \n + stagingImplementation " com . squareup . leakcanary : leakcanary - android - no - op : $ leakCanaryVersion " \n + releaseImplementation " com . squareup . leakcanary : leakcanary - android - no - op : $ leakCanaryVersion " \n mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ MainApplication . kt \n + import com . squareup . leakcanary . LeakCanary \n + if ( LeakCanary . isInAnalyzerProcess ( this ) ) { \n + / / This process is dedicated to LeakCanary for heap analysis . \n + / / You should not init your app in this process . \n + return \n + } \n + \n + \n + LeakCanary . install ( this ) \n
lib \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ feed \ FeedViewHolder . java \n + import android . content . Intent ; \n + import android . net . Uri ; \n + setClickListener ( feedMessage . isClickable ( ) , feedMessage . getLink ( ) ) ; \n + private void setClickListener ( boolean isClickable , final String link ) { \n + itemView . setClickable ( isClickable ) ; \n + itemView . setOnClickListener ( new View . OnClickListener ( ) { \n + @ Override \n + public void onClick ( View v ) { \n + Intent linkIntent = new Intent ( Intent . ACTION _ VIEW ) ; \n + linkIntent . setData ( Uri . parse ( link ) ) ; \n + itemView . getContext ( ) . startActivity ( linkIntent ) ; \n + } \n + } ) ; \n + } \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ MainActivity . kt \n - private val mOnNavigationItemSelectedListener = OnNavigationItemSelectedListener { item - > \n + private val onNavigationItemSelectedListener = OnNavigationItemSelectedListener { item - > \n - navigation . setOnNavigationItemSelectedListener ( mOnNavigationItemSelectedListener ) \n + navigation . setOnNavigationItemSelectedListener ( onNavigationItemSelectedListener ) \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ ReactActivityDelegate . java \n - * Delegate class for { @ link ReactActivity } and { @ link ReactFragmentActivity } . You can subclass this \n - * to provide custom implementations for e . g . { @ link # getReactNativeHost ( ) } , if your Application \n - * class doesn ' t implement { @ link ReactApplication } . \n + * Delegate class for { @ link ReactActivity } . You can subclass this to provide custom implementations \n + * for e . g . { @ link # getReactNativeHost ( ) } , if your Application class doesn ' t implement { @ link \n + * ReactApplication } . \n deleted file \n ReactAndroid \ src \ main \ java \ com \ facebook \ react \ ReactFragmentActivity . java \n - / * \n - * Copyright ( c ) Facebook , Inc . and its affiliates . \n - * \n - * This source code is licensed under the MIT license found in the \n - * LICENSE file in the root directory of this source tree . \n - * / \n - \n - package com . facebook . react ; \n - \n - / * * \n - * @ deprecated ReactFragmentActivity will be removed in 0 . 59 release . Use { @ link ReactActivity } \n - * instead . \n - * / \n - @ Deprecated \n - public abstract class ReactFragmentActivity extends ReactActivity { } \n
package . json \n + " android " , \n
src \ test \ java \ io \ reactivex \ plugins \ RxJavaPluginsTest . java \n + import static org . junit . Assert . * ; \n + \n + import java . io . IOException ; \n + import java . lang . Thread . UncaughtExceptionHandler ; \n + import java . lang . reflect . * ; \n + import java . util . * ; \n + import java . util . concurrent . * ; \n + import java . util . concurrent . atomic . * ; \n + \n + import org . junit . * ; \n + import org . reactivestreams . * ; \n + \n + import io . reactivex . Observable ; \n + import io . reactivex . Observer ; \n - import io . reactivex . disposables . Disposable ; \n - import io . reactivex . disposables . Disposables ; \n + import io . reactivex . disposables . * ; \n - import io . reactivex . functions . BiFunction ; \n - import io . reactivex . functions . BooleanSupplier ; \n - import io . reactivex . functions . Consumer ; \n - import io . reactivex . functions . Function ; \n + import io . reactivex . functions . * ; \n - import org . junit . * ; \n - import org . reactivestreams . Subscriber ; \n - import org . reactivestreams . Subscription ; \n - \n - import java . io . IOException ; \n - import java . lang . Thread . UncaughtExceptionHandler ; \n - import java . lang . reflect . InvocationTargetException ; \n - import java . lang . reflect . Method ; \n - import java . util . ArrayList ; \n - import java . util . List ; \n - import java . util . concurrent . Callable ; \n - import java . util . concurrent . CountDownLatch ; \n - import java . util . concurrent . ThreadFactory ; \n - import java . util . concurrent . atomic . AtomicInteger ; \n - import java . util . concurrent . atomic . AtomicReference ; \n - \n - import static org . junit . Assert . * ; \n + * @ throws Exception on error \n + @ SuppressWarnings ( " rawtypes " ) \n src \ test \ java \ io \ reactivex \ schedulers \ NewThreadSchedulerTest . java \n + * @ throws Exception on error \n
src \ main \ java \ io \ reactivex \ observers \ package - info . java \n - * the { @ link io . reactivex . subscribers . TestObserver } that allows unit testing \n + * the { @ link io . reactivex . observers . TestObserver } that allows unit testing \n src \ test \ java \ io \ reactivex \ internal \ operators \ observable \ ObservableConcatMapCompletableTest . java \n - TestObserver to = us . concatMapCompletable ( completableComplete ( ) , 2 ) . test ( ) ; \n + TestObserver < Void > to = us . concatMapCompletable ( completableComplete ( ) , 2 ) . test ( ) ; \n - TestObserver to = us . hide ( ) . concatMapCompletable ( completableComplete ( ) , 2 ) . test ( ) ; \n + TestObserver < Void > to = us . hide ( ) . concatMapCompletable ( completableComplete ( ) , 2 ) . test ( ) ; \n - TestObserver to = ps1 . concatMapCompletable ( new Function < Integer , CompletableSource > ( ) { \n + TestObserver < Void > to = ps1 . concatMapCompletable ( new Function < Integer , CompletableSource > ( ) { \n - @ SuppressWarnings ( " unchecked " ) \n - @ SuppressWarnings ( " unchecked " ) \n
gradle \ build . gradle \n + \n + ipr { \n + withXml { provider - > \n + def compilerConfiguration = provider . node . component . find { \n + it . @ name = = ' CompilerConfiguration ' \n + } \n + \n + def annotationProcessing = compilerConfiguration . annotationProcessing [ 0 ] \n + annotationProcessing . @ enabled = true \n + annotationProcessing . @ useClasspath = false \n + annotationProcessing . appendNode ( ' processorPath ' , [ \n + value : " \ $ PROJECT _ DIR \ $ / lib / androidannotations - $ { androidAnnotationsVersion } . jar " \n + ] ) \n + annotationProcessing . appendNode ( ' processor ' , [ \n + name : ' com . googlecode . androidannotations . AndroidAnnotationProcessor ' , \n + options : ' ' \n + ] ) \n + annotationProcessing . appendNode ( ' processModule ' , [ \n + name : ' gradle ' , \n + generatedDirName : ' gen ' \n + ] ) \n + } \n + } \n
gradle \ AndroidManifest . xml \n - < activity android : name = " . activity . HelloAndroidActivity " > \n + < activity android : name = " . activity . HelloAndroidActivity _ " > \n gradle \ src \ main \ java \ com \ googlecode \ androidannotations \ gradle \ activity \ HelloAndroidActivity . java \n - import android . os . Bundle ; \n + import com . googlecode . androidannotations . annotations . AfterViews ; \n + import com . googlecode . androidannotations . annotations . EActivity ; \n + import com . googlecode . androidannotations . annotations . ViewById ; \n + import com . googlecode . androidannotations . annotations . res . StringRes ; \n + @ EActivity ( R . layout . main ) \n + @ StringRes \n - TextView helloTextView ; \n - \n - @ Override \n - protected void onCreate ( Bundle savedInstanceState ) { \n - super . onCreate ( savedInstanceState ) ; \n - setContentView ( R . layout . main ) ; \n - hello = getString ( R . string . hello ) ; \n - helloTextView = ( TextView ) findViewById ( R . id . helloTextView ) ; \n + @ ViewById \n + TextView helloTextView ; \n + @ AfterViews \n + void afterViews ( ) { \n
realm \ kotlin - extensions \ build . gradle \n - artifact file ( " $ { rootDir } / kotlin - extensions / build / outputs / aar / realm - kotlin - extensions - base - release . aar " ) \n + artifact ( file ( " $ { rootDir } / kotlin - extensions / build / outputs / aar / realm - kotlin - extensions - base - release . aar " ) ) { \n + builtBy assemble \n + } \n - artifact file ( " $ { rootDir } / kotlin - extensions / build / outputs / aar / realm - kotlin - extensions - objectServer - release . aar " ) \n + artifact ( file ( " $ { rootDir } / kotlin - extensions / build / outputs / aar / realm - kotlin - extensions - objectServer - release . aar " ) ) { \n + builtBy assemble \n + } \n
realm \ kotlin - extensions \ src \ androidTest \ kotlin \ io \ realm \ CoroutineTests . kt \n - countDownLatch . countDown ( ) \n - \n - if ( countDownLatch . count = = 0L & & ! realmInstance . isClosed ) { \n + if ( countDownLatch . count > 1 ) { \n + countDownLatch . countDown ( ) \n + } else { \n + countDownLatch . countDown ( ) \n - countDownLatch . countDown ( ) \n - \n - if ( countDownLatch . count = = 0L & & ! realmInstance . isClosed ) { \n + if ( countDownLatch . count > 1 ) { \n + countDownLatch . countDown ( ) \n + } else { \n + countDownLatch . countDown ( ) \n
Jenkinsfile \n - extensions : scm . extensions + [ [ $ class : ' CleanCheckout ' ] ] , \n + extensions : scm . extensions + [ \n + [ $ class : ' CleanCheckout ' ] , \n + [ $ class : ' SubmoduleOption ' , recursiveSubmodules : true ] \n + ] , \n - sh ' git submodule sync ' \n - sh ' git submodule update - - init - - recursive ' \n - / / Make sure not to delete the folder that Jenkins allocates to store scripts \n - sh ' git clean - ffdx - e . ? ? ? ? ? ? ? ? ' \n
Jenkinsfile \n - extensions : scm . extensions + [ [ $ class : ' CleanCheckout ' ] ] , \n + extensions : scm . extensions + [ \n + [ $ class : ' CleanCheckout ' ] , \n + [ $ class : ' SubmoduleOption ' , recursiveSubmodules : true ] \n + ] , \n - sh ' git submodule sync ' \n - sh ' git submodule update - - init - - recursive ' \n - / / Make sure not to delete the folder that Jenkins allocates to store scripts \n - sh ' git clean - ffdx - e . ? ? ? ? ? ? ? ? ' \n
realm - transformer \ src \ main \ groovy \ io \ realm \ transformer \ RealmTransformer . groovy \n - jarFile \n + jarFile . entries ( ) \n
realm - transformer \ src \ main \ groovy \ io \ realm \ transformer \ RealmTransformer . groovy \n - import java . util . jar . JarFile \n - \n - it . jarInputs . each { \n - def jarFile = new JarFile ( it . file ) \n - jarFile . entries ( ) \n - . findAll ( ) { it . name . endsWith ( SdkConstants . DOT _ CLASS ) } \n - . each { classNames . add ( \n - it . name \n - . substring ( 0 , it . name . length ( ) - SdkConstants . DOT _ CLASS . length ( ) ) \n - . replace ( File . separatorChar , ' . ' as char ) ) } \n - } \n
Libraries \ Animated \ Animated . js \n - const Animated = ( ( Platform . isTesting | | \n - ( Platform . OS = = = ' android ' & & global . RN $ Bridgeless ) \n + const Animated = ( ( Platform . isTesting \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ views \ scroll \ ReactHorizontalScrollView . java \n + import android . view . accessibility . AccessibilityEvent ; \n + import androidx . core . view . AccessibilityDelegateCompat ; \n + import androidx . core . view . accessibility . AccessibilityNodeInfoCompat ; \n + ViewCompat . setAccessibilityDelegate ( \n + this , \n + new AccessibilityDelegateCompat ( ) { \n + @ Override \n + public void onInitializeAccessibilityEvent ( View host , AccessibilityEvent event ) { \n + super . onInitializeAccessibilityEvent ( host , event ) ; \n + event . setScrollable ( mScrollEnabled ) ; \n + } \n + \n + @ Override \n + public void onInitializeAccessibilityNodeInfo ( \n + View host , AccessibilityNodeInfoCompat info ) { \n + super . onInitializeAccessibilityNodeInfo ( host , info ) ; \n + info . setScrollable ( mScrollEnabled ) ; \n + } \n + } ) ; \n + \n
stetho \ src \ main \ java \ com \ facebook \ stetho \ json \ ObjectMapper . java \n + / / JSON has no support for NaN , Infinity or - Infinity , so we serialize \n + / / then as strings . Google Chrome ' s inspector will accept them just fine . \n + if ( clazz . equals ( Double . class ) | | clazz . equals ( Float . class ) ) { \n + double doubleValue = ( ( Number ) value ) . doubleValue ( ) ; \n + if ( Double . isNaN ( doubleValue ) ) { \n + return " NaN " ; \n + } else if ( doubleValue = = Double . POSITIVE _ INFINITY ) { \n + return " Infinity " ; \n + } else if ( doubleValue = = Double . NEGATIVE _ INFINITY ) { \n + return " - Infinity " ; \n + } \n + } \n
stetho - js - rhino \ src \ main \ java \ com \ facebook \ stetho \ rhino \ JsConsole . java \n - import android . support . annotation . Nullable ; \n - private @ Nullable \n - JsConsole thePrototypeInstance = null ; \n - \n - * The zero - parameter constructor . \n + * < p > The zero - parameter constructor . < / p > \n - * When Context . defineClass is called with this class , it will construct \n - * File . prototype using this constructor . \n + * < p > When Context . defineClass is called with this class , it will construct \n + * JsConsole . prototype using this constructor . < / p > \n - if ( thePrototypeInstance = = null ) { \n - thePrototypeInstance = this ; \n - } \n + / / Empty \n
handler \ src \ test \ java \ io \ netty \ handler \ ssl \ SSLEngineTest . java \n + ssc . delete ( ) ; \n + ssc . delete ( ) ; \n + ssc . delete ( ) ; \n - setupHandlers ( SslContextBuilder . forServer ( ssc . certificate ( ) , ssc . privateKey ( ) , null ) \n - . sslProvider ( sslServerProvider ( ) ) \n - . sslContextProvider ( serverSslContextProvider ( ) ) \n - . ciphers ( null , IdentityCipherSuiteFilter . INSTANCE ) \n - . applicationProtocolConfig ( serverApn ) \n - . sessionCacheSize ( 0 ) \n - . sessionTimeout ( 0 ) \n - . build ( ) , \n - \n - SslContextBuilder . forClient ( ) \n - . sslProvider ( sslClientProvider ( ) ) \n - . sslContextProvider ( clientSslContextProvider ( ) ) \n - . applicationProtocolConfig ( clientApn ) \n - . trustManager ( InsecureTrustManagerFactory . INSTANCE ) \n - . ciphers ( null , IdentityCipherSuiteFilter . INSTANCE ) \n - . sessionCacheSize ( 0 ) \n - . sessionTimeout ( 0 ) \n - . build ( ) ) ; \n + try { \n + setupHandlers ( SslContextBuilder . forServer ( ssc . certificate ( ) , ssc . privateKey ( ) , null ) \n + . sslProvider ( sslServerProvider ( ) ) \n + . sslContextProvider ( serverSslContextProvider ( ) ) \n + . ciphers ( null , IdentityCipherSuiteFilter . INSTANCE ) \n + . applicationProtocolConfig ( serverApn ) \n + . sessionCacheSize ( 0 ) \n + . sessionTimeout ( 0 ) \n + . build ( ) , \n + \n + SslContextBuilder . forClient ( ) \n + . sslProvider ( sslClientProvider ( ) ) \n + . sslContextProvider ( clientSslContextProvider ( ) ) \n + . applicationProtocolConfig ( clientApn ) \n + . trustManager ( InsecureTrustManagerFactory . INSTANCE ) \n + . ciphers ( null , IdentityCipherSuiteFilter . INSTANCE ) \n + . sessionCacheSize ( 0 ) \n + . sessionTimeout ( 0 ) \n + . build ( ) ) ; \n + } finally { \n + ssc . delete ( ) ; \n + } \n + cert . delete ( ) ; \n + ssc . delete ( ) ; \n + cert . delete ( ) ; \n + cert . delete ( ) ; \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ Conscrypt . java \n - private static final Class < ? > ENGINES _ CLASS = getEnginesClass ( ) ; \n + private static final Class < ? > CONSCRYPT _ CLASS = getConscryptClass ( ) ; \n - return ENGINES _ CLASS ! = null & & PlatformDependent . javaVersion ( ) > = 8 ; \n + return CONSCRYPT _ CLASS ! = null & & PlatformDependent . javaVersion ( ) > = 8 ; \n - return isAvailable ( ) & & isConscryptEngine ( engine , ENGINES _ CLASS ) ; \n + return isAvailable ( ) & & isConscryptEngine ( engine , CONSCRYPT _ CLASS ) ; \n - private static Class < ? > getEnginesClass ( ) { \n + private static Class < ? > getConscryptClass ( ) { \n - / / Always use bootstrap class loader . \n - Class < ? > engineClass = Class . forName ( " org . conscrypt . Conscrypt $ Engines " , true , \n + Class < ? > conscryptClass = Class . forName ( " org . conscrypt . Conscrypt " , true , \n - getIsConscryptMethod ( engineClass ) ; \n - return engineClass ; \n + getIsConscryptMethod ( conscryptClass ) ; \n + return conscryptClass ; \n - private static boolean isConscryptEngine ( SSLEngine engine , Class < ? > enginesClass ) { \n + private static boolean isConscryptEngine ( SSLEngine engine , Class < ? > conscryptClass ) { \n - Method method = getIsConscryptMethod ( enginesClass ) ; \n + Method method = getIsConscryptMethod ( conscryptClass ) ; \n - private static Method getIsConscryptMethod ( Class < ? > enginesClass ) throws NoSuchMethodException { \n - return enginesClass . getMethod ( " isConscrypt " , SSLEngine . class ) ; \n + private static Method getIsConscryptMethod ( Class < ? > conscryptClass ) throws NoSuchMethodException { \n + return conscryptClass . getMethod ( " isConscrypt " , SSLEngine . class ) ; \n
revision . properties \n - retrofit . revision = 0 . 1 - SNAPSHOT \n + retrofit . revision = 0 . 2 - SNAPSHOT \n
build . xml \n - The Retrofit version number , becomes part of the JAR file names . \n - - > \n - < property name = " retrofit . revision " value = " 0 . 1 " / > \n + < property file = " revision . properties " / > \n new file \n revision . properties \n + retrofit . revision = 0 . 1 - SNAPSHOT \n + \n
pom . xml \n - < moshi . version > 1 . 5 . 0 < / moshi . version > \n + < moshi . version > 1 . 8 . 0 < / moshi . version > \n retrofit - converters \ moshi \ src \ test \ java \ retrofit2 \ converter \ moshi \ MoshiConverterFactoryTest . java \n - reader . nextName ( ) ; \n + reader . skipName ( ) ; \n - assertThat ( e ) . hasMessage ( " Cannot skip unexpected STRING at $ . taco " ) ; \n + assertThat ( e ) . hasMessage ( " Cannot skip unexpected NAME at $ . " ) ; \n
okhttp \ src \ main \ java \ okhttp3 \ Response . java \n - BufferedSource source = body . source ( ) ; \n - source . request ( byteCount ) ; \n - Buffer copy = source . buffer ( ) . clone ( ) ; \n - \n - / / There may be more than byteCount bytes in source . buffer ( ) . If there is , return a prefix . \n - Buffer result ; \n - if ( copy . size ( ) > byteCount ) { \n - result = new Buffer ( ) ; \n - result . write ( copy , byteCount ) ; \n - copy . clear ( ) ; \n - } else { \n - result = copy ; \n - } \n - \n - return ResponseBody . create ( body . contentType ( ) , result . size ( ) , result ) ; \n + BufferedSource peeked = body . source ( ) . peek ( ) ; \n + Buffer buffer = new Buffer ( ) ; \n + peeked . request ( byteCount ) ; \n + buffer . write ( peeked , Math . min ( byteCount , peeked . getBuffer ( ) . size ( ) ) ) ; \n + return ResponseBody . create ( body . contentType ( ) , buffer . size ( ) , buffer ) ; \n pom . xml \n - < okio . version > 1 . 15 . 0 < / okio . version > \n + < okio . version > 1 . 16 . 0 < / okio . version > \n
picasso \ src \ main \ java \ com \ squareup \ picasso3 \ BitmapUtils . java \n + import okio . Buffer ; \n + import okio . ForwardingSource ; \n + import static android . os . Build . VERSION . SDK _ INT ; \n - BufferedSource bufferedSource = Okio . buffer ( source ) ; \n - \n - if ( Build . VERSION . SDK _ INT > = 28 ) { \n - return decodeStreamP ( request , bufferedSource ) ; \n - } \n - \n - return decodeStreamPreP ( request , bufferedSource ) ; \n + ExceptionCatchingSource exceptionCatchingSource = new ExceptionCatchingSource ( source ) ; \n + BufferedSource bufferedSource = Okio . buffer ( exceptionCatchingSource ) ; \n + Bitmap bitmap = SDK _ INT > = 28 \n + ? decodeStreamP ( request , bufferedSource ) \n + : decodeStreamPreP ( request , bufferedSource ) ; \n + exceptionCatchingSource . throwIfCaught ( ) ; \n + return bitmap ; \n - boolean isPurgeable = request . purgeable & & Build . VERSION . SDK _ INT < Build . VERSION _ CODES . LOLLIPOP ; \n + boolean isPurgeable = request . purgeable & & SDK _ INT < Build . VERSION _ CODES . LOLLIPOP ; \n - if ( Build . VERSION . SDK _ INT > = 28 ) { \n + if ( SDK _ INT > = 28 ) { \n + static final class ExceptionCatchingSource extends ForwardingSource { \n + @ Nullable IOException thrownException ; \n + \n + ExceptionCatchingSource ( Source delegate ) { \n + super ( delegate ) ; \n + } \n + \n + @ Override public long read ( Buffer sink , long byteCount ) throws IOException { \n + try { \n + return super . read ( sink , byteCount ) ; \n + } catch ( IOException e ) { \n + thrownException = e ; \n + throw e ; \n + } \n + } \n + \n + void throwIfCaught ( ) throws IOException { \n + if ( thrownException ! = null ) { \n + / / TODO : Log when Android returns a non - null Bitmap after swallowing an IOException . \n + / / TODO : https : / / github . com / square / picasso / issues / 2003 / \n + throw thrownException ; \n + } \n + } \n + } \n + \n
picasso \ src \ main \ java \ com \ squareup \ picasso \ LruCache . java \n - final LinkedHashMap < String , Bitmap > map ; \n + final LinkedHashMap < String , BitmapAndSize > map ; \n - Bitmap mapValue ; \n + BitmapAndSize mapValue ; \n - return mapValue ; \n + return mapValue . bitmap ; \n - Bitmap previous = map . put ( key , bitmap ) ; \n + BitmapAndSize previous = map . put ( key , new BitmapAndSize ( bitmap , addedSize ) ) ; \n - size - = Utils . getBitmapBytes ( previous ) ; \n + size - = previous . allocationSize ; \n - Bitmap value ; \n + BitmapAndSize value ; \n - Map . Entry < String , Bitmap > toEvict = map . entrySet ( ) . iterator ( ) . next ( ) ; \n + Map . Entry < String , BitmapAndSize > toEvict = map . entrySet ( ) . iterator ( ) . next ( ) ; \n - size - = Utils . getBitmapBytes ( value ) ; \n + size - = value . allocationSize ; \n - for ( Iterator < Map . Entry < String , Bitmap > > i = map . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { \n - Map . Entry < String , Bitmap > entry = i . next ( ) ; \n + for ( Iterator < Map . Entry < String , BitmapAndSize > > i = map . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { \n + Map . Entry < String , BitmapAndSize > entry = i . next ( ) ; \n - Bitmap value = entry . getValue ( ) ; \n + BitmapAndSize value = entry . getValue ( ) ; \n - size - = Utils . getBitmapBytes ( value ) ; \n + size - = value . allocationSize ; \n + \n + static final class BitmapAndSize { \n + final Bitmap bitmap ; \n + final long allocationSize ; \n + \n + BitmapAndSize ( Bitmap bitmap , long allocationSize ) { \n + this . bitmap = bitmap ; \n + this . allocationSize = allocationSize ; \n + } \n + } \n picasso \ src \ test \ java \ com \ squareup \ picasso \ LruCacheTest . java \n - for ( Map . Entry < String , Bitmap > entry : cache . map . entrySet ( ) ) { \n + for ( Map . Entry < String , LruCache . BitmapAndSize > entry : cache . map . entrySet ( ) ) { \n - actualKeysAndValues . add ( entry . getValue ( ) ) ; \n + actualKeysAndValues . add ( entry . getValue ( ) . bitmap ) ; \n
http \ src \ main \ java \ retrofit \ http \ CallbackResponseHandler . java \n - \n + private String requestUrl ; / / Can be null . \n + this ( gson , callback , null ) ; \n + } \n + \n + protected CallbackResponseHandler ( Gson gson , Callback < T > callback , String requestUrl ) { \n + this . requestUrl = requestUrl ; \n - LOGGER . fine ( " Session expired . " ) ; \n + LOGGER . fine ( " Session expired . Request url " + requestUrl ) ; \n - LOGGER . fine ( " Missing entity for " + statusCode + " response . " ) ; \n + LOGGER . fine ( " Missing entity for " + statusCode + " response . Url " + requestUrl ) ; \n - + statusLine . getReasonPhrase ( ) + " . Body : " + body ) ; \n + + statusLine . getReasonPhrase ( ) + " . Body : " + body + " . Request url " + requestUrl ) ; \n - + statusLine . getReasonPhrase ( ) + " . " ) ; \n + + statusLine . getReasonPhrase ( ) + " . Request url " + requestUrl ) ; \n - + statusLine . getReasonPhrase ( ) + " . Body : " + body ) ; \n + + statusLine . getReasonPhrase ( ) + " . Body : " + body + " . Request url " + requestUrl ) ; \n - + statusLine . getReasonPhrase ( ) + " . " ) ; \n + + statusLine . getReasonPhrase ( ) + " . Request url " + requestUrl ) ; \n http \ src \ main \ java \ retrofit \ http \ GsonResponseHandler . java \n - super ( gson , callback ) ; \n + super ( gson , callback , url ) ; \n
src \ main \ java \ rx \ internal \ operators \ OnSubscribeCombineLatest . java \n - child . onNext ( ( R ) o ) ; \n + child . onNext ( NotificationLite . < R > instance ( ) . getValue ( o ) ) ; \n src \ test \ java \ rx \ CombineLatestTests . java \n + import rx . subjects . BehaviorSubject ; \n + \n + import static org . junit . Assert . assertNull ; \n + import static rx . Observable . combineLatest ; \n + \n + @ Test \n + public void testNullEmitting ( ) throws Exception { \n + Observable < Boolean > nullObservable = BehaviorSubject . create ( ( Boolean ) null ) ; \n + Observable < Boolean > nonNullObservable = BehaviorSubject . create ( true ) ; \n + Observable < Boolean > combined = \n + combineLatest ( nullObservable , nonNullObservable , new Func2 < Boolean , Boolean , Boolean > ( ) { \n + @ Override \n + public Boolean call ( Boolean bool1 , Boolean bool2 ) { \n + return bool1 = = null ? null : bool2 ; \n + } \n + } ) ; \n + combined . subscribe ( new Action1 < Boolean > ( ) { \n + @ Override \n + public void call ( Boolean aBoolean ) { \n + assertNull ( aBoolean ) ; \n + } \n + } ) ; \n + } \n
README . md \n - implementation ' com . facebook . fresco : fresco : 1 . 10 . 0 ' \n + implementation ' com . facebook . fresco : fresco : 1 . 11 . 0 ' \n docs \ _ config . yml \n - current _ version : 1 . 10 . 0 \n + current _ version : 1 . 11 . 0 \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipelineExperiments . java \n - private final boolean mSuppressBitmapPrefetching ; \n - mSuppressBitmapPrefetching = builder . mSuppressBitmapPrefetching ; \n - private boolean mSuppressBitmapPrefetching = false ; \n - public ImagePipelineConfig . Builder setSuppressBitmapPrefetching ( \n - boolean suppressBitmapPrefetching ) { \n - mSuppressBitmapPrefetching = suppressBitmapPrefetching ; \n - return mConfigBuilder ; \n - } \n - \n
core \ api \ system - current . txt \n + field public static final String RESTART _ WIFI _ SUBSYSTEM = " android . permission . RESTART _ WIFI _ SUBSYSTEM " ; \n core \ res \ AndroidManifest . xml \n + < ! - - Allows applications to restart the Wi - Fi subsystem . \n + @ SystemApi \n + < p > Not for use by third - party applications . @ hide - - > \n + < permission android : name = " android . permission . RESTART _ WIFI _ SUBSYSTEM " \n + android : protectionLevel = " signature | setup " / > \n + \n - - > \n
data \ etc \ privapp - permissions - platform . xml \n + < permission name = " android . permission . RESTART _ WIFI _ SUBSYSTEM " / > \n packages \ Shell \ AndroidManifest . xml \n + < ! - - Permission needed to restart WiFi Subsystem - - > \n + < uses - permission android : name = " android . permission . RESTART _ WIFI _ SUBSYSTEM " / > \n + \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ datasource \ AbstractProducerToDataSourceAdapter . java \n - import com . facebook . imagepipeline . request . DataSourceWithImageRequest ; \n + import com . facebook . imagepipeline . request . HasImageRequest ; \n - implements DataSourceWithImageRequest < T > { \n + implements HasImageRequest { \n rename from imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ DataSourceWithImageRequest . java \n rename to imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ HasImageRequest . java \n - import com . facebook . datasource . DataSource ; \n + import javax . annotation . Nullable ; \n - public interface DataSourceWithImageRequest < T > extends DataSource < T > { \n + public interface HasImageRequest { \n + @ Nullable \n
fbcore \ src \ main \ java \ com \ facebook \ common \ statfs \ StatFsHelper . java \n + public boolean isLowSpaceCondition ( ) { \n + return getAvailableStorageSpace ( StatFsHelper . StorageType . INTERNAL ) \n + < DEFAULT _ DISK _ YELLOW _ LEVEL _ IN _ BYTES ; \n + } \n + \n
presentation \ build . gradle \n - debugCompile developmentDependencies . leakCanary \n + / / Development \n + compile developmentDependencies . leakCanary \n
presentation \ src \ androidTest \ java \ com \ fernandocejas \ android10 \ sample \ test \ presenter \ UserDetailsPresenterTest . java \n - userDetailsPresenter . initialize ( FAKE _ USER _ ID ) ; \n + userDetailsPresenter . initialize ( ) ; \n presentation \ src \ main \ java \ com \ fernandocejas \ android10 \ sample \ presentation \ presenter \ UserDetailsPresenter . java \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - / * * id used to retrieve user details * / \n - private int userId ; \n - \n - public void initialize ( int userId ) { \n - this . userId = userId ; \n + public void initialize ( ) { \n presentation \ src \ main \ java \ com \ fernandocejas \ android10 \ sample \ presentation \ view \ fragment \ UserDetailsFragment . java \n - this . userDetailsPresenter . initialize ( this . userId ) ; \n + this . userDetailsPresenter . initialize ( ) ; \n - this . userDetailsPresenter . initialize ( this . userId ) ; \n + this . userDetailsPresenter . initialize ( ) ; \n
search \ src \ main \ java \ io \ plaidapp \ search \ dagger \ SearchModule . kt \n - import io . plaidapp . core . dagger . designernews . DesignerNewsDataModule \n - import io . plaidapp . core . dagger . dribbble . DribbbleDataModule \n - @ Module ( \n - includes = [ \n - DribbbleDataModule : : class , \n - DesignerNewsDataModule : : class \n - ] \n - ) \n + @ Module \n rename from core \ src \ main \ java \ io \ plaidapp \ core \ interfaces \ SearchDataSourceFactoriesRegistry . kt \n rename to search \ src \ main \ java \ io \ plaidapp \ search \ domain \ SearchDataSourceFactoriesRegistry . kt \n - package io . plaidapp . core . interfaces \n + package io . plaidapp . search . domain \n + import io . plaidapp . core . interfaces . SearchDataSourceFactory \n search \ src \ main \ java \ io \ plaidapp \ search \ ui \ SearchViewModel . kt \n - import io . plaidapp . core . interfaces . SearchDataSourceFactoriesRegistry \n + import io . plaidapp . search . domain . SearchDataSourceFactoriesRegistry \n search \ src \ main \ java \ io \ plaidapp \ search \ ui \ SearchViewModelFactory . kt \n - import io . plaidapp . core . interfaces . SearchDataSourceFactoriesRegistry \n + import io . plaidapp . search . domain . SearchDataSourceFactoriesRegistry \n search \ src \ test \ java \ io \ plaidapp \ search \ ui \ SearchViewModelTest . kt \n - import io . plaidapp . core . interfaces . SearchDataSourceFactoriesRegistry \n + import io . plaidapp . search . domain . SearchDataSourceFactoriesRegistry \n
designernews \ src \ main \ java \ io \ plaidapp \ designernews \ dagger \ DesignerNewsSearchComponent . kt \n - @ FeatureScope \n designernews \ src \ main \ java \ io \ plaidapp \ designernews \ domain \ search \ DesignerNewsSearchDataSourceFactoryProvider . kt \n - object DesignerNewsSearchDataSourceFactoryProvider : SearchDataSourceFactoryProvider { \n + class DesignerNewsSearchDataSourceFactoryProvider : SearchDataSourceFactoryProvider { \n dribbble \ src \ main \ java \ io \ plaidapp \ dribbble \ dagger \ DribbbleSearchComponent . kt \n - @ FeatureScope \n dribbble \ src \ main \ java \ io \ plaidapp \ dribbble \ domain \ search \ DribbbleSearchDataSourceFactoryProvider . kt \n - object DribbbleSearchDataSourceFactoryProvider : SearchDataSourceFactoryProvider { \n + class DribbbleSearchDataSourceFactoryProvider : SearchDataSourceFactoryProvider { \n search \ src \ main \ java \ io \ plaidapp \ search \ dagger \ SearchModule . kt \n + import io . plaidapp . core . dagger . scope . FeatureScope \n + import kotlin . reflect . full . createInstance \n + @ FeatureScope \n - Class . forName ( className ) . kotlin . objectInstance as SearchDataSourceFactoryProvider \n - provider . getFactory ( context . applicationContext ) \n + Class . forName ( className ) . kotlin . createInstance ( ) as SearchDataSourceFactoryProvider \n + provider . getFactory ( context ) \n
src \ main \ java \ io \ vertx \ core \ http \ impl \ WebSocketFrameFactoryImpl . java \n - @ Override \n - public WebSocketFrame closeFrame ( ByteBuf buf ) { \n - return new WebSocketFrameImpl ( FrameType . CLOSE , buf ) ; \n - } \n - \n src \ main \ java \ io \ vertx \ core \ spi \ WebSocketFrameFactory . java \n - \n - WebSocketFrame closeFrame ( ByteBuf buf ) ; \n
src \ main \ java \ io \ vertx \ core \ http \ WebSocketBase . java \n - void closeWithReason ( short statusCode , @ Nullable String reason ) ; \n + void close ( short statusCode , @ Nullable String reason ) ; \n src \ main \ java \ io \ vertx \ core \ http \ impl \ WebSocketImplBase . java \n - public void closeWithReason ( short statusCode , String reason ) { \n + public void close ( short statusCode , String reason ) { \n src \ test \ java \ io \ vertx \ test \ core \ WebsocketTest . java \n - import io . netty . buffer . ByteBuf ; \n - import io . netty . buffer . Unpooled ; \n - import org . junit . Ignore ; \n - vertx . setTimer ( 1000 , ( ar ) - > socket . closeWithReason ( STATUS _ CODE , REASON ) ) ; \n + vertx . setTimer ( 1000 , ( ar ) - > socket . close ( STATUS _ CODE , REASON ) ) ; \n - ws . closeWithReason ( STATUS _ CODE , REASON ) ; \n + ws . close ( STATUS _ CODE , REASON ) ; \n
buffer \ src \ main \ java \ io \ netty \ buffer \ ByteBufInputStream . java \n + import io . netty . util . internal . StringUtil ; \n - private final StringBuilder lineBuf = new StringBuilder ( ) ; \n + private StringBuilder lineBuf ; \n - lineBuf . setLength ( 0 ) ; \n + if ( lineBuf ! = null ) { \n + lineBuf . setLength ( 0 ) ; \n + } \n + \n + boolean anyChar = false ; \n - return lineBuf . length ( ) > 0 ? lineBuf . toString ( ) : null ; \n + return toStringIfAnyChar ( lineBuf , anyChar ) ; \n + anyChar = true ; \n + if ( lineBuf = = null ) { \n + lineBuf = new StringBuilder ( ) ; \n + } \n - return lineBuf . toString ( ) ; \n + return lineBuf ! = null & & lineBuf . length ( ) > 0 ? lineBuf . toString ( ) : StringUtil . EMPTY _ STRING ; \n + } \n + \n + private static String toStringIfAnyChar ( StringBuilder lineBuf , boolean anyChars ) { \n + if ( anyChars ) { \n + return lineBuf ! = null & & lineBuf . length ( ) > 0 ? lineBuf . toString ( ) : StringUtil . EMPTY _ STRING ; \n + } else { \n + return null ; \n + } \n buffer \ src \ test \ java \ io \ netty \ buffer \ ByteBufStreamTest . java \n - int charCount = 5 ; / / total chars in the string below without new line characters \n - byte [ ] abc = " a \ nb \ r \ nc \ nd \ ne " . getBytes ( utf8 ) ; \n + int charCount = 7 ; / / total chars in the string below without new line characters \n + byte [ ] abc = " \ na \ n \ nb \ r \ nc \ nd \ ne " . getBytes ( utf8 ) ; \n + assertEquals ( " " , in . readLine ( ) ) ; \n + assertEquals ( " " , in . readLine ( ) ) ; \n
microbench \ src \ main \ java \ io \ netty \ buffer \ AbstractReferenceCountedByteBufBenchmark . java \n - @ BenchmarkMode ( Mode . SampleTime ) \n + @ BenchmarkMode ( Mode . AverageTime ) \n - @ BenchmarkMode ( Mode . SampleTime ) \n + @ BenchmarkMode ( Mode . AverageTime ) \n - @ GroupThreads ( 6 ) \n + @ GroupThreads ( 4 ) \n
plugins \ repository - azure \ src \ test \ java \ org \ elasticsearch \ repositories \ azure \ AzureBlobContainerRetriesTests . java \n - 1L , \n - 5L , \n + 50L , \n + 100L , \n - public void testRetryUntilFail ( ) throws IOException { \n + public void testRetryUntilFail ( ) throws Exception { \n - / / We have to try to read the body since the netty async http client sends the request \n - / / lazily \n + } catch ( IOException e ) { \n + assertThat ( e . getMessage ( ) , equalTo ( " connection closed before all data received " ) ) ; \n - assertThat ( requestsReceived . get ( ) , equalTo ( maxRetries + 1 ) ) ; \n + / / The mock http server uses 1 thread to process the requests , it ' s possible that the \n + / / call to writeBlob throws before all the requests have been processed in the http server , \n + / / as the http server thread might get de - scheduled and the sdk keeps sending requests \n + / / as it fails to read the InputStream to write . \n + assertBusy ( ( ) - > assertThat ( requestsReceived . get ( ) , equalTo ( maxRetries + 1 ) ) ) ; \n
x - pack \ plugin \ searchable - snapshots \ src \ internalClusterTest \ java \ org \ elasticsearch \ xpack \ searchablesnapshots \ SearchableSnapshotsCanMatchOnCoordinatorIntegTests . java \n - indexDocumentsWithTimestampWithinDate ( indexOutsideSearchRange , between ( 0 , 1000 ) , " 2020 - 11 - 26T % 02d : % 02d : % 02d . % 09dZ " ) ; \n + indexDocumentsWithTimestampWithinDate ( indexOutsideSearchRange , between ( 1 , 1000 ) , " 2020 - 11 - 26T % 02d : % 02d : % 02d . % 09dZ " ) ; \n - @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66774 " ) \n - indexDocumentsWithTimestampWithinDate ( indexOutsideSearchRange , between ( 0 , 1000 ) , " 2020 - 11 - 26T % 02d : % 02d : % 02d . % 09dZ " ) ; \n + indexDocumentsWithTimestampWithinDate ( indexOutsideSearchRange , between ( 1 , 1000 ) , " 2020 - 11 - 26T % 02d : % 02d : % 02d . % 09dZ " ) ; \n
web - service \ helpers . py \n + PHYSICAL _ WEB _ USER _ AGENT = ' Mozilla / 5 . 0 ( compatible ; PhysicalWeb / 1 . 0 ; + http : / / physical - web . org ) ' \n - headers = { } \n + headers = { ' User - Agent ' : PHYSICAL _ WEB _ USER _ AGENT } \n
web - service \ helpers . py \n - except UnicodeDecodeError : \n + except ( ValueError , UnicodeDecodeError ) : \n
new file \n lib \ src \ main \ res \ drawable - nodpi \ widget _ preview . png \n Binary files / dev / null and b / lib / src / main / res / drawable - nodpi / widget _ preview . png differ \n
new file \n lib \ src \ main \ res \ drawable - hdpi \ map _ marker _ icon _ shuttle . png \n Binary files / dev / null and b / lib / src / main / res / drawable - hdpi / map _ marker _ icon _ shuttle . png differ \n new file \n lib \ src \ main \ res \ drawable - mdpi \ map _ marker _ icon _ shuttle . png \n Binary files / dev / null and b / lib / src / main / res / drawable - mdpi / map _ marker _ icon _ shuttle . png differ \n new file \n lib \ src \ main \ res \ drawable - xhdpi \ map _ marker _ icon _ shuttle . png \n Binary files / dev / null and b / lib / src / main / res / drawable - xhdpi / map _ marker _ icon _ shuttle . png differ \n new file \n lib \ src \ main \ res \ drawable - xxhdpi \ map _ marker _ icon _ shuttle . png \n Binary files / dev / null and b / lib / src / main / res / drawable - xxhdpi / map _ marker _ icon _ shuttle . png differ \n
dropwizard - bom \ pom . xml \n + < dependency > \n + < groupId > io . dropwizard < / groupId > \n + < artifactId > dropwizard - jdbi3 < / artifactId > \n + < version > $ { project . version } < / version > \n + < / dependency > \n
docs \ source \ manual \ configuration . rst \n - type : graphite \n - port : 8080 \n + port : 2003 \n + transport : tcp \n - port 8080 The port of the Graphite server to report to . \n + port 2003 The port of the Graphite server to report to . \n + transport tcp The type of transport to report to Graphite with ( " tcp " or " udp " ) . \n
deleted file \n . gitattributes \n - # Force LF line endings for Bash scripts . On Windows the rest of the source \n - # files will typically have CR + LF endings ( Git default on Windows ) , but Bash \n - # scripts need to have LF endings to work ( under Cygwin ) , thus override to force \n - # that . \n - gradlew text eol = lf \n - * . sh text eol = lf \n deleted file \n packages \ react - native - codegen \ android \ . gitattributes \n - # \n - # https : / / help . github . com / articles / dealing - with - line - endings / \n - # \n - # These are explicitly windows files and should use crlf \n - * . bat text eol = crlf \n - \n deleted file \n packages \ react - native - codegen \ android \ . gitignore \n - # Ignore Gradle project - specific cache directory \n - . gradle \n - \n - # Ignore Gradle build output directory \n - build \n scripts \ launchPackager . bat \n - : : Copyright ( c ) Facebook , Inc . and its affiliates . \n - : : \n - : : This source code is licensed under the MIT license found in the \n - : : LICENSE file in the root directory of this source tree . \n - \n - @ echo off \n - title Metro \n - call . packager . bat \n - cd . . / . . / . . / \n - node " % ~ dp0 . . \ cli . js " start \n - pause \n - exit \n + : : Copyright ( c ) Facebook , Inc . and its affiliates . \n + : : \n + : : This source code is licensed under the MIT license found in the \n + : : LICENSE file in the root directory of this source tree . \n + \n + @ echo off \n + title Metro \n + call . packager . bat \n + cd . . / . . / . . / \n + node " % ~ dp0 . . \ cli . js " start \n + pause \n + exit \n deleted file \n template \ _ gitattributes \n - * . pbxproj - text \n
. circleci \ config . yml \n - ANDROID _ HOME : " C : \ \ Android \ \ android - sdk " \n - ANDROID _ NDK : " C : \ \ Android \ \ android - sdk \ \ ndk \ \ 19 . 2 . 5345600 " \n - ANDROID _ BUILD _ VERSION : 28 \n - - ANDROID _ TOOLS _ VERSION : 29 . 0 . 2 \n + - ANDROID _ TOOLS _ VERSION : 29 . 0 . 3 \n - GRADLE _ OPTS : - Dorg . gradle . daemon = false \n - NDK _ VERSION : 19 . 2 . 5345600 \n scripts \ . tests . env \n - export ANDROID _ SDK _ BUILD _ TOOLS _ REVISION = 29 . 0 . 2 \n + export ANDROID _ SDK _ BUILD _ TOOLS _ REVISION = 29 . 0 . 3 \n template \ android \ build . gradle \n - buildToolsVersion = " 29 . 0 . 2 " \n + buildToolsVersion = " 29 . 0 . 3 " \n
realm \ realm - annotations - processor \ src \ main \ java \ io \ realm \ processor \ RealmProcessor . java \n - private int round ; \n + private int round = - 1 ; \n - RealmVersionChecker updateChecker = RealmVersionChecker . getInstance ( processingEnv ) ; \n - updateChecker . executeRealmVersionUpdate ( ) ; \n + RealmVersionChecker . getInstance ( processingEnv ) . executeRealmVersionUpdate ( ) ; \n
realm \ realm - library \ src \ syncIntegrationTest \ java \ io \ realm \ objectserver \ AuthTests . java \n + \n + / / verify that multiple users can be logged in at the same time \n + @ Test \n + public void multipleUsersCanBeLoggedInSimultaneously ( ) { \n + final String password = " password " ; \n + final SyncUser [ ] users = new SyncUser [ 3 ] ; \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , password , \n + true ) ; \n + users [ i ] = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + assertTrue ( users [ i ] . isValid ( ) ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + users [ i ] . logout ( ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + assertFalse ( users [ i ] . isValid ( ) ) ; \n + } \n + } \n + \n + / / verify that a single user can be logged out and back in . \n + @ Test \n + public void singleUserCanBeLoggedInAndOutRepeatedly ( ) { \n + final String username = UUID . randomUUID ( ) . toString ( ) ; \n + final String password = " password " ; \n + \n + / / register the user the first time \n + SyncCredentials credentials = SyncCredentials . usernamePassword ( username , password , true ) ; \n + \n + SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + assertTrue ( user . isValid ( ) ) ; \n + user . logout ( ) ; \n + assertFalse ( user . isValid ( ) ) ; \n + \n + / / on subsequent logins , the user is already registered . \n + credentials = credentials = SyncCredentials . usernamePassword ( username , password , false ) ; \n + for ( int i = 0 ; i < 3 ; i + + ) { \n + user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + assertTrue ( user . isValid ( ) ) ; \n + user . logout ( ) ; \n + assertFalse ( user . isValid ( ) ) ; \n + } \n + } \n
step - builder \ src \ main \ java \ com \ iluwatar \ stepbuilder \ App . java \n - Character warrior = \n + var warrior = \n - Character mage = \n + var mage = \n - Character thief = \n + var thief = \n step - builder \ src \ main \ java \ com \ iluwatar \ stepbuilder \ Character . java \n - StringBuilder sb = new StringBuilder ( ) ; \n + var sb = new StringBuilder ( ) ; \n
strategy \ src \ main \ java \ com \ iluwatar \ strategy \ App . java \n - DragonSlayer dragonSlayer = new DragonSlayer ( new MeleeStrategy ( ) ) ; \n + var dragonSlayer = new DragonSlayer ( new MeleeStrategy ( ) ) ; \n
src \ jvm \ clojure \ lang \ Compiler . java \n - if ( form instanceof IPersistentCollection & & Util . equals ( RT . first ( form ) , DO ) ) \n + if ( form instanceof ISeq & & Util . equals ( RT . first ( form ) , DO ) ) \n - if ( form instanceof IPersistentCollection & & Util . equals ( RT . first ( form ) , DO ) ) \n + if ( form instanceof ISeq & & Util . equals ( RT . first ( form ) , DO ) ) \n test \ clojure \ test _ clojure \ compilation . clj \n + \n + ( deftest CLJ - 1184 - do - in - non - list - test \n + ( testing " do in a vector throws an exception " \n + ( is ( thrown ? Compiler $ CompilerException \n + ( eval ' [ do 1 2 3 ] ) ) ) ) \n + ( testing " do in a set throws an exception " \n + ( is ( thrown ? Compiler $ CompilerException \n + ( eval ' # { do } ) ) ) ) \n + \n + ; ; compile uses a separate code path so we have to call it directly \n + ; ; to test it \n + ( letfn [ ( compile [ s ] \n + ( spit " test / clojure / bad _ def _ test . clj " ( str " ( ns clojure . bad - def - test ) \ n " s ) ) \n + ( try \n + ( binding [ * compile - path * " test " ] \n + ( clojure . core / compile ' clojure . bad - def - test ) ) \n + ( finally \n + ( doseq [ f ( . listFiles ( java . io . File . " test / clojure " ) ) \n + : when ( re - find # " bad _ def _ test " ( str f ) ) ] \n + ( . delete f ) ) ) ) ) ] \n + ( testing " do in a vector throws an exception in compilation " \n + ( is ( thrown ? Compiler $ CompilerException ( compile " [ do 1 2 3 ] " ) ) ) ) \n + ( testing " do in a set throws an exception in compilation " \n + ( is ( thrown ? Compiler $ CompilerException ( compile " # { do } " ) ) ) ) ) ) \n
test \ clojure \ test _ clojure \ test _ fixtures . clj \n + ( def side - effects ( atom 0 ) ) \n + ( defn side - effecting - fixture [ f ] \n + ( swap ! side - effects inc ) \n + ( f ) ) \n + \n - ( use - fixtures : each fixture - c fixture - d inc - n - fixture ) \n - ( use - fixtures : each fixture - c fixture - d inc - n - fixture ) \n + ( use - fixtures : each fixture - c fixture - d inc - n - fixture side - effecting - fixture ) \n + ( use - fixtures : each fixture - c fixture - d inc - n - fixture side - effecting - fixture ) \n - ( is ( = * n * 1 ) ) ) \n + ( is ( = * n * 1 ) ) ) \n + \n + ( deftest can - run - a - single - test - with - fixtures \n + ; ; We have to use a side - effecting fixture to test that the fixtures are \n + ; ; running , in order to distinguish fixtures run because of our call to \n + ; ; test - vars below from the same fixtures running prior to this test \n + ( let [ side - effects - so - far @ side - effects \n + \n + reported ( atom [ ] ) ] \n + ( binding [ report ( fn [ m ] ( swap ! reported conj ( : type m ) ) ) ] \n + ( test - vars [ # ' can - use - each - fixtures ] ) ) \n + ( is ( = [ : begin - test - var : pass : pass : end - test - var ] @ reported ) ) \n + ( is ( = ( inc side - effects - so - far ) @ side - effects ) ) ) ) \n
mobile \ src \ main \ res \ values \ strings . xml \n - < string name = " title _ feed " translation _ description = " The title for the feed screen where user can all the updates from Google I / O team . " > Feed < / string > \n + < string name = " title _ feed " translation _ description = " The title for the feed screen where user can all the updates from Google I / O team . " > Home < / string > \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ feed \ FeedViewModel . kt \n - if ( userInfo . isRegistered ( ) ) string . feed _ upcoming _ events \n - else string . feed _ saved _ events \n + if ( sessions as ? Result . Success ! = null & & sessions . data . userSessionCount = = 0 ) { \n + string . feed _ no _ saved _ events \n + } else if ( userInfo . isRegistered ( ) ) { \n + string . feed _ upcoming _ events \n + } else { \n + string . feed _ saved _ events \n + } \n - true - > string . feed _ view _ your _ schedule \n + true - > { \n + if ( sessions as ? Result . Success ! = null & & sessions . data . userSessionCount = = 0 ) \n + string . feed _ view _ all _ events \n + else \n + string . feed _ view _ your _ schedule \n + } \n mobile \ src \ main \ res \ values \ strings . xml \n + < string name = " feed _ no _ saved _ events " translation _ description = " The title of the sessions section in feed when user is signed in and they don ' t have any saved event " > No saved events < / string > \n
rxjava - core \ src \ main \ java \ rx \ Observable . java \n - public final Observable < T > repeatWhen ( Func1 < ? super Observable < ? extends Notification < ? > > , ? extends Observable < ? extends Notification < ? > > > notificationHandler , Scheduler scheduler ) { \n + public final Observable < T > repeatWhen ( Func1 < ? super Observable < ? extends Notification < ? > > , ? extends Observable < ? > > notificationHandler , Scheduler scheduler ) { \n - public final Observable < T > repeatWhen ( Func1 < ? super Observable < ? extends Notification < ? > > , ? extends Observable < ? extends Notification < ? > > > notificationHandler ) { \n + public final Observable < T > repeatWhen ( Func1 < ? super Observable < ? extends Notification < ? > > , ? extends Observable < ? > > notificationHandler ) { \n
build . gradle \n + javadoc { \n + exclude " * * / rx / internal / * * " \n + } \n + \n deleted file \n src \ main \ java \ rx \ plugins \ RxJavaErrorHandlerDefault . java \n - / * * \n - * Copyright 2014 Netflix , Inc . \n - * \n - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - * you may not use this file except in compliance with the License . \n - * You may obtain a copy of the License at \n - * \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - * \n - * Unless required by applicable law or agreed to in writing , software \n - * distributed under the License is distributed on an " AS IS " BASIS , \n - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - * See the License for the specific language governing permissions and \n - * limitations under the License . \n - * / \n - package rx . plugins ; \n - \n - / * * \n - * Default implementation of { @ link RxJavaErrorHandler } that does nothing . \n - * \n - * @ ExcludeFromJavadoc \n - * / \n - public class RxJavaErrorHandlerDefault extends RxJavaErrorHandler { \n - \n - private static RxJavaErrorHandlerDefault INSTANCE = new RxJavaErrorHandlerDefault ( ) ; \n - \n - public static RxJavaErrorHandler getInstance ( ) { \n - return INSTANCE ; \n - } \n - \n - } \n src \ main \ java \ rx \ plugins \ RxJavaPlugins . java \n + static final RxJavaErrorHandler DEFAULT _ ERROR _ HANDLER = new RxJavaErrorHandler ( ) { \n + } ; \n + \n - errorHandler . compareAndSet ( null , RxJavaErrorHandlerDefault . getInstance ( ) ) ; \n + errorHandler . compareAndSet ( null , DEFAULT _ ERROR _ HANDLER ) ; \n src \ test \ java \ rx \ plugins \ RxJavaPluginsTest . java \n + import static org . junit . Assert . assertSame ; \n - assertTrue ( impl instanceof RxJavaErrorHandlerDefault ) ; \n + assertSame ( RxJavaPlugins . DEFAULT _ ERROR _ HANDLER , impl ) ; \n
new file \n compiler \ util \ src \ org \ jetbrains \ kotlin \ utils \ threadLocal . kt \n + / * \n + * Copyright 2010 - 2020 JetBrains s . r . o . and Kotlin Programming Language contributors . \n + * Use of this source code is governed by the Apache 2 . 0 license that can be found in the license / LICENSE . txt file . \n + * / \n + \n + package org . jetbrains . kotlin . utils \n + \n + import java . util . concurrent . ConcurrentHashMap \n + import kotlin . properties . ReadWriteProperty \n + import kotlin . reflect . KProperty \n + \n + fun < T > threadLocal ( initializer : ( ) - > T ) : ReadWriteProperty < Any ? , T > = ThreadLocalDelegate ( initializer ) \n + \n + private class ThreadLocalDelegate < T > ( private val initializer : ( ) - > T ) : ReadWriteProperty < Any ? , T > { \n + private val map = ConcurrentHashMap < Thread , T > ( ) \n + \n + override operator fun getValue ( thisRef : Any ? , property : KProperty < * > ) : T { \n + return map . getOrPut ( Thread . currentThread ( ) ) { \n + initializer ( ) \n + } \n + } \n + \n + override operator fun setValue ( thisRef : Any ? , property : KProperty < * > , value : T ) { \n + map [ Thread . currentThread ( ) ] = value \n + } \n + } \n
compiler \ fir \ entrypoint \ src \ org \ jetbrains \ kotlin \ fir \ analysis \ FirAnalyzerFacade . kt \n + import org . jetbrains . kotlin . backend . jvm . serialization . JvmIdSignatureDescriptor \n - val signaturer = IdSignatureDescriptor ( JvmManglerDesc ( ) ) \n + val signaturer = JvmIdSignatureDescriptor ( JvmManglerDesc ( ) ) \n compiler \ ir \ serialization . common \ src \ org \ jetbrains \ kotlin \ backend \ common \ serialization \ signature \ IdSignatureDescriptor . kt \n + private val composer by lazy { createSignatureBuilder ( ) } \n + \n - createSignatureBuilder ( ) . buildSignature ( descriptor ) \n + composer . buildSignature ( descriptor ) \n - createSignatureBuilder ( ) . buildSignature ( descriptor ) \n + composer . buildSignature ( descriptor ) \n compiler \ ir \ serialization . jvm \ src \ org \ jetbrains \ kotlin \ backend \ jvm \ serialization \ JvmIdSignatureDescriptor . kt \n + import org . jetbrains . kotlin . ir . util . IdSignature \n + \n + / * In multi - threaded environment , we cannot afford to cache a signature builder , as in IdSignatureBuilder . * / \n + \n + override fun composeSignature ( descriptor : DeclarationDescriptor ) : IdSignature ? { \n + return if ( mangler . run { descriptor . isExported ( ) } ) { \n + createSignatureBuilder ( ) . buildSignature ( descriptor ) \n + } else null \n + } \n + \n + override fun composeEnumEntrySignature ( descriptor : ClassDescriptor ) : IdSignature ? { \n + return if ( mangler . run { descriptor . isExportEnumEntry ( ) } ) { \n + createSignatureBuilder ( ) . buildSignature ( descriptor ) \n + } else null \n + } \n
src \ jvm \ clojure \ lang \ Compiler . java \n + Label callLabel = gen . mark ( ) ; \n + gen . visitLineNumber ( line , callLabel ) ; \n
build . xml \n - debug = " true " source = " 1 . 6 " target = " 1 . 6 " / > \n + debug = " true " source = " 1 . 8 " target = " 1 . 8 " / > \n - debug = " true " source = " 1 . 6 " target = " 1 . 6 " includeantruntime = " no " / > \n + debug = " true " source = " 1 . 8 " target = " 1 . 8 " includeantruntime = " no " / > \n pom . xml \n - < source > 1 . 6 < / source > \n - < target > 1 . 6 < / target > \n + < source > 1 . 8 < / source > \n + < target > 1 . 8 < / target > \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ BeaconConfigHelper . java \n - import android . os . Handler ; \n - private Handler mBackgroundHandler ; \n - mBackgroundHandler = new Handler ( ) ; \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ NearbyBeaconsFragment . java \n - TextView tv = ( TextView ) rootView . findViewById ( R . id . textView _ nearbyBeaconsScanning ) ; \n + TextView tv = ( TextView ) rootView . findViewById ( android . R . id . empty ) ; \n android \ PhysicalWeb \ app \ src \ main \ res \ layout \ fragment _ nearby _ beacons . xml \n - android : id = " @ + id / textView _ nearbyBeaconsScanning " \n + android : id = " @ id / android : empty " \n
android \ pom . xml \n - < version > 4 . 13 . 1 < / version > \n + < version > 4 . 13 . 2 < / version > \n pom . xml \n - < version > 4 . 13 . 1 < / version > \n + < version > 4 . 13 . 2 < / version > \n
android \ pom . xml \n - < version > 2 . 4 . 0 < / version > \n + < version > 2 . 5 . 1 < / version > \n pom . xml \n - < version > 2 . 4 . 0 < / version > \n + < version > 2 . 5 . 1 < / version > \n
src \ create _ embedded _ tools . py \n + # - - experimental _ sibling _ repository _ layout = false \n + # - - experimental _ sibling _ repository _ layout = true \n + ( ' * openjdk _ * / file / * . tar . gz ' , lambda x : ' jdk . tar . gz ' ) , \n + ( ' * openjdk _ * / file / * . zip ' , lambda x : ' jdk . zip ' ) , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ java \ JavaOptions . java \n - defaultValue = " false " , \n + defaultValue = " true " , \n
partial - response \ etc \ partial - response . urm . puml \n + FieldJsonMapper ( ) \n + - getString ( video : Video , declaredField : Field ) : String \n + toJson ( video : Video , fields : String [ ] ) : String \n + Video ( id : Integer , title : String , length : Integer , description : String , director : String , language : String ) \n + toString ( ) : String \n + class VideoClientApp { \n + - LOGGER : Logger { static } \n + + VideoClientApp ( ) \n + + main ( args : String [ ] ) { static } \n + } \n - fieldJsonMapper : FieldJsonMapper \n - videos : Map < Integer , Video > \n
new file \n partial - response \ README . md \n + - - - \n + layout : pattern \n + title : Partial Response \n + folder : partial - response \n + permalink : / patterns / partial - response / \n + categories : Architectural \n + tags : \n + - Java \n + - KISS \n + - YAGNI \n + - Difficulty - Beginner \n + - - - \n + \n + # # Intent \n + Send partial response from server to client on need basis . Client will specify the the fields \n + that it need to server , instead of serving all details for resource . \n + \n + ! [ alt text ] ( . / etc / partial - response . urm . png " partial - response " ) \n + \n + # # Applicability \n + Use the Partial Response pattern when \n + \n + * Client need only subset of data from resource . \n + * To avoid too much data transfer over wire \n + \n + # # Credits \n + \n + * [ Common Design Patterns ] ( https : / / cloud . google . com / apis / design / design _ patterns ) \n + * [ Partial Response in RESTful API Design ] ( http : / / yaoganglian . com / 2013 / 07 / 01 / partial - response / ) \n new file \n partial - response \ etc \ partial - response . urm . png \n Binary files / dev / null and b / partial - response / etc / partial - response . urm . png differ \n
partial - response \ src \ main \ java \ com \ iluwatar \ partialresponse \ Video . java \n - private Integer id ; \n - private String title ; \n - private Integer length ; \n - private String description ; \n - private String director ; \n - private String language ; \n + private final Integer id ; \n + private final String title ; \n + private final Integer length ; \n + private final String description ; \n + private final String director ; \n + private final String language ; \n
rename from partial - response \ src \ main \ java \ com \ iluwatar \ partialresponse \ VideoClientApp . java \n rename to partial - response \ src \ main \ java \ com \ iluwatar \ partialresponse \ App . java \n - * Here { @ link VideoClientApp } is playing as client for { @ link VideoResource } server . \n + * Here { @ link App } is playing as client for { @ link VideoResource } server . \n - public class VideoClientApp { \n - private static final Logger LOGGER = LoggerFactory . getLogger ( VideoClientApp . class ) ; \n + public class App { \n + private static final Logger LOGGER = LoggerFactory . getLogger ( App . class ) ; \n
x - pack \ plugin \ ml \ src \ main \ java \ org \ elasticsearch \ xpack \ ml \ MachineLearning . java \n + import org . elasticsearch . xpack . core . ml . MlStatsIndex ; \n + import org . elasticsearch . xpack . core . ml . action . PutTrainedModelAliasAction ; \n - import org . elasticsearch . xpack . core . ml . action . PutTrainedModelAliasAction ; \n - import org . elasticsearch . xpack . core . ml . job . persistence . AnomalyDetectorsIndexFields ; \n + import org . elasticsearch . xpack . ml . action . TransportPutTrainedModelAliasAction ; \n - import org . elasticsearch . xpack . ml . action . TransportPutTrainedModelAliasAction ; \n + import static org . elasticsearch . xpack . core . ml . job . persistence . AnomalyDetectorsIndexFields . RESULTS _ INDEX _ PREFIX ; \n + import static org . elasticsearch . xpack . core . ml . job . persistence . AnomalyDetectorsIndexFields . STATE _ INDEX _ PREFIX ; \n - AnomalyDetectorsIndexFields . STATE _ INDEX _ PREFIX , \n + STATE _ INDEX _ PREFIX , \n + @ Override \n + public Collection < String > getAssociatedIndexPatterns ( ) { \n + return List . of ( \n + RESULTS _ INDEX _ PREFIX + " * " , \n + STATE _ INDEX _ PREFIX + " * " , \n + MlStatsIndex . indexPattern ( ) , \n + " . ml - notifications * " , \n + " . ml - annotations * " \n + ) ; \n + } \n + \n
server \ src \ main \ java \ org \ elasticsearch \ cluster \ metadata \ IndexMetadata . java \n - builder . system ( part . isSystem ) ; \n + builder . system ( isSystem ) ; \n
presto - tests \ src \ main \ java \ com \ facebook \ presto \ tests \ QueryAssertions . java \n - log . info ( " FINISHED in presto : % s " , nanosSince ( start ) ) ; \n + Duration queryTime = nanosSince ( start ) ; \n + if ( queryTime . compareTo ( Duration . succinctDuration ( 1 , SECONDS ) ) > 0 ) { \n + log . info ( " FINISHED in presto : % s " , queryTime ) ; \n + } \n - log . info ( " FINISHED in presto : % s , h2 : % s , total : % s " , actualTime , nanosSince ( expectedStart ) , nanosSince ( start ) ) ; \n + Duration totalTime = nanosSince ( start ) ; \n + if ( totalTime . compareTo ( Duration . succinctDuration ( 1 , SECONDS ) ) > 0 ) { \n + log . info ( " FINISHED in presto : % s , h2 : % s , total : % s " , actualTime , nanosSince ( expectedStart ) , totalTime ) ; \n + } \n
presto - tests \ src \ main \ java \ com \ facebook \ presto \ tests \ DistributedQueryRunner . java \n - log . info ( " Created TestingPrestoServer in % s " , nanosSince ( start ) . convertToMostSuccinctTimeUnit ( ) ) ; \n + log . info ( " Created TestingPrestoServer in % s : % s " , nanosSince ( start ) . convertToMostSuccinctTimeUnit ( ) , server . getBaseUrl ( ) ) ; \n
dubbo - remoting \ dubbo - remoting - netty \ src \ main \ java \ org \ apache \ dubbo \ remoting \ transport \ netty \ NettyHandler . java \n + import org . apache . dubbo . common . logger . Logger ; \n + import org . apache . dubbo . common . logger . LoggerFactory ; \n + private static final Logger logger = LoggerFactory . getLogger ( NettyHandler . class ) ; \n + \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection between " + channel . getRemoteAddress ( ) + " and " + channel . getLocalAddress ( ) + " is established " ) ; \n + } \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection between " + channel . getRemoteAddress ( ) + " and " + channel . getLocalAddress ( ) + " is disconnected " ) ; \n + } \n dubbo - remoting \ dubbo - remoting - netty4 \ src \ main \ java \ org \ apache \ dubbo \ remoting \ transport \ netty4 \ NettyClientHandler . java \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection of " + channel . getLocalAddress ( ) + " - > " + channel . getRemoteAddress ( ) + " is established . " ) ; \n + } \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection of " + channel . getLocalAddress ( ) + " - > " + channel . getRemoteAddress ( ) + " is disconnected . " ) ; \n + } \n - / / send heartbeat when read idle . \n + / / send heartbeat when read idle . \n - } else { \n + } else { \n dubbo - remoting \ dubbo - remoting - netty4 \ src \ main \ java \ org \ apache \ dubbo \ remoting \ transport \ netty4 \ NettyServerHandler . java \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection of " + channel . getRemoteAddress ( ) + " - > " + channel . getLocalAddress ( ) + " is established . " ) ; \n + } \n + \n + if ( logger . isInfoEnabled ( ) ) { \n + logger . info ( " The connection of " + channel . getRemoteAddress ( ) + " - > " + channel . getLocalAddress ( ) + " is disconnected . " ) ; \n + } \n
dubbo - rpc \ dubbo - rpc - dubbo \ src \ main \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ ReferenceCountExchangeClient . java \n - . addParameter ( LAZY _ CONNECT _ INITIAL _ STATE _ KEY , Boolean . FALSE ) \n + . addParameter ( LAZY _ CONNECT _ INITIAL _ STATE _ KEY , Boolean . TRUE ) \n
telephony \ java \ android \ telephony \ TelephonyManager . java \n + * If you want continuous updates of service state info , register a { @ link PhoneStateListener } \n + * via { @ link # listen } with the { @ link PhoneStateListener # LISTEN _ SERVICE _ STATE } event . \n + * \n
telecomm \ java \ android \ telecom \ Call . java \n - * RTT transmits text in real - time , this method should be called once for each character \n - * the user enters into the device . \n + * RTT transmits text in real - time , this method should be called once for each user action . \n + * For example , when the user enters text as discrete characters using the keyboard , this \n + * method should be called once for each character . However , if the user enters text by \n + * pasting or autocomplete , the entire contents of the pasted or autocompleted text should \n + * be sent in one call to this method . \n
README . md \n + * Top news headline \n - APIs provided by Yahoo Finance , Forecast . io , and XKCD \n + APIs provided by Yahoo Finance , Forecast . io , the BBC , and XKCD \n
app \ src \ main \ AndroidManifest . xml \n - android : label = " @ string / app _ name " > \n + android : label = " @ string / app _ name " \n + android : windowSoftInputMode = " stateHidden " \n + android : launchMode = " singleInstance " > \n app \ src \ main \ java \ com \ morristaedt \ mirror \ MirrorActivity . java \n + \n + @ Override \n + public void onBackPressed ( ) { \n + super . onBackPressed ( ) ; \n + Intent intent = new Intent ( this , SetUpActivity . class ) ; \n + startActivity ( intent ) ; \n + } \n app \ src \ main \ java \ com \ morristaedt \ mirror \ SetUpActivity . java \n + import android . content . Context ; \n + import android . view . inputmethod . InputMethodManager ; \n + \n + InputMethodManager imm = ( InputMethodManager ) getSystemService ( Context . INPUT _ METHOD _ SERVICE ) ; \n + imm . hideSoftInputFromWindow ( mStockTickerSymbol . getWindowToken ( ) , 0 ) ; \n + \n
. github \ workflows \ main . yml \n - name : Espresso Checks \n - api - level : 23 \n + api - level : 16 \n
. github \ workflows \ main . yml \n + \n + snapshot - deployment : \n + if : " github . event _ name = = ' push ' " \n + needs : [ checks ] \n + runs - on : ubuntu - 20 . 04 \n + steps : \n + \n + - name : Project Checkout \n + uses : actions / checkout @ v2 . 3 . 4 \n + \n + - name : Setup JDK 1 . 8 \n + uses : actions / setup - java @ v1 . 4 . 3 \n + with : \n + java - version : 1 . 8 \n + \n + - name : Deploy snapshot \n + run : | \n + mkdir - p ~ / . gradle / \n + echo SONATYPE _ NEXUS _ USERNAME = $ SONATYPE _ NEXUS _ USERNAME > > ~ / . gradle / gradle . properties \n + echo SONATYPE _ NEXUS _ PASSWORD = $ SONATYPE _ NEXUS _ PASSWORD > > ~ / . gradle / gradle . properties \n + . / gradlew clean uploadArchives \n + env : \n + SONATYPE _ NEXUS _ USERNAME : $ { { secrets . SONATYPE _ NEXUS _ USERNAME } } \n + SONATYPE _ NEXUS _ PASSWORD : $ { { secrets . SONATYPE _ NEXUS _ PASSWORD } } \n + \n + - name : Cleanup secrets \n + if : always ( ) \n + run : rm - rf ~ / . gradle / gradle . properties \n
x - pack \ plugin \ src \ test \ resources \ rest - api - spec \ test \ transform \ transforms _ cat _ apis . yml \n - - - \n + - skip : \n + version : " all " \n + reason : " Awaits fix : https : / / github . com / elastic / elasticsearch / issues / 68350 " \n - do : \n
test \ framework \ src \ main \ java \ org \ elasticsearch \ test \ ESSingleNodeTestCase . java \n + import org . elasticsearch . test . rest . ESRestTestCase ; \n + ensureNoInitializingShards ( ) ; \n - \n + \n + / * * \n + * waits until all shard initialization is completed . \n + * \n + * inspired by { @ link ESRestTestCase } \n + * \n + * @ throws IOException \n + * / \n + protected void ensureNoInitializingShards ( ) throws IOException { \n + ClusterHealthResponse actionGet = client ( ) . admin ( ) \n + . cluster ( ) \n + . health ( Requests . clusterHealthRequest ( " _ all " ) . waitForNoInitializingShards ( true ) ) \n + . actionGet ( ) ; \n + \n + assertFalse ( " timed out waiting for shards to initialize " , actionGet . isTimedOut ( ) ) ; \n + } \n + \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search \ 110 _ field _ collapsing . yml \n - - - \n + - skip : \n + version : " all " \n + reason : " Awaits fix : https : / / github . com / elastic / elasticsearch / issues / 52416 " \n + \n - do : \n
x - pack \ plugin \ searchable - snapshots \ src \ main \ java \ org \ elasticsearch \ xpack \ searchablesnapshots \ SearchableSnapshots . java \n - 32 , \n + 28 , \n - 32 , \n + 16 , \n
circleimageview \ build . gradle \n - apply from : ' https : / / raw . github . com / hdodenhof / gradle - mvn - push / master / gradle - mvn - push . gradle ' \n + apply from : ' https : / / raw . github . com / hdodenhof / gradle - mvn - push / master / gradle - mvn - push . gradle ' \n circleimageview \ gradle . properties \n - POM _ PACKAGING = aar \n + POM _ PACKAGING = aar \n circleimageview \ src \ main \ AndroidManifest . xml \n - < / manifest > \n + < / manifest > \n sample \ build . gradle \n - } \n + } \n sample \ proguard - rules . txt \n - # } \n + # } \n sample \ src \ main \ res \ values \ colors . xml \n - < / resources > \n + < / resources > \n settings . gradle \n - include ' : circleimageview ' , ' : sample ' \n + include ' : circleimageview ' , ' : sample ' \n
circleimageview \ src \ main \ java \ de \ hdodenhof \ circleimageview \ CircleImageView . java \n + mBitmapPaint . setDither ( true ) ; \n + mBitmapPaint . setFilterBitmap ( true ) ; \n
library \ src \ main \ java \ com \ afollestad \ materialdialogs \ MaterialDialog . java \n - if ( mBuilder . selectedIndices ! = null ) { \n - @ SuppressLint ( " CutPasteId " ) \n - CheckBox checkbox = ( CheckBox ) view . findViewById ( R . id . control ) ; \n - checkbox . setChecked ( selectedIndicesList . contains ( index ) ) ; \n - } \n + @ SuppressLint ( " CutPasteId " ) \n + CheckBox checkbox = ( CheckBox ) view . findViewById ( R . id . control ) ; \n + checkbox . setChecked ( selectedIndicesList . contains ( index ) ) ; \n
library \ src \ main \ java \ com \ afollestad \ materialdialogs \ MaterialDialog . java \n - import android . support . annotation . IntDef ; \n - import android . support . v7 . widget . GridLayoutManager ; \n - import android . support . v7 . widget . LinearLayoutManager ; \n - @ IntDef ( { START , CENTER , END } ) \n - public @ interface GravityInt { \n - } \n - \n - @ SuppressWarnings ( " WeakerAccess " ) \n - public static final int START = 0 ; \n - @ SuppressWarnings ( " WeakerAccess " ) \n - public static final int CENTER = 1 ; \n - @ SuppressWarnings ( " WeakerAccess " ) \n - public static final int END = 2 ; \n - \n - private static int gravityIntToGravity ( @ GravityInt int gravity ) { \n + private static int gravityIntToGravity ( GravityEnum gravity ) { \n - private static int gravityToAlignment ( @ GravityInt int gravity ) { \n + private static int gravityToAlignment ( GravityEnum gravity ) { \n - protected \n - @ GravityInt \n - int titleGravity = Gravity . START ; \n - protected \n - @ GravityInt \n - int contentGravity = Gravity . START ; \n + protected GravityEnum titleGravity = GravityEnum . START ; \n + protected GravityEnum contentGravity = GravityEnum . START ; \n - public Builder titleGravity ( @ GravityInt int gravity ) { \n + public Builder titleGravity ( GravityEnum gravity ) { \n - public Builder contentGravity ( @ GravityInt int gravity ) { \n + public Builder contentGravity ( GravityEnum gravity ) { \n + public static enum GravityEnum { \n + START , CENTER , END \n + } \n + \n sample \ src \ main \ java \ com \ afollestad \ materialdialogssample \ MainActivity . java \n - . titleGravity ( MaterialDialog . CENTER ) \n + . titleGravity ( MaterialDialog . GravityEnum . CENTER ) \n
media \ java \ android \ media \ tv \ tuner \ Tuner . java \n + private Boolean mIsSharedFrontend = false ; \n - mFrontendHandle = tuner . mFrontendHandle ; \n - mFrontend = nativeOpenFrontendByHandle ( mFrontendHandle ) ; \n + synchronized ( mIsSharedFrontend ) { \n + mFrontendHandle = tuner . mFrontendHandle ; \n + mFrontend = tuner . mFrontend ; \n + mIsSharedFrontend = true ; \n + } \n - int res = nativeCloseFrontend ( mFrontendHandle ) ; \n - if ( res ! = Tuner . RESULT _ SUCCESS ) { \n - TunerUtils . throwExceptionForResult ( res , " failed to close frontend " ) ; \n + synchronized ( mIsSharedFrontend ) { \n + if ( ! mIsSharedFrontend ) { \n + int res = nativeCloseFrontend ( mFrontendHandle ) ; \n + if ( res ! = Tuner . RESULT _ SUCCESS ) { \n + TunerUtils . throwExceptionForResult ( res , " failed to close frontend " ) ; \n + } \n + } \n + mIsSharedFrontend = false ; \n - FrameworkStatsLog . TV _ TUNER _ STATE _ CHANGED _ _ STATE _ _ UNKNOWN ) ; \n + FrameworkStatsLog . TV _ TUNER _ STATE _ CHANGED _ _ STATE _ _ UNKNOWN ) ; \n
media \ java \ android \ media \ tv \ tuner \ Tuner . java \n - if ( mScanCallback ! = null | | mScanCallbackExecutor ! = null ) { \n + / * * \n + * Scan can be called again for blink scan if scanCallback and executor are same as before . \n + * / \n + if ( ( ( mScanCallback ! = null ) & & ( mScanCallback ! = scanCallback ) ) \n + | | ( ( mScanCallbackExecutor ! = null ) & & ( mScanCallbackExecutor ! = executor ) ) ) { \n - " Scan already in progress . stopScan must be called before a new scan can be " \n - + " started . " ) ; \n + " Different Scan session already in progress . stopScan must be called " \n + + " before a new scan session can be " + " started . " ) ; \n
ios \ today \ TodayViewController . m \n - NSTimeInterval delay = 5 ; \n + NSTimeInterval delay = 1 ; \n + _ firstUpdate = YES ; \n + _ requestedOnce = NO ; \n + [ [ PWBeaconManager sharedManager ] resetBeacons ] ; \n
ios \ today \ TodayViewController . m \n + [ label setTag : 150 ] ; \n - NSString * noBeaconText = nil ; \n - if ( _ requestedOnce ) { \n - noBeaconText = [ NSString stringWithFormat : @ " No beacon nearby " ] ; \n - } else { \n - noBeaconText = [ NSString stringWithFormat : @ " Scanning . . . " ] ; \n - } \n - [ label setText : noBeaconText ] ; \n + UILabel * label = ( UILabel * ) [ cell viewWithTag : 150 ] ; \n + NSString * noBeaconText = nil ; \n + if ( _ requestedOnce ) { \n + noBeaconText = [ NSString stringWithFormat : @ " No beacon nearby " ] ; \n + } else { \n + noBeaconText = [ NSString stringWithFormat : @ " Scanning . . . " ] ; \n + } \n + [ label setText : noBeaconText ] ; \n
server \ src \ main \ java \ org \ elasticsearch \ cluster \ metadata \ MetadataCreateIndexService . java \n - private IndexMetadata buildAndValidateTemporaryIndexMetadata ( final ClusterState currentState , \n - final Settings aggregatedIndexSettings , \n + private IndexMetadata buildAndValidateTemporaryIndexMetadata ( final Settings aggregatedIndexSettings , \n - IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( currentState , aggregatedIndexSettings , request , routingNumShards ) ; \n + IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( aggregatedIndexSettings , request , routingNumShards ) ; \n - IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( currentState , aggregatedIndexSettings , request , routingNumShards ) ; \n + IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( aggregatedIndexSettings , request , routingNumShards ) ; \n - IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( currentState , aggregatedIndexSettings , request , routingNumShards ) ; \n + IndexMetadata tmpImd = buildAndValidateTemporaryIndexMetadata ( aggregatedIndexSettings , request , routingNumShards ) ; \n
server \ src \ main \ java \ org \ elasticsearch \ search \ aggregations \ metrics \ TopHitsAggregator . java \n - / / replaced with the next leaf readers and then post collection pushes docids of the previous segement , which \n + / / replaced with the next leaf readers and then post collection pushes docids of the previous segment , which \n
Jenkinsfile \n - timeout ( 35 ) { \n + timeout ( 40 ) { \n - sh ' . / mvnw clean package deploy - pl dubbo - dependencies - bom & & . / mvnw clean package deploy - DskipTests = true ' \n + sh ' . / mvnw clean source : jar javadoc : jar package deploy - pl dubbo - dependencies - bom & & . / mvnw clean package deploy - DskipTests = true ' \n
Jenkinsfile \n - sh ' . / mvnw clean source : jar javadoc : jar package deploy - pl dubbo - dependencies - bom & & . / mvnw clean package deploy - DskipTests = true ' \n + sh ' . / mvnw clean package deploy - pl dubbo - dependencies - bom & & . / mvnw clean source : jar javadoc : jar package deploy - DskipTests = true ' \n
pom . xml \n - < version > 1 . 10 . 2 - master - SNAPSHOT < / version > \n + < version > 1 . 10 . 2 < / version > \n - < tag > HEAD < / tag > \n + < tag > clojure - 1 . 10 . 2 < / tag > \n
pom . xml \n - < version > 1 . 10 . 3 - rc1 < / version > \n + < version > 1 . 11 . 0 - master - SNAPSHOT < / version > \n - < tag > clojure - 1 . 10 . 3 - rc1 < / tag > \n + < tag > HEAD < / tag > \n
. gitignore \n - license - list . txt \n + license - list \n licenseCheck . sh \n - TARGET _ FILE = " . / license - list . txt " \n + TARGET _ FILE = " . / license - list " \n - sed - i - e ' s / ' " $ search " ' / ' " $ replace " ' / g ' $ TARGET _ FILE \n + sed - i . bak ' s / ' " $ search " ' / ' " $ replace " ' / g ' $ TARGET _ FILE \n + if [ - f $ TARGET _ FILE . bak ] ; then \n + rm - rf $ TARGET _ FILE . bak \n + fi \n + \n + " JSR . * 107 " \n + " Common Public License Version 1 . 0 " \n + " org . scijava : native - lib - loader " \n + " org . codehaus . woodstox : stax2 - api " \n + " wsdl4j : wsdl4j " \n + " net . jcip : jcip - annotations " \n - if test - z " $ license _ need _ check " \n - then \n + # remove empty lines \n + echo $ license _ need _ check | sed ' / ^ [ [ : space : ] ] * $ / d ' > license - need - check \n + \n + if [ ! - s license - need - check ] ; then \n - echo " $ license _ need _ check " \n - fi \n + cat license - need - check \n + fi \n
licenseCheck . sh \n - echo " Running command : . / mvnw clean package - DskipTests = true - PlicenseCheck $ APPEND _ ARG " \n + echo " Running command : mvn clean package - DskipTests = true - PlicenseCheck $ APPEND _ ARG " \n - . / mvnw clean package - DskipTests = true - PlicenseCheck $ APPEND _ ARG \n + mvn clean package - DskipTests = true - PlicenseCheck $ APPEND _ ARG \n - license _ need _ check = ` cat $ TARGET _ FILE | grep - v " generated - sources / license / THIRD - PARTY . txt " | grep - v " third - party dependencies " | grep - v $ LINE _ FLAG ` \n + license _ need _ check = ` cat $ TARGET _ FILE | grep - v " generated - sources / license / THIRD - PARTY . txt " | grep - v " third - party dependencies " | grep - v " The project has no dependencies . " | grep - v $ LINE _ FLAG ` \n + \n + rm - f license - list license - need - check \n
spring - core \ src \ test \ java \ org \ springframework \ util \ ObjectUtilsTests . java \n - * Copyright 2002 - 2019 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n + * @ author Hyunjin Choi \n + @ Test \n + void containsElement ( ) { \n + String keyObject = " key " ; \n + String [ ] array = { " foo " , " bar " , " Bar " , keyObject } ; \n + \n + String fakeObject = " fake " ; \n + \n + assertThat ( ObjectUtils . containsElement ( null , keyObject ) ) . isFalse ( ) ; \n + \n + assertThat ( ObjectUtils . containsElement ( array , keyObject ) ) . isTrue ( ) ; \n + \n + assertThat ( ObjectUtils . containsElement ( array , fakeObject ) ) . isFalse ( ) ; \n + } \n + \n
spring - core \ src \ main \ java \ org \ springframework \ core \ convert \ support \ GenericConversionService . java \n - * Copyright 2002 - 2018 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n - ConvertersForPair convertersForPair = this . converters . get ( convertiblePair ) ; \n - if ( convertersForPair = = null ) { \n - convertersForPair = new ConvertersForPair ( ) ; \n - this . converters . put ( convertiblePair , convertersForPair ) ; \n - } \n - return convertersForPair ; \n + return this . converters . computeIfAbsent ( convertiblePair , k - > new ConvertersForPair ( ) ) ; \n
. circleci \ config . yml \n - npx envinfo @ latest \n + echo y | npx envinfo @ latest \n
. circleci \ config . yml \n - - image : circleci / node : 12 \n + - image : circleci / node : 14 \n - - image : circleci / node : 10 \n + - image : circleci / node : 12 \n
scripts \ ios - configure - glog . sh \n + cat < < EOF > > src / config . h \n
packages \ react - native - codegen \ package . json \n - " version " : " 0 . 0 . 3 " , \n + " version " : " 0 . 0 . 4 " , \n
README . md \n + < type > pom < / type > \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ rpc \ model \ ConsumerModel . java \n - import java . util . IdentityHashMap ; \n - private Map < Method , ConsumerMethodModel > methodModels = new IdentityHashMap < Method , ConsumerMethodModel > ( ) ; \n + private Map < Method , ConsumerMethodModel > methodModels = new HashMap < > ( ) ; \n
codec - http \ src \ main \ java \ io \ netty \ handler \ codec \ http \ HttpObjectDecoder . java \n - char firstChar = line . charAt ( 0 ) ; \n + char firstChar = line . charAtUnsafe ( 0 ) ; \n - char firstChar = line . charAt ( 0 ) ; \n + char firstChar = line . charAtUnsafe ( 0 ) ; \n - char ch = sb . charAt ( nameEnd ) ; \n + char ch = sb . charAtUnsafe ( nameEnd ) ; \n - if ( sb . charAt ( colonEnd ) = = ' : ' ) { \n + if ( sb . charAtUnsafe ( colonEnd ) = = ' : ' ) { \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ JdkAlpnApplicationProtocolNegotiator . java \n + \n + static boolean isAlpnSupported ( ) { \n + return AVAILABLE ; \n + } \n handler \ src \ main \ java \ io \ netty \ handler \ ssl \ OpenSsl . java \n + * \n + * @ deprecated use { @ link SslProvider # isAlpnSupported ( SslProvider ) } with { @ link SslProvider # OPENSSL } . \n + @ Deprecated \n handler \ src \ main \ java \ io \ netty \ handler \ ssl \ SslProvider . java \n - OPENSSL _ REFCNT \n + OPENSSL _ REFCNT ; \n + \n + / * * \n + * Returns { @ code true } if the specified { @ link SslProvider } supports \n + * < a href = " https : / / tools . ietf . org / html / rfc7301 # section - 6 " > TLS ALPN Extension < / a > , { @ code false } otherwise . \n + * / \n + public static boolean isAlpnSupported ( final SslProvider provider ) { \n + switch ( provider ) { \n + case JDK : \n + return JdkAlpnApplicationProtocolNegotiator . isAlpnSupported ( ) ; \n + case OPENSSL : \n + case OPENSSL _ REFCNT : \n + return OpenSsl . isAlpnSupported ( ) ; \n + default : \n + throw new Error ( " Unknown SslProvider : " + provider ) ; \n + } \n + } \n
kotlin - native \ runtime \ src \ main \ cpp \ polyhash \ arm . cpp \n - int res ; \n + uint32 _ t res ; \n kotlin - native \ runtime \ src \ main \ cpp \ polyhash \ naive . h \n - int res = 0 ; \n + uint32 _ t res = 0 ; \n kotlin - native \ runtime \ src \ main \ cpp \ polyhash \ x86 . cpp \n - int res ; \n + uint32 _ t res ; \n
compiler \ ir \ backend . common \ src \ org \ jetbrains \ kotlin \ backend \ common \ lower \ LocalDeclarationsLowering . kt \n - val newReflectionTarget = expression . reflectionTarget ? . run { owner . transformed } \n + val newReflectionTarget = expression . reflectionTarget ? . run { owner . transformed ? : owner } \n
rest - api - spec \ src \ main \ resources \ rest - api - spec \ test \ search . aggregation \ 20 _ terms . yml \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : broken in 7 . 9 . 1 , not yet backported \n + version : " - 7 . 9 . 2 " \n + reason : broken in 7 . 9 . 1 , was fixed in 7 . 9 . 2 \n - do : \n - - - \n - skip : \n - version : " - 7 . 99 . 99 " \n - reason : " https : / / github . com / elastic / elasticsearch / issues / 66876 " \n + version : " - 7 . 11 . 2 " \n + reason : " It was fixed in 7 . 11 . 2 " \n - do : \n
docs \ reference \ aggregations \ bucket \ multi - terms - aggregation . asciidoc \n + The multi _ term aggregations are the most useful when you need to sort by a number of document or a metric aggregation on a composite \n + key and get top N results . If sorting is not required and all values are expected to be retrieved using nested terms aggregation or \n + < < search - aggregations - bucket - composite - aggregation , ` composite aggregations ` > > will be a faster and more memory efficient solution . \n + \n
idea \ idea - frontend - fir \ idea - fir - low - level - api \ src \ org \ jetbrains \ kotlin \ idea \ fir \ low \ level \ api \ file \ structure \ FileStructureElement . kt \n + override fun visitProperty ( property : FirProperty , data : MutableMap < KtElement , FirElement > ) { \n + val psi = property . psi as ? KtProperty ? : return super . visitProperty ( property , data ) \n + if ( ! FileElementFactory . isReanalyzableContainer ( psi ) | | KtPsiUtil . isLocal ( psi ) ) { \n + super . visitProperty ( property , data ) \n + } \n + } \n + \n
idea \ idea - frontend - fir \ idea - fir - low - level - api \ src \ org \ jetbrains \ kotlin \ idea \ fir \ low \ level \ api \ file \ structure \ FileStructure . kt \n - FirResolvePhase . IMPORTS , \n + FirResolvePhase . TYPES , \n idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ references \ FirSimpleNameReference . kt \n + import org . jetbrains . kotlin . idea . frontend . api . fir . symbols . KtFirClassOrObjectSymbol \n + import org . jetbrains . kotlin . idea . frontend . api . symbols . KtClassKind \n - import org . jetbrains . kotlin . psi . KtImportAlias \n - import org . jetbrains . kotlin . psi . KtSimpleNameExpression \n + import org . jetbrains . kotlin . psi . * \n + \n + private fun KtAnalysisSession . fixUpAnnotationCallResolveToCtor ( resultsToFix : Collection < KtSymbol > ) : Collection < KtSymbol > { \n + if ( resultsToFix . isEmpty ( ) ) return resultsToFix \n + \n + val isAnnotationCall = ( ( ( expression . parent as ? KtUserType ) \n + ? . parent as ? KtTypeReference ) \n + ? . parent as ? KtConstructorCalleeExpression ) \n + ? . parent is KtAnnotationEntry \n + if ( ! isAnnotationCall ) return resultsToFix \n + \n + return resultsToFix . map { targetSymbol - > \n + if ( targetSymbol is KtFirClassOrObjectSymbol & & targetSymbol . classKind = = KtClassKind . ANNOTATION _ CLASS ) { \n + targetSymbol . getMemberScope ( ) . getConstructors ( ) . firstOrNull ( ) ? : targetSymbol \n + } else targetSymbol \n + } \n + } \n + \n - return FirReferenceResolveHelper . resolveSimpleNameReference ( this @ KtFirSimpleNameReference , this ) \n + val results = FirReferenceResolveHelper . resolveSimpleNameReference ( this @ KtFirSimpleNameReference , this ) \n + return fixUpAnnotationCallResolveToCtor ( results ) \n idea \ testData \ fir \ lazyResolve \ import \ foo \ main . txt \n - public ? final ? [ RAW _ FIR ] fun foofoo ( ) : Int { \n + public ? final ? [ TYPES ] fun foofoo ( ) : R | kotlin / Int | { \n idea \ testData \ resolve \ references \ AnnotationOnFile . kt \n - / / IGNORE _ FIR \n - \n idea \ testData \ resolve \ references \ AnnotationOnFileWithImport . kt \n - / / IGNORE _ FIR \n - \n
pom . xml \n - < consoleOutput > false < / consoleOutput > \n - < failsOnError > false < / failsOnError > \n + < consoleOutput > true < / consoleOutput > \n + < failsOnError > true < / failsOnError > \n
new file \n exclude - pmd . properties \n + com . iluwatar . servicelayer . common . BaseEntity = UnusedPrivateField \n + com . iluwatar . doublechecked . locking . App = EmptyStatementNotInLoop , EmptyWhileStmt \n + com . iluwatar . doublechecked . locking . InventoryTest = EmptyStatementNotInLoop , EmptyWhileStmt \n pom . xml \n + < plugin > \n + < groupId > org . apache . maven . plugins < / groupId > \n + < artifactId > maven - pmd - plugin < / artifactId > \n + < version > 3 . 6 < / version > \n + < configuration > \n + < failOnViolation > true < / failOnViolation > \n + < failurePriority > 5 < / failurePriority > \n + < printFailingErrors > true < / printFailingErrors > \n + < / configuration > \n + < executions > \n + < execution > \n + < goals > \n + < goal > check < / goal > \n + < / goals > \n + < configuration > \n + < excludeFromFailureFile > exclude - pmd . properties < / excludeFromFailureFile > \n + < / configuration > \n + < / execution > \n + < / executions > \n + < / plugin > \n + < reporting > \n + < plugins > \n + < plugin > \n + < groupId > org . apache . maven . plugins < / groupId > \n + < artifactId > maven - pmd - plugin < / artifactId > \n + < version > 3 . 6 < / version > \n + < / plugin > \n + < / plugins > \n + < / reporting > \n + \n
abstract - factory \ README . md \n - > To create a kingdom we need objects with common theme . Elven kingdom needs an Elven king , Elven castle and Elven army whereas Orcish kingdom needs an Orcish king , Orcish castle and Orcish army . There is a dependency between the objects in the kingdom . \n + > To create a kingdom we need objects with a common theme . Elven kingdom needs an Elven king , Elven castle and Elven army whereas Orcish kingdom needs an Orcish king , Orcish castle and Orcish army . There is a dependency between the objects in the kingdom . \n - Translating the kingdom example above . First of all we have some interfaces and implementation for the objects in the kingdom \n + Translating the kingdom example above . First of all we have some interfaces and implementation for the objects in the \n + kingdom . \n - # # Use Cases : \n + Example use cases \n - * Selecting to call the appropriate implementation of FileSystemAcmeService or DatabaseAcmeService or NetworkAcmeService at runtime . \n + * Selecting to call to the appropriate implementation of FileSystemAcmeService or DatabaseAcmeService or NetworkAcmeService at runtime . \n - \n - # # Real world examples \n + # # Known uses \n + # # Related patterns \n + \n + [ Factory Method ] ( https : / / java - design - patterns . com / patterns / factory - method / ) \n + [ Factory Kit ] ( https : / / java - design - patterns . com / patterns / factory - kit / ) \n + \n
data - transfer - object \ README . md \n + * [ Patterns of Enterprise Application Architecture ] ( https : / / www . amazon . com / gp / product / 0321127420 / ref = as _ li _ tl ? ie = UTF8 & camp = 1789 & creative = 9325 & creativeASIN = 0321127420 & linkCode = as2 & tag = javadesignpat - 20 & linkId = 014237a67c9d46f384b35e10151956bd ) \n lazy - loading \ README . md \n + * [ Patterns of Enterprise Application Architecture ] ( https : / / www . amazon . com / gp / product / 0321127420 / ref = as _ li _ tl ? ie = UTF8 & camp = 1789 & creative = 9325 & creativeASIN = 0321127420 & linkCode = as2 & tag = javadesignpat - 20 & linkId = d9f7d37b032ca6e96253562d075fcc4a ) \n repository \ README . md \n + * [ Patterns of Enterprise Application Architecture ] ( https : / / www . amazon . com / gp / product / 0321127420 / ref = as _ li _ tl ? ie = UTF8 & camp = 1789 & creative = 9325 & creativeASIN = 0321127420 & linkCode = as2 & tag = javadesignpat - 20 & linkId = d9f7d37b032ca6e96253562d075fcc4a ) \n unit - of - work \ README . md \n + * [ Patterns of Enterprise Application Architecture ] ( https : / / www . amazon . com / gp / product / 0321127420 / ref = as _ li _ tl ? ie = UTF8 & camp = 1789 & creative = 9325 & creativeASIN = 0321127420 & linkCode = as2 & tag = javadesignpat - 20 & linkId = d9f7d37b032ca6e96253562d075fcc4a ) \n
new file \n hexagonal \ src \ main \ java \ com \ iluwatar \ hexagonal \ domain \ WireTransfers . java \n + / * * \n + * The MIT License \n + * Copyright ( c ) 2014 Ilkka Seppälä \n + * \n + * Permission is hereby granted , free of charge , to any person obtaining a copy \n + * of this software and associated documentation files ( the " Software " ) , to deal \n + * in the Software without restriction , including without limitation the rights \n + * to use , copy , modify , merge , publish , distribute , sublicense , and / or sell \n + * copies of the Software , and to permit persons to whom the Software is \n + * furnished to do so , subject to the following conditions : \n + * \n + * The above copyright notice and this permission notice shall be included in \n + * all copies or substantial portions of the Software . \n + * \n + * THE SOFTWARE IS PROVIDED " AS IS " , WITHOUT WARRANTY OF ANY KIND , EXPRESS OR \n + * IMPLIED , INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY , \n + * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT . IN NO EVENT SHALL THE \n + * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM , DAMAGES OR OTHER \n + * LIABILITY , WHETHER IN AN ACTION OF CONTRACT , TORT OR OTHERWISE , ARISING FROM , \n + * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN \n + * THE SOFTWARE . \n + * / \n + package com . iluwatar . hexagonal . domain ; \n + \n + / * * \n + * \n + * Interface to the lottery service provider ' s bank account . \n + * \n + * / \n + public interface WireTransfers { \n + \n + int getCurrentFundsAmount ( ) ; \n + boolean transferFunds ( int amount , String receiverBankAccountNumber ) ; \n + \n + } \n
reader - writer - lock \ src \ test \ java \ com \ iluwatar \ reader \ writer \ lock \ ReaderAndWriterTest . java \n + @ Ignore / / intermittent failures when executed on CI \n
compiler \ testData \ codegen \ box \ coroutines \ featureIntersection \ funInterface . kt \n - / / TARGET _ BACKEND : JVM \n - / / IGNORE _ BACKEND : JVM \n + / / IGNORE _ BACKEND : JVM , JS _ IR \n + / / IGNORE _ LIGHT _ ANALYSIS \n + / / LANGUAGE : + SuspendFunctionsInFunInterfaces , + JvmIrEnabledByDefault \n - @ Suppress ( " FUN _ INTERFACE _ WITH _ SUSPEND _ FUNCTION " ) \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ es6 \ semantics \ IrJsCodegenBoxES6TestGenerated . java \n + @ TestMetadata ( " funInterface . kt " ) \n + public void testFunInterface ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / box / coroutines / featureIntersection / funInterface . kt " ) ; \n + } \n + \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ ir \ semantics \ IrJsCodegenBoxTestGenerated . java \n + @ TestMetadata ( " funInterface . kt " ) \n + public void testFunInterface ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / box / coroutines / featureIntersection / funInterface . kt " ) ; \n + } \n + \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ semantics \ JsCodegenBoxTestGenerated . java \n + @ TestMetadata ( " funInterface . kt " ) \n + public void testFunInterface ( ) throws Exception { \n + runTest ( " compiler / testData / codegen / box / coroutines / featureIntersection / funInterface . kt " ) ; \n + } \n + \n
compiler \ testData \ codegen \ box \ compileKotlinAgainstKotlin \ inlineClassesOldMangling . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ coroutines \ featureIntersection \ callableReference \ lambdaParameterUsed . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ coroutines \ featureIntersection \ defaultExpect . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ coroutines \ nonLocalReturn . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ coroutines \ varSpilling \ safeCallElvis . kt \n - r . startCoroutine ( t , Continuation ( EmptyCoroutineContext ) { } ) \n + r . startCoroutine ( t , Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ inlineClasses \ jvm8DefaultInterfaceMethods \ jvmDefaultSuspend . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ box \ valueClasses \ jvmInline . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n compiler \ testData \ codegen \ boxInline \ suspend \ debugMetadataCrossinline . kt \n - c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { } ) \n + c . startCoroutine ( Continuation ( EmptyCoroutineContext ) { \n + it . getOrThrow ( ) \n + } ) \n
buildSrc \ src \ main \ kotlin \ jdksFinder . kt \n - private val macOsJavaHomeOutRegexes = listOf ( Regex ( " " " \ s + ( \ S + ) , \ s + ( \ S + ) : \ s + " . * ? " \ s + ( . + ) " " " ) , \n - Regex ( " " " \ s + ( \ S + ) \ s + \ ( ( . * ? ) \ ) : \ s + ( . + ) " " " ) ) \n + private val macOsJavaHomeOutRegexes = \n + listOf ( \n + Regex ( " " " \ s + ( \ S + ) , \ s + ( \ S + ) : \ s + " . * ? " \ s + ( . + ) " " " ) , \n + Regex ( " " " \ s + ( \ S + ) \ s + \ ( ( . * ? ) \ ) : \ s + ( . + ) " " " ) , \n + Regex ( " " " \ s + ( \ S + ) \ s + \ ( ( . * ? ) \ ) \ s + " [ ^ " ] * " \ s + - \ s + " [ ^ " ] * " \ s ( . + ) " " " ) \n + ) \n
compiler \ cli \ cli - runner \ src \ org \ jetbrains \ kotlin \ runner \ Main . kt \n - J < option > Pass an option directly to JVM \n - no - stdlib Don ' t include Kotlin standard library into classpath \n - no - reflect Don ' t include Kotlin reflection implementation into classpath \n + - compiler - path Kotlin compiler classpath for compiling script or expression or running REPL \n + If not specified , try to find the compiler in the environment \n - X < flag > [ = value ] Pass - X argument to the compiler \n - version Display Kotlin version \n - help ( - h ) Print a synopsis of options \n
compiler \ ir \ backend . js \ src \ org \ jetbrains \ kotlin \ ir \ backend \ js \ lower \ JsCodeOutliningLowering . kt \n + import org . jetbrains . kotlin . ir . util . dumpKotlinLike \n + import java . lang . IllegalStateException \n - outlinedFunction . parent = container as IrDeclarationParent \n + outlinedFunction . parent = when ( container ) { \n + is IrDeclarationParent - > container \n + else - > container . parent \n + } \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ es6 \ semantics \ IrBoxJsES6TestGenerated . java \n + @ TestMetadata ( " init . kt " ) \n + public void testInit ( ) throws Exception { \n + runTest ( " js / js . translator / testData / box / jsCode / init . kt " ) ; \n + } \n + \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ ir \ semantics \ IrBoxJsTestGenerated . java \n + @ TestMetadata ( " init . kt " ) \n + public void testInit ( ) throws Exception { \n + runTest ( " js / js . translator / testData / box / jsCode / init . kt " ) ; \n + } \n + \n js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ semantics \ BoxJsTestGenerated . java \n + @ TestMetadata ( " init . kt " ) \n + public void testInit ( ) throws Exception { \n + runTest ( " js / js . translator / testData / box / jsCode / init . kt " ) ; \n + } \n + \n new file \n js \ js . translator \ testData \ box \ jsCode \ init . kt \n + / / EXPECTED _ REACHABLE _ NODES : 1282 \n + package foo \n + \n + class A { \n + var ok : String \n + \n + init { \n + var ok = " fail " \n + ok = js ( \n + " " " \n + ok = ' OK ' \n + return ok \n + " " " \n + ) \n + this . ok = ok \n + } \n + } \n + \n + fun box ( ) : String { \n + return A ( ) . ok \n + } \n
js \ js . tests \ tests - gen \ org \ jetbrains \ kotlin \ js \ test \ semantics \ BoxJsTestGenerated . java \n - @ TestMetadata ( " init . kt " ) \n - public void testInit ( ) throws Exception { \n - runTest ( " js / js . translator / testData / box / jsCode / init . kt " ) ; \n - } \n - \n js \ js . translator \ testData \ box \ jsCode \ init . kt \n - / / EXPECTED _ REACHABLE _ NODES : 1282 \n + / / TARGET _ BACKEND : JS _ IR \n + \n
libraries \ stdlib \ jdk7 \ src \ kotlin \ io \ path \ ExperimentalPathApi . kt \n - * Any usage of a declaration annotated with ` @ ExperimentalPathAPI ` must be accepted either by \n - * annotating that usage with the [ OptIn ] annotation , e . g . ` @ OptIn ( ExperimentalPathAPI : : class ) ` , \n - * or by using the compiler argument ` - Xopt - in = kotlin . io . path . ExperimentalPathAPI ` . \n + * Any usage of a declaration annotated with ` @ ExperimentalPathApi ` must be accepted either by \n + * annotating that usage with the [ OptIn ] annotation , e . g . ` @ OptIn ( ExperimentalPathApi : : class ) ` , \n + * or by using the compiler argument ` - Xopt - in = kotlin . io . path . ExperimentalPathApi ` . \n
libraries \ stdlib \ wasm \ build . gradle . kts \n + ` maven - publish ` \n + description = " Kotlin Standard Library for experimental WebAssembly platform " \n + \n - } \n + } \n + \n + val runtimeElements by configurations . creating { } \n + val apiElements by configurations . creating { } \n + \n + publish { \n + pom . packaging = " klib " \n + artifact ( tasks . named ( " jsJar " ) ) { \n + extension = " klib " \n + } \n + } \n + \n + afterEvaluate { \n + / / cleanup default publications \n + / / TODO : remove after mpp plugin allows avoiding their creation at all , KT - 29273 \n + publishing { \n + publications . removeAll { it . name ! = " Main " } \n + } \n + \n + tasks . withType < AbstractPublishToMaven > { \n + if ( publication . name ! = " Main " ) this . enabled = false \n + } \n + \n + tasks . named ( " publish " ) { \n + doFirst { \n + publishing . publications { \n + if ( singleOrNull ( ) ? . name ! = " Main " ) { \n + throw GradleException ( " kotlin - stdlib - wasm should have only one publication , found $ size : $ { joinToString { it . name } } " ) \n + } \n + } \n + } \n + } \n + } \n + \n deleted file \n libraries \ stdlib \ wasm \ publish \ build . gradle . kts \n - description = " Kotlin Standard Library for experimental WebAssembly platform " \n - \n - / / Using separate project to publish a single klib from multiplatform build \n - \n - publish { \n - artifactId = " kotlin - stdlib - wasm " \n - pom . packaging = " klib " \n - artifact ( tasks . getByPath ( " : kotlin - stdlib - wasm : jsJar " ) ) { \n - extension = " klib " \n - } \n - } \n settings . gradle \n - " : kotlin - stdlib - wasm - publish " , \n - project ( ' : kotlin - stdlib - wasm - publish ' ) . projectDir = " $ rootDir / libraries / stdlib / wasm / publish " as File \n
idea \ idea - fir \ src \ org \ jetbrains \ kotlin \ idea \ fir \ api \ AbstractHLInspection . kt \n - val description = presentation . getMessage ( element ) \n + val description = applicator . getActionName ( element , input ) \n idea \ idea - fir \ src \ org \ jetbrains \ kotlin \ idea \ fir \ api \ applicator \ HLApplicator . kt \n + fun actionName ( getActionName : ( ) - > String ) { \n + this . getActionName = { _ , _ - > getActionName ( ) } \n + } \n + \n idea \ idea - fir \ src \ org \ jetbrains \ kotlin \ idea \ fir \ api \ applicator \ HLPresentation . kt \n - * Used by [ org . jetbrains . kotlin . idea . fir . api . AbstractHLInspection ] to provide higlighting message and type \n - fun getMessage ( element : PSI ) : String = ForbidKtResolve . forbidResolveIn ( " HLPresentation . getMessage " ) { \n - getMessageImpl ( element ) \n - } \n - \n - abstract fun getMessageImpl ( element : PSI ) : String \n - private val getMessage : ( element : PSI ) - > String , \n - \n - override fun getMessageImpl ( element : PSI ) : String = \n - getMessage . invoke ( element ) \n - private var getMessage : ( ( element : PSI ) - > String ) ? = null \n - fun inspectionText ( getText : ( element : PSI ) - > String ) { \n - getMessage = getText \n - } \n - \n - fun inspectionText ( text : String ) { \n - getMessage = { text } \n - } \n - \n - val getMessage = getMessage \n - ? : error ( " Please , provide getMessage " ) \n - return HLPresentationImpl ( getHighlightType , getMessage ) \n + return HLPresentationImpl ( getHighlightType ) \n idea \ idea - fir \ src \ org \ jetbrains \ kotlin \ idea \ fir \ inspections \ declarations \ HLRedundantUnitReturnTypeInspection . kt \n - familyAndActionName ( KotlinBundle . lazyMessage ( " remove . explicit . type . specification " ) ) \n + familyName ( KotlinBundle . lazyMessage ( " remove . explicit . type . specification " ) ) \n + actionName ( KotlinBundle . lazyMessage ( " redundant . unit . return . type " ) ) \n - inspectionText ( KotlinBundle . message ( " redundant . unit . return . type " ) ) \n
idea \ idea - frontend - fir \ idea - fir - low - level - api \ src \ org \ jetbrains \ kotlin \ idea \ fir \ low \ level \ api \ providers \ FirModuleWithDependenciesSymbolProvider . kt \n - providers . forEach { it . getTopLevelFunctionSymbolsTo ( destination , packageFqName , name ) } \n - withDependent { \n - dependentProviders . forEach { it . getTopLevelFunctionSymbolsTo ( destination , packageFqName , name ) } \n - } \n + getTopLevelFunctionSymbolsToWithoutDependencies ( destination , packageFqName , name ) \n + dependentProviders . getTopLevelFunctionSymbolsTo ( destination , packageFqName , name ) \n + getTopLevelPropertySymbolsToWithoutDependencies ( destination , packageFqName , name ) \n + dependentProviders . getTopLevelPropertySymbolsTo ( destination , packageFqName , name ) \n + } \n + \n + @ FirSymbolProviderInternals \n + fun getTopLevelFunctionSymbolsToWithoutDependencies ( \n + destination : MutableList < FirNamedFunctionSymbol > , \n + packageFqName : FqName , \n + name : Name \n + ) { \n + providers . forEach { it . getTopLevelFunctionSymbolsTo ( destination , packageFqName , name ) } \n + } \n + \n + @ FirSymbolProviderInternals \n + fun getTopLevelPropertySymbolsToWithoutDependencies ( destination : MutableList < FirPropertySymbol > , packageFqName : FqName , name : Name ) { \n - withDependent { \n - dependentProviders . forEach { it . getTopLevelPropertySymbolsTo ( destination , packageFqName , name ) } \n - } \n + @ FirSymbolProviderInternals \n + override fun getTopLevelFunctionSymbolsTo ( destination : MutableList < FirNamedFunctionSymbol > , packageFqName : FqName , name : Name ) { \n + providers . forEach { provider - > \n + when ( provider ) { \n + is FirModuleWithDependenciesSymbolProvider - > \n + provider . getTopLevelFunctionSymbolsToWithoutDependencies ( destination , packageFqName , name ) \n + else - > provider . getTopLevelFunctionSymbolsTo ( destination , packageFqName , name ) \n + } \n + } \n + } \n + \n + @ FirSymbolProviderInternals \n + override fun getTopLevelPropertySymbolsTo ( destination : MutableList < FirPropertySymbol > , packageFqName : FqName , name : Name ) { \n + providers . forEach { provider - > \n + when ( provider ) { \n + is FirModuleWithDependenciesSymbolProvider - > \n + provider . getTopLevelPropertySymbolsToWithoutDependencies ( destination , packageFqName , name ) \n + else - > provider . getTopLevelPropertySymbolsTo ( destination , packageFqName , name ) \n + } \n + } \n + } \n + \n
server \ src \ main \ java \ org \ elasticsearch \ cli \ KeyStoreAwareCommand . java \n - import javax . crypto . AEADBadTagException ; \n - if ( e . getCause ( ) instanceof AEADBadTagException ) { \n - throw new UserException ( ExitCodes . DATA _ ERROR , " Wrong password for elasticsearch . keystore " ) ; \n - } \n + throw new UserException ( ExitCodes . DATA _ ERROR , e . getMessage ( ) ) ; \n x - pack \ plugin \ security \ src \ test \ java \ org \ elasticsearch \ xpack \ security \ authc \ esnative \ tool \ SetupPasswordToolTests . java \n - import javax . crypto . AEADBadTagException ; \n - doThrow ( new SecurityException ( " Provided keystore password was incorrect " , new AEADBadTagException ( ) ) ) \n + doThrow ( new SecurityException ( " Provided keystore password was incorrect " , new IOException ( ) ) ) \n - assertThat ( e . getMessage ( ) , containsString ( " Wrong password for elasticsearch . keystore " ) ) ; \n + assertThat ( e . getMessage ( ) , containsString ( " Provided keystore password was incorrect " ) ) ; \n x - pack \ plugin \ security \ src \ test \ java \ org \ elasticsearch \ xpack \ security \ authc \ saml \ SamlMetadataCommandTests . java \n - import javax . crypto . AEADBadTagException ; \n + \n + import java . io . IOException ; \n - doThrow ( new SecurityException ( " Provided keystore password was incorrect " , new AEADBadTagException ( ) ) ) \n + doThrow ( new SecurityException ( " Provided keystore password was incorrect " , new IOException ( ) ) ) \n - assertThat ( e . getMessage ( ) , CoreMatchers . containsString ( " Wrong password for elasticsearch . keystore " ) ) ; \n + assertThat ( e . getMessage ( ) , CoreMatchers . containsString ( " Provided keystore password was incorrect " ) ) ; \n
x - pack \ plugin \ sql \ qa \ jdbc \ security \ with - ssl \ build . gradle \n + import org . elasticsearch . gradle . info . BuildParams \n + \n + \n + / / JDBC client can only be configured for SSL with keystores , but we can ' t use JKS / PKCS12 keystores in FIPS 140 - 2 mode . \n + tasks . withType ( Test ) . configureEach { \n + onlyIf { BuildParams . inFipsJvm = = false } \n + } \n
docs \ reference \ ml \ df - analytics \ apis \ get - trained - models . asciidoc \n + ` hyperparameters ` : : : \n + ( array ) \n + List of the available hyperparameters optimized during the \n + ` fine _ parameter _ tuning ` phase as well as specified by the user . \n + + \n + . Properties of hyperparameters \n + [ % collapsible % open ] \n + = = = = = = \n + ` absolute _ importance ` : : : : \n + ( Optional , double ) \n + A positive number showing how much the parameter influences the variation of the \n + { ml - docs } / dfa - regression . html # dfa - regression - lossfunction [ loss function ] . For \n + hyperparameters with values that are not specified by the user but tuned during \n + hyperparameter optimization . \n + \n + ` name ` : : : : \n + ( string ) \n + Name of the hyperparameter . \n + \n + ` relative _ importance ` : : : : \n + ( Optional , double ) \n + A number between 0 and 1 showing the proportion of influence on the variation of \n + the loss function among all tuned hyperparameters . For hyperparameters with \n + values that are not specified by the user but tuned during hyperparameter \n + optimization . \n + \n + ` supplied ` : : : : \n + ( Boolean ) \n + Indicates if the hyperparameter is specified by the user ( ` true ` ) or optimized \n + ( ` false ` ) . \n + \n + ` value ` : : : : \n + ( double ) \n + The value of the hyperparameter , either optimized or specified by the user . \n + \n + = = = = = = \n + \n
docs \ reference \ autoscaling \ deciders \ machine - learning - decider . asciidoc \n - user intervention ( for example , a user calling ` _ stop ` against a real - time { anomaly - job } \n - ) , the numbers are ignored for that particular job . \n + user intervention ( for example , a user calling ` _ stop ` against a real - time \n + { anomaly - job } ) , the numbers are ignored for that particular job . \n
third _ party \ ijar \ ijar . cc \n + const char * DUMMY _ FILE = " dummy " ; \n + const size _ t DUMMY _ PATH _ LENGTH = strlen ( DUMMY _ FILE ) ; \n + / / The size of an output jar containing only an empty dummy file : \n + const size _ t JAR _ WITH _ DUMMY _ FILE _ SIZE = 98ull + 2 * DUMMY _ PATH _ LENGTH ; \n - u8 output _ length = \n - in - > CalculateOutputLength ( ) + \n + u8 output _ length = in - > CalculateOutputLength ( ) ; \n + if ( output _ length < JAR _ WITH _ DUMMY _ FILE _ SIZE ) { \n + output _ length = JAR _ WITH _ DUMMY _ FILE _ SIZE ; \n + } \n + output _ length + = \n + \n - out - > WriteEmptyFile ( " dummy " ) ; \n + out - > WriteEmptyFile ( DUMMY _ FILE ) ; \n
scripts \ bootstrap \ BUILD . bootstrap \n - singlejar = [ " / / src / java _ tools / singlejar : bootstrap _ deploy . jar " ] , \n + singlejar = [ " / / src / tools / singlejar : singlejar " ] , \n
test \ framework \ src \ main \ java \ org \ elasticsearch \ test \ rest \ yaml \ ClientYamlTestExecutionContext . java \n + if ( requestHeaders . isEmpty ( ) = = false ) { \n + stash . stashValue ( " request _ headers " , requestHeaders ) ; \n + } \n test \ framework \ src \ test \ java \ org \ elasticsearch \ test \ rest \ yaml \ ClientYamlTestExecutionContextTests . java \n + import static org . hamcrest . Matchers . is ; \n + \n + \n + public void testStashHeadersOnException ( ) throws IOException { \n + final Version version = VersionUtils . randomVersion ( random ( ) ) ; \n + final ClientYamlTestExecutionContext context = \n + new ClientYamlTestExecutionContext ( null , randomBoolean ( ) ) { \n + @ Override \n + ClientYamlTestResponse callApiInternal ( String apiName , Map < String , String > params , \n + HttpEntity entity , Map < String , String > headers , NodeSelector nodeSelector ) { \n + throw new RuntimeException ( " boom ! " ) ; \n + } \n + \n + @ Override \n + public Version esVersion ( ) { \n + return version ; \n + } \n + } ; \n + final Map < String , String > headers = new HashMap < > ( ) ; \n + headers . put ( " Accept " , " application / json " ) ; \n + headers . put ( " Authorization " , " Basic password = = " ) ; \n + try { \n + context . callApi ( " test " , Collections . emptyMap ( ) , Collections . emptyList ( ) , headers ) ; \n + } catch ( Exception e ) { \n + / / do nothing . . . behavior we are testing is the finally block of the production code \n + } \n + assertThat ( context . stash ( ) . getValue ( " $ request _ headers " ) , is ( headers ) ) ; \n + } \n
docs \ reference \ indices \ create - data - stream . asciidoc \n - Data streams require a matching < < index - templates , index template > > . \n - See < < set - up - a - data - stream > > . \n - \n - - - - \n + * A matching < < index - templates , index template > > with data stream enabled . \n + See < < set - up - a - data - stream > > . \n + \n docs \ reference \ indices \ migrate - to - data - stream . asciidoc \n - Data streams require a matching < < index - templates , index template > > . \n - See < < set - up - a - data - stream > > . \n - \n - - - - \n + * A matching < < index - templates , index template > > with data stream enabled . \n + See < < set - up - a - data - stream > > . \n + \n
pom . xml \n + < dependency > \n + < groupId > org . apache . maven . scm < / groupId > \n + < artifactId > maven - scm - api < / artifactId > \n + < version > 1 . 11 . 2 < / version > \n + < / dependency > \n
retrofit \ src \ main \ java \ retrofit2 \ HttpServiceMethod . java \n - return KotlinExtensions . awaitResponse ( call , continuation ) ; \n + \n + / / See SuspendForBody for explanation about this try / catch . \n + try { \n + return KotlinExtensions . awaitResponse ( call , continuation ) ; \n + } catch ( Exception e ) { \n + return KotlinExtensions . yieldAndThrow ( e , continuation ) ; \n + } \n retrofit \ src \ test \ java \ retrofit2 \ KotlinSuspendTest . kt \n - @ Test fun checkedExceptionsAreNotSynchronouslyThrown ( ) = runBlocking { \n + @ Test fun checkedExceptionsAreNotSynchronouslyThrownForBody ( ) = runBlocking { \n + \n + @ Test fun checkedExceptionsAreNotSynchronouslyThrownForResponse ( ) = runBlocking { \n + val retrofit = Retrofit . Builder ( ) \n + . baseUrl ( " https : / / unresolved - host . com / " ) \n + . addConverterFactory ( ToStringConverterFactory ( ) ) \n + . build ( ) \n + val example = retrofit . create ( Service : : class . java ) \n + \n + server . shutdown ( ) \n + \n + / / The problematic behavior of the UnknownHostException being synchronously thrown is \n + / / probabilistic based on thread preemption . Running a thousand times will almost always \n + / / trigger it , so we run an order of magnitude more to be safe . \n + repeat ( 10000 ) { \n + try { \n + example . response ( ) \n + fail ( ) \n + } catch ( _ : IOException ) { \n + / / We expect IOException , the bad behavior will wrap this in UndeclaredThrowableException . \n + } \n + } \n + } \n
leakcanary - haha \ src \ main \ java \ leakcanary \ HprofReader . kt \n - const val BYTE _ MASK = 0xFF \n + const val BYTE _ MASK = 0xff \n - } \n + } \n
leakcanary - haha \ src \ main \ java \ leakcanary \ HprofReader . kt \n - return source . readByte ( ) ! = 0 . toByte ( ) \n + return source . readByte ( ) . toInt ( ) ! = 0 \n
butterknife - gradle - plugin \ src \ main \ java \ butterknife \ plugin \ ButterKnifePlugin . kt \n - val pathToR = processResources . packageForR . replace ( ' , ' , File . separatorChar ) \n + val pathToR = processResources . packageForR . replace ( ' . ' , File . separatorChar ) \n
new file \n retrofit - mock \ src \ main \ java \ retrofit2 \ mock \ MockRetrofitIOException . java \n + / * \n + * Copyright ( C ) 2017 Square , Inc . \n + * \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n + * \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n + * / \n + package retrofit2 . mock ; \n + \n + import java . io . IOException ; \n + \n + final class MockRetrofitIOException extends IOException { \n + MockRetrofitIOException ( ) { \n + super ( " Failure triggered by MockRetrofit ' s NetworkBehavior " ) ; \n + } \n + } \n retrofit - mock \ src \ main \ java \ retrofit2 \ mock \ NetworkBehavior . java \n - failureException = new IOException ( " Mock failure ! " ) ; \n + failureException = new MockRetrofitIOException ( ) ; \n retrofit - mock \ src \ test \ java \ retrofit2 \ mock \ NetworkBehaviorTest . java \n - assertThat ( t ) . isExactlyInstanceOf ( IOException . class ) . hasMessage ( " Mock failure ! " ) ; \n + assertThat ( t ) . isInstanceOf ( IOException . class ) \n + . isExactlyInstanceOf ( MockRetrofitIOException . class ) ; \n
samples \ demos \ AndroidManifest . xml \n + < activity \n + android : name = " . app . ActionBarSimpleDark " \n + android : label = " @ string / actionbar _ simple _ dark " \n + android : theme = " @ style / Theme . Sherlock . Light . DarkActionBar " > \n + < intent - filter > \n + < action android : name = " android . intent . action . MAIN " / > \n + < category android : name = " com . actionbarsherlock . sample . demos . SUPPORT4 _ SAMPLE _ CODE " / > \n + < / intent - filter > \n + < / activity > \n + \n samples \ demos \ res \ values \ strings . xml \n + < string name = " actionbar _ simple _ dark " > Action Bar / Simple ( Light - Dark Theme ) < / string > \n new file \n samples \ demos \ src \ com \ actionbarsherlock \ sample \ demos \ app \ ActionBarSimpleDark . java \n + / * \n + * Copyright ( C ) 2011 Jake Wharton \n + * \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n + * \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n + * / \n + package com . actionbarsherlock . sample . demos . app ; \n + \n + import android . os . Bundle ; \n + import android . support . v4 . app . FragmentActivity ; \n + import android . widget . TextView ; \n + import com . actionbarsherlock . sample . demos . R ; \n + \n + public class ActionBarSimpleDark extends FragmentActivity { \n + @ Override \n + protected void onCreate ( Bundle savedInstanceState ) { \n + super . onCreate ( savedInstanceState ) ; \n + setContentView ( R . layout . actionbar _ text ) ; \n + ( ( TextView ) findViewById ( R . id . text ) ) . setText ( R . string . actionbar _ simple _ content ) ; \n + } \n + } \n
plugins \ compat - lib \ src \ android \ support \ v4 \ app \ FragmentActivity . java \n - boolean mOptionsMenuInvalidated ; \n + / / boolean mOptionsMenuInvalidated ; \n - if ( android . os . Build . VERSION . SDK _ INT > = HONEYCOMB ) { \n - / / If we are running on HC or greater , we can use the framework \n - / / API to invalidate the options menu . \n - ActivityCompatHoneycomb . invalidateOptionsMenu ( this ) ; \n - return ; \n - } \n + invalidateOptionsMenu ( ) ; \n + / / if ( android . os . Build . VERSION . SDK _ INT > = HONEYCOMB ) { \n + / / / / If we are running on HC or greater , we can use the framework \n + / / / / API to invalidate the options menu . \n + / / ActivityCompatHoneycomb . invalidateOptionsMenu ( this ) ; \n + / / return ; \n + / / } \n - mOptionsMenuInvalidated = true ; \n + / / mOptionsMenuInvalidated = true ; \n
presto - geospatial - toolkit \ src \ main \ java \ com \ facebook \ presto \ geospatial \ GeometryUtils . java \n + / * * \n + * Get the bounding box for an OGCGeometry . \n + * < p > \n + * If the geometry is empty , return a Retangle with NaN coordinates . \n + * \n + * @ param ogcGeometry \n + * @ return Rectangle bounding box \n + * / \n + / * * \n + * Get the bounding box for an OGCGeometry , inflated by radius . \n + * < p > \n + * If the geometry is empty , return a Retangle with NaN coordinates . \n + * \n + * @ param ogcGeometry \n + * @ return Rectangle bounding box \n + * / \n - com . esri . core . geometry . Envelope envelope = new com . esri . core . geometry . Envelope ( ) ; \n - ogcGeometry . getEsriGeometry ( ) . queryEnvelope ( envelope ) ; \n + com . esri . core . geometry . Envelope envelope = getEnvelope ( ogcGeometry ) ; \n presto - geospatial - toolkit \ src \ test \ java \ com \ facebook \ presto \ geospatial \ TestGeometryUtils . java \n + import static com . facebook . presto . geospatial . GeometryUtils . getExtent ; \n + \n + @ Test \n + public void testGetExtent ( ) \n + { \n + assertGetExtent ( \n + " POINT ( - 23 . 4 12 . 2 ) " , \n + new Rectangle ( - 23 . 4 , 12 . 2 , - 23 . 4 , 12 . 2 ) ) ; \n + assertGetExtent ( \n + " LINESTRING ( - 75 . 9375 23 . 6359 , - 75 . 9375 23 . 6364 ) " , \n + new Rectangle ( - 75 . 9375 , 23 . 6359 , - 75 . 9375 , 23 . 6364 ) ) ; \n + assertGetExtent ( \n + " GEOMETRYCOLLECTION ( " + \n + " LINESTRING ( - 75 . 9375 23 . 6359 , - 75 . 9375 23 . 6364 ) , " + \n + " MULTIPOLYGON ( ( ( - 75 . 9375 23 . 45520 , - 75 . 9371 23 . 4554 , - 75 . 9375 23 . 46023325 , - 75 . 9375 23 . 45520 ) ) ) " + \n + " ) " , \n + new Rectangle ( - 75 . 9375 , 23 . 4552 , - 75 . 9371 , 23 . 6364 ) ) ; \n + } \n + \n + private void assertGetExtent ( String wkt , Rectangle expected ) \n + { \n + assertEquals ( getExtent ( OGCGeometry . fromText ( wkt ) ) , expected ) ; \n + } \n
presto - geospatial - toolkit \ src \ main \ java \ com \ facebook \ presto \ geospatial \ serde \ GeometrySerde . java \n + import com . google . common . annotations . VisibleForTesting ; \n - verify ( ! envelope . isEmpty ( ) ) ; \n - private static OGCGeometry createFromEsriGeometry ( Geometry geometry , boolean multiType ) \n + @ VisibleForTesting \n + static OGCGeometry createFromEsriGeometry ( Geometry geometry , boolean multiType ) \n presto - geospatial - toolkit \ src \ main \ java \ com \ facebook \ presto \ geospatial \ serde \ JtsGeometrySerde . java \n + import static com . facebook . presto . geospatial . GeometryUtils . isEsriNaN ; \n + if ( isEsriNaN ( xMin ) | | isEsriNaN ( yMin ) | | isEsriNaN ( xMax ) | | isEsriNaN ( yMax ) ) { \n + return GEOMETRY _ FACTORY . createPolygon ( ) ; \n + } \n + \n presto - geospatial - toolkit \ src \ test \ java \ com \ facebook \ presto \ geospatial \ serde \ TestGeometrySerialization . java \n - import static com . esri . core . geometry . ogc . OGCGeometry . createFromEsriGeometry ; \n + import static com . facebook . presto . geospatial . serde . GeometrySerde . createFromEsriGeometry ; \n + testEnvelopeSerialization ( new Envelope ( ) ) ; \n - assertEquals ( deserialize ( serialize ( envelope ) ) , createFromEsriGeometry ( envelope , null ) ) ; \n + assertEquals ( deserialize ( serialize ( envelope ) ) , createFromEsriGeometry ( envelope , false ) ) ; \n - assertEquals ( JtsGeometrySerde . serialize ( JtsGeometrySerde . deserialize ( serialize ( envelope ) ) ) , serialize ( createFromEsriGeometry ( envelope , null ) ) ) ; \n + assertEquals ( JtsGeometrySerde . serialize ( JtsGeometrySerde . deserialize ( serialize ( envelope ) ) ) , serialize ( createFromEsriGeometry ( envelope , false ) ) ) ; \n
presto - geospatial \ src \ main \ java \ com \ facebook \ presto \ plugin \ geospatial \ GeoFunctions . java \n - if ( intersection . getXMin ( ) = = intersection . getXMax ( ) ) { \n - if ( intersection . getYMin ( ) = = intersection . getYMax ( ) ) { \n - return EsriGeometrySerde . serialize ( createFromEsriGeometry ( new Point ( intersection . getXMin ( ) , intersection . getXMax ( ) ) , null ) ) ; \n + if ( intersection . getXMin ( ) = = intersection . getXMax ( ) | | intersection . getYMin ( ) = = intersection . getYMax ( ) ) { \n + if ( intersection . getXMin ( ) = = intersection . getXMax ( ) & & intersection . getYMin ( ) = = intersection . getYMax ( ) ) { \n + return EsriGeometrySerde . serialize ( createFromEsriGeometry ( new Point ( intersection . getXMin ( ) , intersection . getYMin ( ) ) , null ) ) ; \n - return EsriGeometrySerde . serialize ( createFromEsriGeometry ( new Polyline ( new Point ( intersection . getXMin ( ) , intersection . getYMin ( ) ) , new Point ( intersection . getXMin ( ) , intersection . getYMax ( ) ) ) , null ) ) ; \n - } \n - \n - if ( intersection . getYMin ( ) = = intersection . getYMax ( ) ) { \n - return EsriGeometrySerde . serialize ( createFromEsriGeometry ( new Polyline ( new Point ( intersection . getXMin ( ) , intersection . getYMin ( ) ) , new Point ( intersection . getXMax ( ) , intersection . getYMin ( ) ) ) , null ) ) ; \n + return EsriGeometrySerde . serialize ( createFromEsriGeometry ( new Polyline ( new Point ( intersection . getXMin ( ) , intersection . getYMin ( ) ) , new Point ( intersection . getXMax ( ) , intersection . getYMax ( ) ) ) , null ) ) ; \n presto - geospatial \ src \ test \ java \ com \ facebook \ presto \ plugin \ geospatial \ TestGeoFunctions . java \n + assertEnvelopeIntersection ( " POLYGON ( ( 0 0 , 0 5 , 5 5 , 5 0 , 0 0 ) ) " , " POLYGON ( ( 5 - 1 , 5 0 , 6 0 , 6 - 1 , 5 - 1 ) ) " , " POINT ( 5 0 ) " ) ; \n
pom . xml \n - < dep . slice . version > 0 . 36 < / dep . slice . version > \n + < dep . slice . version > 0 . 38 < / dep . slice . version > \n presto - main \ src \ main \ java \ com \ facebook \ presto \ type \ setdigest \ SetDigest . java \n - import io . airlift . slice . Murmur3 ; \n + import io . airlift . slice . Murmur3Hash128 ; \n - addHash ( Murmur3 . hash64 ( value ) ) ; \n + addHash ( Murmur3Hash128 . hash64 ( value ) ) ; \n - addHash ( Murmur3 . hash64 ( value ) ) ; \n + addHash ( Murmur3Hash128 . hash64 ( value ) ) ; \n
packages \ Connectivity \ framework \ src \ android \ net \ ConnectivityManager . java \n - private void setOemNetworkPreference ( @ NonNull OemNetworkPreferences preference ) { \n - Log . d ( TAG , " setOemNetworkPreference called with preference : " \n - + preference . toString ( ) ) ; \n + private void setOemNetworkPreference ( @ NonNull final OemNetworkPreferences preference ) { \n + try { \n + mService . setOemNetworkPreference ( preference ) ; \n + } catch ( RemoteException e ) { \n + Log . e ( TAG , " setOemNetworkPreference ( ) failed for preference : " + preference . toString ( ) ) ; \n + throw e . rethrowFromSystemServer ( ) ; \n + } \n packages \ Connectivity \ framework \ src \ android \ net \ IConnectivityManager . aidl \n + import android . net . OemNetworkPreferences ; \n + \n + void setOemNetworkPreference ( in OemNetworkPreferences preference ) ; \n services \ core \ java \ com \ android \ server \ ConnectivityService . java \n + import android . net . OemNetworkPreferences ; \n + \n + \n + @ Override \n + public void setOemNetworkPreference ( @ NonNull final OemNetworkPreferences preference ) { \n + / / TODO http : / / b / 176495594 track multiple default networks with networkPreferences \n + if ( DBG ) log ( " setOemNetworkPreference ( ) called with : " + preference . toString ( ) ) ; \n + } \n
tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n + waitForIdle ( ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ SqlTaskManager . java \n - if ( resourceOvercommit ( session ) ) { \n - / / TODO : This should have been done when the QueryContext was created . However , the session isn ' t available at that point . \n - queryContexts . getUnchecked ( taskId . getQueryId ( ) ) . setResourceOvercommit ( ) ; \n - } \n - else { \n - queryContexts . getUnchecked ( \n - taskId . getQueryId ( ) ) . setMemoryLimits ( \n - getQueryMaxMemoryPerNode ( session ) , \n - getQueryMaxTotalMemoryPerNode ( session ) , \n - getQueryMaxBroadcastMemory ( session ) ) ; \n + SqlTask sqlTask = tasks . getUnchecked ( taskId ) ; \n + QueryContext queryContext = sqlTask . getQueryContext ( ) ; \n + if ( ! queryContext . isMemoryLimitsInitialized ( ) ) { \n + if ( resourceOvercommit ( session ) ) { \n + / / TODO : This should have been done when the QueryContext was created . However , the session isn ' t available at that point . \n + queryContext . setResourceOvercommit ( ) ; \n + } \n + else { \n + queryContext . setMemoryLimits ( \n + getQueryMaxMemoryPerNode ( session ) , \n + getQueryMaxTotalMemoryPerNode ( session ) , \n + getQueryMaxBroadcastMemory ( session ) ) ; \n + } \n - SqlTask sqlTask = tasks . getUnchecked ( taskId ) ; \n presto - main \ src \ main \ java \ com \ facebook \ presto \ memory \ QueryContext . java \n + @ GuardedBy ( " this " ) \n + private boolean resourceOverCommit ; \n + private volatile boolean memoryLimitsInitialized ; \n + \n + public boolean isMemoryLimitsInitialized ( ) \n + { \n + return memoryLimitsInitialized ; \n + } \n + \n + resourceOverCommit = true ; \n + / / Mark future memory limit updates as unnecessary \n + memoryLimitsInitialized = true ; \n + if ( resourceOverCommit ) { \n + / / Reset the memory limits based on the new pool assignment \n + setResourceOvercommit ( ) ; \n + } \n + / / Mark future memory limit updates as unnecessary \n + memoryLimitsInitialized = true ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ MemoryRevokingScheduler . java \n - private static final Ordering < SqlTask > ORDER _ BY _ CREATE _ TIME = Ordering . natural ( ) . onResultOf ( task - > task . getTaskInfo ( ) . getStats ( ) . getCreateTime ( ) ) ; \n + private static final Ordering < SqlTask > ORDER _ BY _ CREATE _ TIME = Ordering . natural ( ) . onResultOf ( SqlTask : : getTaskCreatedTime ) ; \n - . filter ( task - > task . getTaskStatus ( ) . getState ( ) = = TaskState . RUNNING ) \n + . filter ( task - > task . getTaskState ( ) = = TaskState . RUNNING ) \n - . filter ( task - > task . getTaskStatus ( ) . getState ( ) = = TaskState . RUNNING ) \n + . filter ( task - > task . getTaskState ( ) = = TaskState . RUNNING ) \n presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ SqlTask . java \n + public TaskState getTaskState ( ) \n + { \n + return taskStateMachine . getState ( ) ; \n + } \n + \n + public DateTime getTaskCreatedTime ( ) \n + { \n + return taskStateMachine . getCreatedTime ( ) ; \n + } \n + \n presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ SqlTaskManager . java \n - . filter ( task - > ! task . getTaskStatus ( ) . getState ( ) . isDone ( ) ) \n + . filter ( task - > ! task . getTaskState ( ) . isDone ( ) ) \n presto - main \ src \ main \ java \ com \ facebook \ presto \ util \ GcStatusMonitor . java \n - . filter ( task - > ! task . getTaskInfo ( ) . getTaskStatus ( ) . getState ( ) . isDone ( ) ) \n + . filter ( task - > ! task . getTaskState ( ) . isDone ( ) ) \n
docs \ reference \ eql \ syntax . asciidoc \n - Otherwise returns ` false ` . For strings , matching is case - sensitive . Wildcards \n - are not supported . \n + Otherwise returns ` false ` . Wildcards are not supported . \n - Otherwise returns ` false ` . Matching is case - insensitive and can only be used to \n - compare strings . Supports < < eql - syntax - wildcards , wildcards > > and \n - < < eql - syntax - lookup - operators , list lookups > > . \n + Otherwise returns ` false ` . Can only be used to compare strings . Supports \n + < < eql - syntax - wildcards , wildcards > > and < < eql - syntax - lookup - operators , list \n + lookups > > . \n - equal . Otherwise returns ` false ` . For strings , matching is case - sensitive . \n - Wildcards are not supported . \n + equal . Otherwise returns ` false ` . Wildcards are not supported . \n - - - - \n - Returns ` true ` if the value is contained in the provided list . For strings , \n - matching is case - sensitive . \n + Returns ` true ` if the value is contained in the provided list . \n - Returns ` true ` if the value is contained in the provided list . For strings , \n - matching is case - insensitive . \n + Returns ` true ` if the value is contained in the provided list . \n - Returns ` true ` if the value is not contained in the provided list . For strings , \n - matching is case - sensitive . \n + Returns ` true ` if the value is not contained in the provided list . \n - Returns ` true ` if the value is not contained in the provided list . For strings , \n - matching is case - insensitive . \n + Returns ` true ` if the value is not contained in the provided list . \n - Returns ` true ` if the value is contained in the provided list . Can only be used \n + Returns ` true ` if the string is contained in the provided list . Can only be used \n
docs \ reference \ cat \ alias . asciidoc \n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \n - GET / _ cat / aliases ? v \n + GET / _ cat / aliases ? v = true \n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \n
src \ com \ loopj \ android \ http \ RetryHandler . java \n - boolean retry ; \n + boolean retry = true ; \n - } else { \n + } \n + \n + if ( retry ) { \n - HttpUriRequest currentReq = ( HttpUriRequest ) context . getAttribute ( ExecutionContext . HTTP _ REQUEST ) ; \n + HttpUriRequest currentReq = ( HttpUriRequest ) context . getAttribute ( ExecutionContext . HTTP _ REQUEST ) ; \n - if ( ! requestType . equals ( " POST " ) ) { \n - retry = true ; \n - } else { \n - / / otherwise do not retry \n - retry = false ; \n - } \n + retry = ! requestType . equals ( " POST " ) ; \n
src \ com \ loopj \ android \ http \ JsonHttpResponseHandler . java \n - onFailure ( new JSONException ( " Unexpected type " + jsonResponse . getClass ( ) . getName ( ) ) ) ; \n + onFailure ( new JSONException ( " Unexpected type " + jsonResponse . getClass ( ) . getName ( ) ) , ( JSONObject ) null ) ; \n
presto - benchto - benchmarks \ src \ test \ resources \ sql \ presto \ tpcds \ q76 . plan . txt \n - remote exchange ( REPARTITION , HASH , [ d _ qoy , d _ year , expr _ 12 , expr _ 217 , i _ category ] ) \n - partial aggregation over ( d _ qoy , d _ year , expr _ 12 , expr _ 217 , i _ category ) \n + remote exchange ( REPARTITION , HASH , [ cast , d _ qoy , d _ year , expr _ 12 , i _ category ] ) \n + partial aggregation over ( cast , d _ qoy , d _ year , expr _ 12 , i _ category ) \n - remote exchange ( REPARTITION , HASH , [ d _ qoy _ 49 , d _ year _ 45 , expr _ 223 , expr _ 68 , i _ category _ 29 ] ) \n - partial aggregation over ( d _ qoy _ 49 , d _ year _ 45 , expr _ 223 , expr _ 68 , i _ category _ 29 ) \n + remote exchange ( REPARTITION , HASH , [ cast _ 222 , d _ qoy _ 49 , d _ year _ 45 , expr _ 68 , i _ category _ 29 ] ) \n + partial aggregation over ( cast _ 222 , d _ qoy _ 49 , d _ year _ 45 , expr _ 68 , i _ category _ 29 ) \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ PlanOptimizers . java \n - new PushAggregationThroughOuterJoin ( metadata . getFunctionManager ( ) ) ) ) , \n - inlineProjections , \n - simplifyOptimizer , / / Re - run the SimplifyExpressions to simplify any recomposed expressions from other optimizations \n - projectionPushDown , \n - new UnaliasSymbolReferences ( metadata . getFunctionManager ( ) ) , / / Run again because predicate pushdown and projection pushdown might add more projections \n - new PruneUnreferencedOutputs ( ) ) ; / / Make sure to run this before index join . Filtered projections may not have all the columns . \n + new PushAggregationThroughOuterJoin ( metadata . getFunctionManager ( ) ) ) ) ) ; \n + inlineProjections , \n + simplifyRowExpressionOptimizer , / / Re - run the SimplifyExpressions to simplify any recomposed expressions from other optimizations \n + projectionPushDown , \n + new UnaliasSymbolReferences ( metadata . getFunctionManager ( ) ) , / / Run again because predicate pushdown and projection pushdown might add more projections \n + new PruneUnreferencedOutputs ( ) , / / Make sure to run this before index join . Filtered projections may not have all the columns . \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ NullabilityAnalyzer . java \n + break ; \n + break ; \n + default : \n + / / no - op \n presto - main \ src \ test \ java \ com \ facebook \ presto \ sql \ planner \ TestLogicalPlanner . java \n - / / cast function cannot be optimized on coordinator ; it will only be optimized on workers \n - " l _ comment = ' 42 ' and ' 42 ' = cast ( l _ comment as varchar ) " , \n + " l _ comment = ' 42 ' " , \n presto - main \ src \ test \ java \ com \ facebook \ presto \ sql \ planner \ TestNullabilityAnalyzer . java \n - / / TODO following two tests should return false but we are not yet smart enough to infer it . \n + / / TODO following test should return false but we are not yet smart enough to infer it . \n - assertNullability ( " CAST ( ' 123 ' AS VARCHAR ) " , true ) ; \n + \n + assertNullability ( " CAST ( ' 123 ' AS VARCHAR ) " , false ) ; \n
src \ clj \ backtype \ storm \ daemon \ nimbus . clj \n - ( ExecutorDetails . start - task end - task ) ) ) ) ] \n - ( log - message " MAPK : " executor - > component ) \n + ( ExecutorDetails . ( int start - task ) ( int end - task ) ) ) ) ) ] \n + ( log - message " EXECUTOR - > COMPONENT : " executor - > component ) \n + ( log - message " NIMBUS - TIME : " nimbus - time ) \n - heartbeats - cache ( @ ( : heartbeats - cache nimbus ) storm - id ) ] \n + heartbeats - cache ( @ ( : heartbeats - cache nimbus ) storm - id ) \n + _ ( log - message " EXECUTOR - START - TIMES : " executor - start - times ) ] \n - nimbus - time ( - > heartbeats - cache ( get executor ) : nimbus - time ) ] \n + nimbus - time ( - > heartbeats - cache ( get executor ) : nimbus - time ) \n + _ ( log - message " start - time : " start - time ) \n + _ ( log - message " nimbus - time : " nimbus - time ) ] \n + _ ( update - heartbeats ! nimbus tid all - executors assignment ) \n + _ ( log - message " ALL - EXECUTORS : " all - executors ) \n + _ ( log - message " ALIVE - EXECUTORS : " all - executors ) \n + _ ( log - message " DEAD - EXE : " dead - executors ) \n + ( log - message " RRRRRRRRRRRRRRRRRRRRRR " ) \n src \ clj \ backtype \ storm \ testing . clj \n - ( fn [ nimbus existing - assignments topologies ] \n + ( fn [ nimbus existing - assignments topologies scratch - topology - id ] \n
project . clj \n - ] \n + ] \n + : plugins [ [ lein - junit " 1 . 0 . 0 " ] ] \n + : junit [ [ " target / classes " ] ] \n
android \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ map \ MapFragment . java \n + / * * \n + * Indicates if the venue is active and its markers and floor plan is being displayed . Set to \n + * false by default , as the venue marker is shown first . \n + * / \n + private boolean mVenueIsActive = false ; \n + \n + \n - if ( cameraPosition . zoom < MAX _ RENDERED _ ZOOMLEVEL | | ! isAtVenue ( ) ) { \n - onDefocusVenue ( ) ; \n - } else { \n + boolean isVenueInFocus = cameraPosition . zoom > = MAX _ RENDERED _ ZOOMLEVEL & & isVenueVisible ( ) ; \n + \n + / / Check if the camera is focused on the venue . Trigger a callback if the state has changed . \n + if ( isVenueInFocus & & ! mVenueIsActive ) { \n + mVenueIsActive = true ; \n + } else if ( ! isVenueInFocus & & mVenueIsActive ) { \n + onDefocusVenue ( ) ; \n + mVenueIsActive = false ; \n - * @ see # isAtVenue ( ) \n + * @ see # isVenueVisible ( ) \n - if ( isAtVenue ( ) ) { \n + if ( isVenueVisible ( ) ) { \n - public boolean isAtVenue ( ) { \n + public boolean isVenueVisible ( ) { \n
android \ src \ main \ res \ raw \ bootstrap _ data . json \n - " lat " : 37 . 423819 , \n - " lng " : - 122 . 079771 , \n + " lat " : 37 . 423868 , \n + " lng " : - 122 . 079754 , \n - " lat " : 37 . 423926 , \n - " lng " : - 122 . 078656 , \n + " lat " : 37 . 42382 , \n + " lng " : - 122 . 078723 , \n - " lat " : 37 . 425637 , \n - " lng " : - 122 . 079111 , \n + " lat " : 37 . 425685 , \n + " lng " : - 122 . 07909 , \n
ReactAndroid \ src \ main \ java \ com \ facebook \ hermes \ reactexecutor \ HermesExecutor . java \n - super ( \n - config = = null \n - ? initHybridDefaultConfig ( ) \n - : initHybrid ( config . heapSizeMB , config . es6Proxy ) ) ; \n + super ( config = = null ? initHybridDefaultConfig ( ) : initHybrid ( config . heapSizeMB ) ) ; \n - private static native HybridData initHybrid ( long heapSizeMB , boolean es6Proxy ) ; \n + private static native HybridData initHybrid ( long heapSizeMB ) ; \n ReactAndroid \ src \ main \ java \ com \ facebook \ hermes \ reactexecutor \ OnLoad . cpp \n - static : : hermes : : vm : : RuntimeConfig makeRuntimeConfig ( \n - jlong heapSizeMB , \n - bool es6Proxy ) { \n + static : : hermes : : vm : : RuntimeConfig makeRuntimeConfig ( jlong heapSizeMB ) { \n - . withES6Proxy ( es6Proxy ) \n - static jni : : local _ ref < jhybriddata > \n - initHybrid ( jni : : alias _ ref < jclass > , jlong heapSizeMB , bool es6Proxy ) { \n + static jni : : local _ ref < jhybriddata > initHybrid ( \n + jni : : alias _ ref < jclass > , \n + jlong heapSizeMB ) { \n - auto runtimeConfig = makeRuntimeConfig ( heapSizeMB , es6Proxy ) ; \n + auto runtimeConfig = makeRuntimeConfig ( heapSizeMB ) ; \n ReactAndroid \ src \ main \ java \ com \ facebook \ hermes \ reactexecutor \ RuntimeConfig . java \n - public boolean es6Proxy ; \n
ReactAndroid \ Android - prebuilt . mk \n - REACT _ ANDROID _ DIR : = $ ( LOCAL _ PATH ) \n - # TODO : Find a better way without pointing to ReactAndroid / build dir . \n - REACT _ ANDROID _ BUILD _ DIR : = $ ( REACT _ ANDROID _ DIR ) / build \n - \n packages \ rn - tester \ android \ app \ build . gradle \n - " REACT _ ANDROID _ DIR = $ reactAndroidProjectDir " \n + " REACT _ ANDROID _ DIR = $ reactAndroidProjectDir " , \n + " REACT _ ANDROID _ BUILD _ DIR = $ reactAndroidBuildDir " \n
keystore \ java \ android \ security \ keystore2 \ KeyStoreCryptoOperationUtils . java \n + case KeymasterDefs . KM _ ERROR _ KEY _ USER _ NOT _ AUTHENTICATED : \n
keystore \ java \ android \ security \ keystore2 \ AndroidKeyStoreProvider . java \n - if ( e . getErrorCode ( ) = = ResponseCode . KEY _ PERMANENTLY _ INVALIDATED ) { \n - throw new KeyPermanentlyInvalidatedException ( \n - " User changed or deleted their auth credentials " , \n - e ) ; \n - } else { \n - throw ( UnrecoverableKeyException ) \n - new UnrecoverableKeyException ( " Failed to obtain information about key " ) \n - . initCause ( e ) ; \n + switch ( e . getErrorCode ( ) ) { \n + case ResponseCode . KEY _ NOT _ FOUND : \n + return null ; \n + case ResponseCode . KEY _ PERMANENTLY _ INVALIDATED : \n + throw new KeyPermanentlyInvalidatedException ( \n + " User changed or deleted their auth credentials " , \n + e ) ; \n + default : \n + throw ( UnrecoverableKeyException ) \n + new UnrecoverableKeyException ( " Failed to obtain information about key " ) \n + . initCause ( e ) ; \n
build . gradle \n - robolectric : ' org . robolectric : robolectric : 3 . 4 ' , \n + robolectric : ' org . robolectric : robolectric : 3 . 4 . 2 ' , \n
. travis . yml \n - tools \n - platform - tools \n - - build - tools - 25 . 0 . 2 \n - - extra - android - m2repository \n - - android - 25 \n + - build - tools - 26 . 0 . 1 \n + - android - 26 \n - oraclejdk8 \n gradle \ dependencies . gradle \n - compileSdkVersion = 25 \n - buildToolsVersion = ' 25 . 0 . 2 ' \n + compileSdkVersion = 26 \n + buildToolsVersion = ' 26 . 0 . 1 ' \n - targetSdkVersion = 25 \n + targetSdkVersion = 26 \n
storm - console - logging \ project . clj \n + : target - path " target " \n storm - core \ project . clj \n + : target - path " target " \n storm - lib \ project . clj \n + : target - path " target " \n storm - netty \ project . clj \n + : target - path " target " \n
project . clj \n - ( defproject storm / storm " 0 . 9 . 0 - wip13 " \n + ( defproject storm / storm " 0 . 9 . 0 - wip14 " \n
server \ src \ main \ java \ org \ elasticsearch \ cluster \ node \ DiscoveryNode . java \n - if ( in . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( in . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 10 _ 0 ) ) { \n - if ( out . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( out . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 10 _ 0 ) ) { \n
buildSrc \ build . gradle \n - api " org . elasticsearch : jna : 5 . 5 . 0 " \n + api " org . elasticsearch : jna : 5 . 7 . 0 - 1 " \n buildSrc \ version . properties \n - jna = 5 . 5 . 0 \n + jna = 5 . 7 . 0 - 1 \n deleted file \n server \ licenses \ jna - 5 . 5 . 0 . jar . sha1 \n - ade077cbb2618a18bfc6c335413b2b7163d97601 \n new file \n server \ licenses \ jna - 5 . 7 . 0 - 1 . jar . sha1 \n + 8ffc051522e63292eaf757d89353c14e94233988 \n deleted file \n x - pack \ plugin \ sql \ sql - cli \ licenses \ jna - 5 . 5 . 0 . jar . sha1 \n - ade077cbb2618a18bfc6c335413b2b7163d97601 \n new file \n x - pack \ plugin \ sql \ sql - cli \ licenses \ jna - 5 . 7 . 0 - 1 . jar . sha1 \n + 8ffc051522e63292eaf757d89353c14e94233988 \n
x - pack \ plugin \ watcher \ src \ internalClusterTest \ java \ org \ elasticsearch \ xpack \ watcher \ history \ HistoryTemplateIndexActionMappingsTests . java \n + import org . apache . lucene . util . LuceneTestCase . AwaitsFix ; \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 65091 " ) \n
qa \ mixed - cluster \ src \ test \ java \ org \ elasticsearch \ backwards \ IndexingIT . java \n + import static org . hamcrest . Matchers . oneOf ; \n - contains ( " Synced flush is deprecated and will be removed in 8 . 0 . Use flush at _ / flush or / { index } / _ flush instead . " ) ) ; \n + contains ( \n + oneOf ( " Synced flush is deprecated and will be removed in 8 . 0 . Use flush at _ / flush or / { index } / _ flush instead . " , \n + " Synced flush is deprecated and will be removed in 8 . 0 . Use flush at / _ flush or / { index } / _ flush instead . " ) \n + ) ) ; \n test \ framework \ src \ main \ java \ org \ elasticsearch \ test \ rest \ ESRestTestCase . java \n + final List < String > fixedDeprecationMessages = List . of ( \n + " Synced flush is deprecated and will be removed in 8 . 0 . Use flush at / _ flush or / { index } / _ flush instead . " ) ; \n - warningsHandler = warnings - > warnings . equals ( deprecationMessages ) = = false & & warnings . equals ( transitionMessages ) = = false ; \n + warningsHandler = warnings - > warnings . equals ( deprecationMessages ) = = false & & warnings . equals ( transitionMessages ) = = false & & \n + warnings . equals ( fixedDeprecationMessages ) = = false ; \n
core \ java \ android \ view \ OWNERS \n + # Notifications \n + per - file Notification * . java = file : / services / core / java / com / android / server / notification / OWNERS \n + \n
core \ java \ android \ provider \ OWNERS \n + per - file * Settings * = file : / packages / SettingsProvider / OWNERS \n packages \ SettingsProvider \ OWNERS \n + hackbod @ android . com \n
core \ java \ android \ os \ ParcelableHolder . java \n + * < p class = " note " > ParcelableHolder is < strong > not < / strong > thread - safe . < / p > \n + * \n + * ( @ link # setParcelable } and ( @ link # getParcelable } are not thread - safe . \n + * Read a parcelable from ParcelableHolder . \n + * ( @ link # setParcelable } and ( @ link # getParcelable } are not thread - safe . \n
core \ java \ android \ os \ ParcelableHolder . java \n + int dataSize = parcel . readInt ( ) ; \n + if ( dataSize < 0 ) { \n + throw new IllegalArgumentException ( " dataSize from parcel is negative " ) ; \n + } else if ( dataSize = = 0 ) { \n + if ( mParcel ! = null ) { \n + mParcel . recycle ( ) ; \n + mParcel = null ; \n + } \n + return ; \n + } \n - \n - int dataSize = parcel . readInt ( ) ; \n - if ( dataSize < 0 ) { \n - throw new IllegalArgumentException ( " dataSize from parcel is negative " ) ; \n - } \n + if ( mParcelable = = null ) { \n + parcel . writeInt ( 0 ) ; \n + return ; \n + } \n + \n
fbcore \ src \ main \ java \ com \ facebook \ common \ file \ FileUtils . java \n + import javax . annotation . Nullable ; \n - public RenameException ( String message , Throwable innerException ) { \n + public RenameException ( String message , @ Nullable Throwable innerException ) { \n
imagepipeline - base \ src \ main \ java \ com \ facebook \ imageformat \ ImageFormat . java \n - private final String mFileExtension ; \n + private final @ Nullable String mFileExtension ; \n
bridge \ pom . xml \n + < scope > test < / scope > \n decorator \ pom . xml \n + < scope > test < / scope > \n facade \ pom . xml \n + < scope > test < / scope > \n
new file \n model - view - presenter \ src \ test \ java \ com \ iluwatar \ model \ view \ presenter \ AppTest . java \n + package com . iluwatar . model . view . presenter ; \n + \n + import org . junit . Test ; \n + \n + / * * \n + * \n + * Application test \n + * \n + * / \n + public class AppTest { \n + \n + @ Test \n + public void test ( ) { \n + String [ ] args = { } ; \n + App . main ( args ) ; \n + } \n + \n + } \n new file \n model - view - presenter \ src \ test \ java \ com \ iluwatar \ model \ view \ presenter \ FileLoaderTest . java \n + package com . iluwatar . model . view . presenter ; \n + \n + import org . junit . Test ; \n + \n + import java . io . FileNotFoundException ; \n + import java . io . IOException ; \n + \n + import static org . junit . Assert . * ; \n + \n + / * * \n + * Date : 12 / 21 / 15 - 12 : 12 PM \n + * \n + * @ author Jeroen Meulemeester \n + * / \n + public class FileLoaderTest { \n + \n + @ Test \n + public void testLoadData ( ) throws Exception { \n + final FileLoader fileLoader = new FileLoader ( ) ; \n + fileLoader . setFileName ( " non - existing - file " ) ; \n + assertNull ( fileLoader . loadData ( ) ) ; \n + } \n + \n + } \n
dubbo - rpc \ dubbo - rpc - dubbo \ src \ test \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ telnet \ ListTelnetHandlerTest . java \n - given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 20885 / demo " ) ) ; \n + given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 30005 / demo " ) ) ; \n - given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 20885 / demo " ) ) ; \n + given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 30006 / demo " ) ) ; \n - given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 20885 / demo " ) ) ; \n + given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 30007 / demo " ) ) ; \n - given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 20885 / demo " ) ) ; \n + given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 30008 / demo " ) ) ; \n
. travis . yml \n - oraclejdk11 \n - - oraclejdk10 \n - - oraclejdk9 \n - oraclejdk8 \n
okhttp \ src \ main \ kotlin \ okhttp3 \ Interceptor . kt \n + * \n + * Implementations of this interface throw [ IOException ] to signal connectivity failures . This \n + * includes both natural exceptions such as unreachable servers , as well as synthetic exceptions \n + * when responses are of an unexpected type or cannot be decoded . \n + * \n + * Other exception types cancel the current call : \n + * \n + * * For synchronous calls made with [ Call . execute ] , the exception is propagated to the caller . \n + * \n + * * For asynchronous calls made with [ Call . enqueue ] , an [ IOException ] is propagated to the caller \n + * indicating that the call was canceled . The interceptor ' s exception is delivered to the current \n + * thread ' s [ uncaught exception handler ] [ Thread . UncaughtExceptionHandler ] . By default this \n + * crashes the application on Android and prints a stacktrace on the JVM . ( Crash reporting \n + * libraries may customize this behavior . ) \n + * \n + * A good way to signal a failure is with a synthetic HTTP response : \n + * \n + * ` ` ` \n + * @ Throws ( IOException : : class ) \n + * override fun intercept ( chain : Interceptor . Chain ) : Response { \n + * if ( myConfig . isInvalid ( ) ) { \n + * return Response . Builder ( ) \n + * . request ( chain . request ( ) ) \n + * . protocol ( Protocol . HTTP _ 1 _ 1 ) \n + * . code ( 400 ) \n + * . message ( " client config invalid " ) \n + * . body ( " client config invalid " . toResponseBody ( null ) ) \n + * . build ( ) \n + * } \n + * \n + * return chain . proceed ( chain . request ( ) ) \n + * } \n + * ` ` ` \n
docs \ security . md \n - | 3 . 14 . x | Until 2020 - 06 - 30 | | \n
CHANGELOG . md \n + # # Version 4 . 4 . 1 \n + \n + _ 2020 - 03 - 08 _ \n + \n + * Fix : Don ' t reuse a connection on redirect if certs match but DNS does not . For better \n + locality and performance OkHttp attempts to use the same pooled connection across redirects and \n + follow - ups . It independently shares connections when the IP addresses and certificates match , \n + even if the host names do not . In 4 . 4 . 0 we introduced a regression where we shared a connection \n + when certificates matched but the DNS addresses did not . This would only occur when following a \n + redirect from one hostname to another , and where both hosts had common certificates . \n + \n + * Fix : Don ' t fail on a redirect when a client has configured a ' trust everything ' trust manager . \n + Typically this would cause certain redirects to fail in debug and development configurations . \n + \n + \n
okhttp \ src \ test \ java \ okhttp3 \ CallTest . java \n + / * * \n + * We had a bug where OkHttp would crash if HTTP proxies returned a truncated response . \n + * https : / / github . com / square / okhttp / issues / 5727 \n + * / \n + @ Test public void proxyUpgradeFailsWithTruncatedResponse ( ) throws Exception { \n + server . enqueue ( new MockResponse ( ) \n + . setBody ( " abc " ) \n + . setHeader ( " Content - Length " , " 5 " ) \n + . setSocketPolicy ( SocketPolicy . DISCONNECT _ AT _ END ) ) ; \n + \n + RecordingHostnameVerifier hostnameVerifier = new RecordingHostnameVerifier ( ) ; \n + client = client . newBuilder ( ) \n + . sslSocketFactory ( \n + handshakeCertificates . sslSocketFactory ( ) , handshakeCertificates . trustManager ( ) ) \n + . proxy ( server . toProxyAddress ( ) ) \n + . hostnameVerifier ( hostnameVerifier ) \n + . build ( ) ; \n + \n + Request request = new Request . Builder ( ) \n + . url ( " https : / / android . com / foo " ) \n + . build ( ) ; \n + try { \n + client . newCall ( request ) . execute ( ) ; \n + fail ( ) ; \n + } catch ( IOException expected ) { \n + assertThat ( expected ) . hasMessage ( " unexpected end of stream " ) ; \n + } \n + } \n + \n
React \ Fabric \ Mounting \ ComponentViews \ Text \ RCTParagraphComponentAccessibilityProvider . mm \n + if ( ! [ value isEqualToString : @ " button " ] & & ! [ value isEqualToString : @ " link " ] ) { \n + return ; \n + } \n
ReactCommon \ fabric \ components \ text \ rawtext \ RawTextProps . h \n - const std : : string text { } ; \n + std : : string text { } ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ PlanOptimizers . java \n - builder . add ( new ApplyConnectorOptimization ( planOptimizerManager . getOptimizers ( ) ) ) ; \n + / / Pass a supplier so that we pickup connector optimizers that are installed later \n + builder . add ( new ApplyConnectorOptimization ( planOptimizerManager : : getOptimizers ) ) ; \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ ApplyConnectorOptimization . java \n + import com . google . common . base . Supplier ; \n - private final Map < ConnectorId , Set < ConnectorPlanOptimizer > > connectorOptimizers ; \n + private final Supplier < Map < ConnectorId , Set < ConnectorPlanOptimizer > > > connectorOptimizersSupplier ; \n - public ApplyConnectorOptimization ( Map < ConnectorId , Set < ConnectorPlanOptimizer > > connectorOptimizers ) \n + public ApplyConnectorOptimization ( Supplier < Map < ConnectorId , Set < ConnectorPlanOptimizer > > > connectorOptimizersSupplier ) \n - this . connectorOptimizers = requireNonNull ( connectorOptimizers , " connectorOptimizers is null " ) ; \n + this . connectorOptimizersSupplier = requireNonNull ( connectorOptimizersSupplier , " connectorOptimizersSupplier is null " ) ; \n + Map < ConnectorId , Set < ConnectorPlanOptimizer > > connectorOptimizers = connectorOptimizersSupplier . get ( ) ; \n presto - main \ src \ test \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ TestConnectorOptimization . java \n - ApplyConnectorOptimization optimizer = new ApplyConnectorOptimization ( optimizers ) ; \n + ApplyConnectorOptimization optimizer = new ApplyConnectorOptimization ( ( ) - > optimizers ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ connector \ ConnectorManager . java \n - public ConnectorPlanOptimizerManager getConnectorPlanOptimizerManager ( ) \n - { \n - return connectorPlanOptimizerManager ; \n - } \n - \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ PlanOptimizers . java \n - import com . facebook . presto . connector . ConnectorManager ; \n - ConnectorManager connectorManager , \n + ConnectorPlanOptimizerManager planOptimizerManager , \n - connectorManager . getConnectorPlanOptimizerManager ( ) , \n + planOptimizerManager , \n
x - pack \ plugin \ async - search \ src \ internalClusterTest \ java \ org \ elasticsearch \ xpack \ search \ AsyncSearchActionIT . java \n - import java . util . Collections ; \n - import java . util . concurrent . CountDownLatch ; \n - \n - @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 63948 " ) \n - public void testRetryVersionConflict ( ) throws Exception { \n - SubmitAsyncSearchRequest request = new SubmitAsyncSearchRequest ( indexName ) ; \n - request . setWaitForCompletionTimeout ( TimeValue . timeValueMinutes ( 10 ) ) ; \n - request . setKeepOnCompletion ( true ) ; \n - AsyncSearchResponse response = submitAsyncSearch ( request ) ; \n - assertNotNull ( response . getSearchResponse ( ) ) ; \n - assertFalse ( response . isRunning ( ) ) ; \n - \n - List < Thread > threads = new ArrayList < > ( ) ; \n - CountDownLatch latch = new CountDownLatch ( 1 ) ; \n - List < Exception > exceptions = Collections . synchronizedList ( new ArrayList < > ( ) ) ; \n - for ( int i = 0 ; i < 2 ; i + + ) { \n - Runnable runnable = ( ) - > { \n - for ( int j = 0 ; j < 10 ; j + + ) { \n - try { \n - latch . await ( ) ; \n - getAsyncSearch ( response . getId ( ) , TimeValue . timeValueMinutes ( 10 ) ) ; \n - } catch ( Exception exc ) { \n - exceptions . add ( exc ) ; \n - } \n - } \n - } ; \n - Thread thread = new Thread ( runnable ) ; \n - thread . start ( ) ; \n - threads . add ( thread ) ; \n - } \n - latch . countDown ( ) ; \n - for ( Thread thread : threads ) { \n - thread . join ( ) ; \n - } \n - assertTrue ( exceptions . toString ( ) , exceptions . isEmpty ( ) ) ; \n - } \n
server \ src \ main \ java \ org \ elasticsearch \ search \ aggregations \ bucket \ terms \ StringTermsAggregatorFromFilters . java \n + if ( b . getDocCount ( ) < bucketCountThresholds . getShardMinDocCount ( ) ) { \n + continue ; \n + } \n + if ( b . getDocCount ( ) < bucketCountThresholds . getShardMinDocCount ( ) ) { \n + continue ; \n + } \n server \ src \ test \ java \ org \ elasticsearch \ search \ aggregations \ bucket \ terms \ TermsAggregatorTests . java \n + import java . util . Arrays ; \n + public void testStringShardMinDocCount ( ) throws IOException { \n + MappedFieldType fieldType = new KeywordFieldMapper . KeywordFieldType ( " string " , true , true , null ) ; \n + for ( TermsAggregatorFactory . ExecutionMode executionMode : TermsAggregatorFactory . ExecutionMode . values ( ) ) { \n + TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder ( " _ name " ) \n + . field ( " string " ) \n + . executionHint ( executionMode . toString ( ) ) \n + . size ( 2 ) \n + . minDocCount ( 2 ) \n + . shardMinDocCount ( 2 ) \n + . order ( BucketOrder . key ( true ) ) ; \n + testCase ( aggregationBuilder , new MatchAllDocsQuery ( ) , iw - > { \n + / / force single shard / segment \n + iw . addDocuments ( Arrays . asList ( \n + doc ( fieldType , " a " , " b " ) , \n + doc ( fieldType , " " , " c " , " d " ) , \n + doc ( fieldType , " b " , " d " ) , \n + doc ( fieldType , " b " ) ) ) ; \n + } , ( InternalTerms < ? , ? > result ) - > { \n + assertEquals ( 2 , result . getBuckets ( ) . size ( ) ) ; \n + assertEquals ( " b " , result . getBuckets ( ) . get ( 0 ) . getKeyAsString ( ) ) ; \n + assertEquals ( 3L , result . getBuckets ( ) . get ( 0 ) . getDocCount ( ) ) ; \n + assertEquals ( " d " , result . getBuckets ( ) . get ( 1 ) . getKeyAsString ( ) ) ; \n + assertEquals ( 2L , result . getBuckets ( ) . get ( 1 ) . getDocCount ( ) ) ; \n + } , fieldType ) ; \n + } \n + } \n + \n
compiler \ fir \ checkers \ src \ org \ jetbrains \ kotlin \ fir \ analysis \ checkers \ declaration \ FirConflictingProjectionChecker . kt \n + / / The body of function contract is not fully resolved . \n + if ( declaration . resolvePhase = = FirResolvePhase . CONTRACTS ) { \n + return \n + } \n - / / TODO : remaining implicit types should be resolved as an error type , along with proper error kind , \n - / / e . g . , type mismatch , can ' t infer parameter type , syntax error , etc . \n - val declaration = typeRef . safeAs < FirResolvedTypeRef > ( ) \n - ? . coneTypeSafe < ConeClassLikeType > ( ) \n + val declaration = typeRef . coneTypeSafe < ConeClassLikeType > ( ) \n
idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ fir \ diagnostics \ KtFirDataClassConverters . kt \n + add ( FirErrors . BACKING _ FIELD _ IN _ INTERFACE ) { firDiagnostic - > \n + BackingFieldInInterfaceImpl ( \n + firDiagnostic as FirPsiDiagnostic < * > , \n + token , \n + ) \n + } \n + add ( FirErrors . EXTENSION _ PROPERTY _ WITH _ BACKING _ FIELD ) { firDiagnostic - > \n + ExtensionPropertyWithBackingFieldImpl ( \n + firDiagnostic as FirPsiDiagnostic < * > , \n + token , \n + ) \n + } \n + add ( FirErrors . PROPERTY _ INITIALIZER _ NO _ BACKING _ FIELD ) { firDiagnostic - > \n + PropertyInitializerNoBackingFieldImpl ( \n + firDiagnostic as FirPsiDiagnostic < * > , \n + token , \n + ) \n + } \n idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ fir \ diagnostics \ KtFirDiagnostics . kt \n + abstract class BackingFieldInInterface : KtFirDiagnostic < KtProperty > ( ) { \n + override val diagnosticClass get ( ) = BackingFieldInInterface : : class \n + } \n + \n + abstract class ExtensionPropertyWithBackingField : KtFirDiagnostic < KtExpression > ( ) { \n + override val diagnosticClass get ( ) = ExtensionPropertyWithBackingField : : class \n + } \n + \n + abstract class PropertyInitializerNoBackingField : KtFirDiagnostic < KtExpression > ( ) { \n + override val diagnosticClass get ( ) = PropertyInitializerNoBackingField : : class \n + } \n + \n idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ fir \ diagnostics \ KtFirDiagnosticsImpl . kt \n + internal class BackingFieldInInterfaceImpl ( \n + firDiagnostic : FirPsiDiagnostic < * > , \n + override val token : ValidityToken , \n + ) : KtFirDiagnostic . BackingFieldInInterface ( ) , KtAbstractFirDiagnostic < KtProperty > { \n + override val firDiagnostic : FirPsiDiagnostic < * > by weakRef ( firDiagnostic ) \n + } \n + \n + internal class ExtensionPropertyWithBackingFieldImpl ( \n + firDiagnostic : FirPsiDiagnostic < * > , \n + override val token : ValidityToken , \n + ) : KtFirDiagnostic . ExtensionPropertyWithBackingField ( ) , KtAbstractFirDiagnostic < KtExpression > { \n + override val firDiagnostic : FirPsiDiagnostic < * > by weakRef ( firDiagnostic ) \n + } \n + \n + internal class PropertyInitializerNoBackingFieldImpl ( \n + firDiagnostic : FirPsiDiagnostic < * > , \n + override val token : ValidityToken , \n + ) : KtFirDiagnostic . PropertyInitializerNoBackingField ( ) , KtAbstractFirDiagnostic < KtExpression > { \n + override val firDiagnostic : FirPsiDiagnostic < * > by weakRef ( firDiagnostic ) \n + } \n + \n
. github \ workflows \ release . yml \n - branches : \n - - master \n - - release / 2 . 0 . x \n + tags : \n
. github \ workflows \ release . yml \n + - ' v * ' \n
build . gradle \n - boolean bwc _ tests _ enabled = false \n - String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 69202 " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = true \n + String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n x - pack \ plugin \ core \ src \ main \ java \ org \ elasticsearch \ xpack \ core \ ilm \ RolloverAction . java \n - if ( in . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) & & in . readBoolean ( ) ) { \n + if ( in . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 13 _ 0 ) & & in . readBoolean ( ) ) { \n - if ( out . getVersion ( ) . onOrAfter ( ( Version . V _ 8 _ 0 _ 0 ) ) ) { \n + if ( out . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 13 _ 0 ) ) { \n
build . gradle \n - boolean bwc _ tests _ enabled = false \n - String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 69239 " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = true \n + String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n
photoview \ src \ main \ java \ com \ github \ chrisbanes \ photoview \ PhotoGestureDetector . java \n - if ( null ! = mVelocityTracker ) { \n + if ( mVelocityTracker ! = null ) { \n - if ( null ! = mVelocityTracker ) { \n + if ( mVelocityTracker ! = null ) { \n - if ( null ! = mVelocityTracker ) { \n + if ( mVelocityTracker ! = null ) { \n - if ( null ! = mVelocityTracker ) { \n + if ( mVelocityTracker ! = null ) { \n - if ( null ! = mVelocityTracker ) { \n + if ( mVelocityTracker ! = null ) { \n photoview \ src \ main \ java \ com \ github \ chrisbanes \ photoview \ PhotoViewAttacher . java \n - if ( null ! = mLongClickListener ) { \n + if ( mLongClickListener ! = null ) { \n - if ( null ! = displayRect ) { \n + if ( displayRect ! = null ) { \n - if ( null ! = parent ) { \n + if ( parent ! = null ) { \n - if ( null ! = parent ) { \n + if ( parent ! = null ) { \n - if ( null ! = mScaleChangeListener ) { \n + if ( mScaleChangeListener ! = null ) { \n - ViewParent parent = v . getParent ( ) ; \n + ViewParent parent = v . getParent ( ) ; \n - if ( null ! = rect ) { \n + if ( rect ! = null ) { \n - if ( null ! = mScaleDragDetector ) { \n + if ( mScaleDragDetector ! = null ) { \n - if ( null ! = mGestureDetector & & mGestureDetector . onTouchEvent ( ev ) ) { \n + if ( mGestureDetector ! = null & & mGestureDetector . onTouchEvent ( ev ) ) { \n - if ( null ! = mCurrentFlingRunnable ) { \n + if ( mCurrentFlingRunnable ! = null ) { \n - if ( null ! = d ) { \n + if ( d ! = null ) { \n - if ( null ! = displayRect ) { \n + if ( displayRect ! = null ) { \n - if ( null = = rect ) { \n + if ( rect = = null ) { \n sample \ src \ main \ java \ com \ github \ chrisbanes \ photoview \ sample \ SimpleSampleActivity . java \n - assert null ! = zoomToggle ; \n - \n - if ( null ! = mCurrentToast ) { \n + if ( mCurrentToast ! = null ) { \n
okhttp \ src \ main \ java \ okhttp3 \ Cache . java \n + / * * \n + * Create a cache of at most { @ code maxSize } bytes in { @ code directory } . \n + * / \n + / * * Max size of the cache ( in bytes ) . * / \n
src \ test \ shell \ bazel \ platforms _ test . sh \n - filegroup ( name = ' yolo ' ) \n + # Have to use a rule that doesn ' t require a target platform , or else there will \n + # be a cycle . \n + toolchain _ type ( name = ' yolo ' ) \n
src \ test \ java \ com \ google \ devtools \ build \ lib \ skyframe \ RegisteredExecutionPlatformsFunctionTest . java \n - scratch . file ( " error / BUILD " , " filegroup ( name = ' not _ an _ execution _ platform ' ) " ) ; \n + / / Have to use a rule that doesn ' t require a target platform , or else there will be a cycle . \n + scratch . file ( " error / BUILD " , " toolchain _ type ( name = ' not _ an _ execution _ platform ' ) " ) ; \n src \ test \ java \ com \ google \ devtools \ build \ lib \ skyframe \ ToolchainResolutionFunctionTest . java \n - scratch . file ( " invalid / BUILD " , " filegroup ( name = ' not _ a _ platform ' ) " ) ; \n + / / Have to use a rule that doesn ' t require a target platform , or else there will be a cycle . \n + scratch . file ( " invalid / BUILD " , " toolchain _ type ( name = ' not _ a _ platform ' ) " ) ; \n
build . gradle \n - androidPlugin : ' com . android . tools . build : gradle : 3 . 1 . 3 ' , \n + androidPlugin : ' com . android . tools . build : gradle : 3 . 2 . 0 - beta02 ' , \n - classpath ' com . github . ben - manes : gradle - versions - plugin : 0 . 19 . 0 ' \n + classpath ' com . github . ben - manes : gradle - versions - plugin : 0 . 20 . 0 ' \n gradle \ wrapper \ gradle - wrapper . jar \n Binary files a / gradle / wrapper / gradle - wrapper . jar and b / gradle / wrapper / gradle - wrapper . jar differ \n gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 8 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 8 . 1 - all . zip \n
picasso - pollexor \ src \ main \ java \ com \ squareup \ picasso3 \ pollexor \ PollexorRequestTransformer . java \n - Request . Builder newRequest = request . buildUpon ( ) ; \n + Request . Builder newRequest = request . newBuilder ( ) ; \n picasso \ src \ main \ java \ com \ squareup \ picasso3 \ Request . java \n - public Builder buildUpon ( ) { \n + public Builder newBuilder ( ) { \n picasso \ src \ test \ java \ com \ squareup \ picasso3 \ RequestHandlerTest . java \n - Request copy = data . buildUpon ( ) . build ( ) ; \n + Request copy = data . newBuilder ( ) . build ( ) ; \n
picasso \ src \ main \ java \ com \ squareup \ picasso3 \ Dispatcher . java \n + import android . util . Log ; \n + import static com . squareup . picasso3 . Picasso . TAG ; \n - dispatcher . dispatchNetworkStateChange ( connectivityManager . getActiveNetworkInfo ( ) ) ; \n + NetworkInfo networkInfo = null ; \n + try { \n + networkInfo = connectivityManager . getActiveNetworkInfo ( ) ; \n + } catch ( RuntimeException re ) { \n + Log . w ( TAG , " System UI crashed , ignoring attempt to change network state . " ) ; \n + return ; \n + } \n + if ( networkInfo = = null ) { \n + Log . w ( TAG , " No default network is currently active , ignoring attempt to change " \n + + " network state . " ) ; \n + return ; \n + } \n + dispatcher . dispatchNetworkStateChange ( networkInfo ) ; \n
. travis . yml \n - android : \n - components : \n - # Update tools and then platform - tools explicitly so lint gets an updated database . Can be removed once 3 . 0 is out . \n - - tools \n - - platform - tools \n - - extra - android - m2repository \n - - android - 28 \n - \n - oraclejdk8 \n
spring - webflux \ src \ main \ java \ org \ springframework \ web \ reactive \ socket \ client \ ReactorNettyWebSocketClient . java \n - import org . springframework . web . reactive . socket . adapter . NettyWebSocketSessionSupport ; \n - private Integer maxFramePayloadLength = NettyWebSocketSessionSupport . DEFAULT _ FRAME _ MAX _ SIZE ; \n + private Integer maxFramePayloadLength ; \n - * Constructor that accepts an existing { @ link HttpClient } . \n + * Constructor that accepts an existing { @ link HttpClient } builder \n + * with a default { @ link WebsocketClientSpec . Builder } . \n - * Constructor with an { @ link HttpClient } and a supplier for the \n - * { @ link WebsocketClientSpec . Builder } to use . \n + * Constructor that accepts an existing { @ link HttpClient } builder \n + * and a pre - configured { @ link WebsocketClientSpec . Builder } . \n + * @ deprecated as of 5 . 3 in favor of providing a supplier of \n + * { @ link WebsocketClientSpec . Builder } with a constructor argument . \n + @ Deprecated \n + * @ deprecated as of 5 . 3 in favor of { @ link # getWebsocketClientSpec ( ) } \n + @ Deprecated \n + * @ deprecated as of 5 . 3 in favor of providing a supplier of \n + * { @ link WebsocketClientSpec . Builder } with a constructor argument . \n + @ Deprecated \n + * @ deprecated as of 5 . 3 in favor of { @ link # getWebsocketClientSpec ( ) } \n + @ Deprecated \n spring - webflux \ src \ main \ java \ org \ springframework \ web \ reactive \ socket \ server \ upgrade \ ReactorNettyRequestUpgradeStrategy . java \n - * { @ link WebsocketServerSpec . Builder } wiht a constructor argument . \n + * { @ link WebsocketServerSpec . Builder } with a constructor argument . \n - * { @ link WebsocketServerSpec . Builder } wiht a constructor argument . \n + * { @ link WebsocketServerSpec . Builder } with a constructor argument . \n
spring - boot - project \ spring - boot - autoconfigure \ src \ main \ java \ org \ springframework \ boot \ autoconfigure \ freemarker \ FreeMarkerProperties . java \n - * Whether to prefer file system access for template loading to enables hot detection \n + * Whether to prefer file system access for template loading to enable hot detection \n spring - boot - project \ spring - boot - docs \ src \ docs \ asciidoc \ documentation - overview . adoc \n - Follow the links in the in the { github - wiki } # release - notes [ release notes ] section to find the version that you want to upgrade to . \n + Follow the links in the { github - wiki } # release - notes [ release notes ] section to find the version that you want to upgrade to . \n spring - boot - project \ spring - boot - tools \ spring - boot - gradle - plugin \ src \ test \ java \ org \ springframework \ boot \ gradle \ plugin \ SpringBootPluginTests . java \n - public class SpringBootPluginTests { \n + class SpringBootPluginTests { \n spring - boot - project \ spring - boot - tools \ spring - boot - maven - plugin \ src \ docs \ asciidoc \ integration - tests . adoc \n - < configuration > \n - < jmxPort > 9009 < / jmxPort > \n - < / configuration > \n + < configuration > \n + < jmxPort > 9009 < / jmxPort > \n + < / configuration > \n
guava \ src \ com \ google \ common \ collect \ ImmutableMapKeySet . java \n - import com . google . common . collect . ImmutableSet . Indexed ; \n guava \ src \ com \ google \ common \ collect \ Maps . java \n - import com . google . common . collect . Sets . ImprovedAbstractSet ; \n guava \ src \ com \ google \ common \ collect \ SingletonImmutableSet . java \n - import static com . google . common . base . Preconditions . checkNotNull ; \n - \n guava \ src \ com \ google \ common \ collect \ StandardTable . java \n - import com . google . common . collect . Table . Cell ; \n
guava \ src \ com \ google \ common \ collect \ Maps . java \n - import com . google . common . collect . Maps . IteratorBasedAbstractMap ; \n - import com . google . common . collect . Maps . ViewCachingAbstractMap ; \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ onboarding \ ViewPagerPager . kt \n + if ( viewPager . width < = 0 ) return \n + \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ map \ MapViewBindingAdapters . kt \n - @ BindingAdapter ( value = [ " centerTarget " , " zoomLevel " ] , requireAll = true ) \n - fun cameraTarget ( mapView : MapView , target : LatLng ? , zoomLevel : Float ? ) { \n - if ( target ! = null & & zoomLevel ! = null ) { \n + @ BindingAdapter ( " mapCenter " ) \n + fun mapCenter ( mapView : MapView , target : LatLng ? ) { \n + if ( target ! = null ) { \n - it . animateCamera ( CameraUpdateFactory . newLatLngZoom ( target , zoomLevel ) ) \n + it . animateCamera ( CameraUpdateFactory . newLatLng ( target ) ) \n mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ map \ MapViewModel . kt \n + import android . arch . lifecycle . LiveData \n + import com . google . android . gms . maps . model . LatLng \n + \n + private val _ mapCenter = MutableLiveData < LatLng > ( ) \n + val mapCenter : LiveData < LatLng > \n + get ( ) = _ mapCenter \n + \n + init { \n + _ mapCenter . value = defaultCameraPosition . target \n + } \n mobile \ src \ main \ res \ layout \ fragment _ map . xml \n + app : mapCenter = " @ { viewModel . mapCenter } " \n
mobile \ src \ main \ res \ layout \ fragment _ search . xml \n + android : imeOptions = " actionDone | flagNoExtractUi " \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ search \ SearchViewModel . kt \n + / / Cancel any in - flight searches \n + searchJob ? . cancel ( ) \n + \n - / / The user could be typing or toggling filters in quick succession . Giving the search job \n - / / a slight delay and cancelling it on each call to this method effectively debounces . \n - searchJob ? . cancel ( ) \n + / / The user could be typing or toggling filters rapidly . Giving the search job \n + / / a slight delay and cancelling it on each call to this method effectively debounces . \n
new file \n . lgtm . yml \n + extraction : \n + java : \n + prepare : \n + packages : \n + - " autoconf " \n + - " automake " \n + - " libtool " \n + - " make " \n + - " tar " \n + - " libaio - dev " \n + - " libssl - dev " \n + - " libapr1 - dev " \n + - " lksctp - tools " \n
new file \n . github \ workflows \ gradle - wrapper - validation . yml \n + name : " Validate Gradle Wrapper " \n + on : [ push , pull _ request ] \n + \n + jobs : \n + validation : \n + name : " Validation " \n + runs - on : ubuntu - latest \n + steps : \n + - uses : actions / checkout @ v2 \n + - uses : gradle / wrapper - validation - action @ v1 \n
README . md \n - You can use [ Eclipse ADT ] ( https : / / developer . android . com / sdk / installing / index . html ? pkg = adt ) if you wish , but you need to configure it , since it expects the old project structure and Ant for building . You can even use a plain text editor like Vim , Sublime Text , or Emacs . In that case , you will need to use Gradle and ` adb ` on the command line . If Eclipse ' s integration with Gradle is not working for you , your options are using the command line just to build , or migrating to Android Studio . This is the best option due to ADT plugin was deprecated recently . \n + You could still use [ Eclipse ADT ] ( http : / / developer . android . com / tools / help / adt . html ) if you wish , but you need to configure it , since it expects the old project structure and Ant for building . Be aware that Google now recommends dropping Eclipse in favor of Android Studio : \n + \n + > Important : Support for the Android Developer Tools ( ADT ) in Eclipse has ended , per our [ announcement ] ( http : / / android - developers . blogspot . fi / 2015 / 06 / an - update - on - eclipse - android - developer . html ) . You should migrate your app development projects to Android Studio as soon as possible . For more information on transitioning to Android Studio , see [ Migrating from Eclipse ADT ] ( http : / / developer . android . com / sdk / installing / migrate . html ) . \n + \n + You can even use a plain text editor like Vim , Sublime Text , or Emacs . In that case , you will need to use Gradle and ` adb ` on the command line . If Eclipse ' s integration with Gradle is not working for you , your options are using the command line just to build , or migrating to Android Studio . This is the best option due to ADT plugin was deprecated recently . \n
README . md \n - You could still use [ Eclipse ADT ] ( http : / / developer . android . com / tools / help / adt . html ) if you wish , but you need to configure it , since it expects the old project structure and Ant for building . Be aware that Google now recommends dropping Eclipse in favor of Android Studio : \n + Using [ Eclipse ADT ] ( http : / / developer . android . com / tools / help / adt . html ) for Android development is no longer a good practice . [ Google ended ADT support at the end of 2015 ] ( http : / / android - developers . blogspot . fi / 2015 / 06 / an - update - on - eclipse - android - developer . html ) and urges users to [ migrate to Android Studio ] ( http : / / developer . android . com / sdk / installing / migrate . html ) as soon as possible . You * could * still use Eclipse , but since it expects the old project structure and Ant for building , you need to configure it to work with Gradle , or if that fails , use the command line to build . \n - > Important : Support for the Android Developer Tools ( ADT ) in Eclipse has ended , per our [ announcement ] ( http : / / android - developers . blogspot . fi / 2015 / 06 / an - update - on - eclipse - android - developer . html ) . You should migrate your app development projects to Android Studio as soon as possible . For more information on transitioning to Android Studio , see [ Migrating from Eclipse ADT ] ( http : / / developer . android . com / sdk / installing / migrate . html ) . \n - \n - You can even use a plain text editor like Vim , Sublime Text , or Emacs . In that case , you will need to use Gradle and ` adb ` on the command line . If Eclipse ' s integration with Gradle is not working for you , your options are using the command line just to build , or migrating to Android Studio . This is the best option due to ADT plugin was deprecated recently . \n + You can even use a plain text editor like Vim , Sublime Text , or Emacs . In that case , you will need to use Gradle and ` adb ` on the command line . \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ MainActivity . java \n + import android . app . FragmentTransaction ; \n - private static final String BEACON _ CONGFIG _ FRAGMENT _ TAG = " EditUrlsFragmentTag " ; \n - showFragment ( new NearbyBeaconsFragment ( ) , NEARBY _ BEACONS _ FRAGMENT _ TAG ) ; \n + showFragment ( new NearbyBeaconsFragment ( ) , NEARBY _ BEACONS _ FRAGMENT _ TAG , false ) ; \n - showFragment ( new SettingsFragment ( ) , SETTINGS _ FRAGMENT _ TAG ) ; \n + showFragment ( new SettingsFragment ( ) , SETTINGS _ FRAGMENT _ TAG , true ) ; \n - showFragment ( new AboutFragment ( ) , ABOUT _ FRAGMENT _ TAG ) ; \n + showFragment ( new AboutFragment ( ) , ABOUT _ FRAGMENT _ TAG , true ) ; \n - showFragment ( new BlockedFragment ( ) , BLOCKED _ URLS _ FRAGMENT _ TAG ) ; \n + showFragment ( new BlockedFragment ( ) , BLOCKED _ URLS _ FRAGMENT _ TAG , true ) ; \n - showFragment ( new DemosFragment ( ) , DEMOS _ FRAGMENT _ TAG ) ; \n + showFragment ( new DemosFragment ( ) , DEMOS _ FRAGMENT _ TAG , true ) ; \n - private void showFragment ( Fragment newFragment , String fragmentTag ) { \n - getFragmentManager ( ) . beginTransaction ( ) \n + private void showFragment ( Fragment newFragment , String fragmentTag , boolean addToBackStack ) { \n + FragmentTransaction transaction = getFragmentManager ( ) . beginTransaction ( ) \n - . replace ( R . id . main _ activity _ container , newFragment , fragmentTag ) \n - . addToBackStack ( null ) \n - . commit ( ) ; \n + . replace ( R . id . main _ activity _ container , newFragment , fragmentTag ) ; \n + if ( addToBackStack ) { \n + transaction . addToBackStack ( null ) ; \n + } \n + transaction . commit ( ) ; \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ DemosFragment . java \n + import android . support . v4 . content . ContextCompat ; \n + setBackgroundColor ( v , demo . isDemoStarted ( ) ) ; \n + private void setBackgroundColor ( View view , boolean isStarted ) { \n + if ( isStarted ) { \n + view . setBackgroundColor ( ContextCompat . getColor ( getActivity ( ) , R . color . physical _ web _ logo ) ) ; \n + } else { \n + view . setBackgroundColor ( 0xFFFFFFFF ) ; \n + } \n + } \n + \n + setBackgroundColor ( view , demos . get ( i ) . isDemoStarted ( ) ) ; \n android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ FileBroadcastService . java \n + import android . widget . Toast ; \n + Toast . makeText ( this , R . string . wifi _ direct _ broadcasting _ confirmation , Toast . LENGTH _ SHORT ) \n + . show ( ) ; \n android \ PhysicalWeb \ app \ src \ main \ res \ values \ strings . xml \n + < string name = " wifi _ direct _ broadcasting _ confirmation " > Broadcasting with Wi - Fi Direct < / string > \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ sessiondetail \ SessionDetailFragment . kt \n - sessionDetailViewModel . setSessionId ( requireNotNull ( arguments ) . getString ( EXTRA _ SESSION _ ID ) ) \n + override fun onStart ( ) { \n + super . onStart ( ) \n + Timber . d ( " Loading details for session $ arguments " ) \n + sessionDetailViewModel . setSessionId ( requireNotNull ( arguments ) . getString ( EXTRA _ SESSION _ ID ) ) \n + } \n + \n + override fun onStop ( ) { \n + super . onStop ( ) \n + / / Force a refresh when this screen gets added to a backstack and user comes back to it . \n + sessionDetailViewModel . setSessionId ( null ) \n + } \n + \n mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ sessiondetail \ SessionDetailViewModel . kt \n - private val sessionId = MutableLiveData < SessionId > ( ) \n + private val sessionId = MutableLiveData < SessionId ? > ( ) \n - fun setSessionId ( newSessionId : SessionId ) { \n + fun setSessionId ( newSessionId : SessionId ? ) { \n
shared \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ shared \ fcm \ FcmTokenUpdater . kt \n + \n + / / Write token to / users / < userId > / fcmTokens / < token [ 0 . . TOKEN _ ID _ LENGTH ] / \n + \n - . document ( token . take ( 25 ) ) \n + . document ( token . take ( TOKEN _ ID _ LENGTH ) ) \n + / / Write server timestamp to / users / < userId > / lastUsage \n + \n + val lastUsage = mapOf ( \n + USER _ LAST _ USAGE _ KEY to FieldValue . serverTimestamp ( ) ) \n + \n + firestore \n + . collection ( Companion . USERS _ COLLECTION ) \n + . document ( userId ) \n + . set ( lastUsage , SetOptions . merge ( ) ) . addOnCompleteListener ( { \n + if ( it . isSuccessful ) { \n + Timber . d ( " Last usage timestamp successfully uploaded for user $ userId \ " " ) \n + } else { \n + Timber . e ( " Last usage timestamp : Error uploading for user $ userId " ) \n + } \n + } ) \n + private const val USER _ LAST _ USAGE _ KEY = " lastUsage " \n + private const val TOKEN _ ID _ LENGTH = 25 \n shared \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ shared \ fcm \ FcmTopicSubscriber . kt \n - private const val CONFERENCE _ DATA _ UPDATE _ TOPIC _ KEY = " conference _ data _ sync _ 2018 " \n - private const val REGISTERED _ USER _ TOPIC _ KEY = " registered _ 2018 " \n + private const val CONFERENCE _ DATA _ UPDATE _ TOPIC _ KEY = " CONFERENCE _ DATA _ SYNC _ 2018 " \n + private const val REGISTERED _ USER _ TOPIC _ KEY = " REGISTERED _ 2018 " \n shared \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ shared \ fcm \ IoschedFirebaseMessagingService . kt \n - private const val TRIGGER _ EVENT _ DATA _ SYNC = " sync _ event _ data " \n + private const val TRIGGER _ EVENT _ DATA _ SYNC = " SYNC _ EVENT _ DATA " \n
src \ main \ java \ io \ vertx \ core \ http \ HttpClientResponse . java \n + / * * \n + * @ return the corresponding request \n + * / \n + @ CacheReturn \n + HttpClientRequest request ( ) ; \n src \ main \ java \ io \ vertx \ core \ http \ impl \ HttpClientRequestImpl . java \n + @ Override \n + public HttpClientRequest request ( ) { \n + return resp . request ( ) ; \n + } \n + \n src \ main \ java \ io \ vertx \ core \ http \ impl \ HttpClientResponseImpl . java \n - HttpClientRequestBase request ( ) { \n + @ Override \n + public HttpClientRequestBase request ( ) { \n
src \ main \ java \ io \ vertx \ core \ json \ JsonObject . java \n - return mergeIn ( other , Integer . MAX _ VALUE ) ; \n + return mergeIn ( other , deep ? Integer . MAX _ VALUE : 1 ) ; \n src \ test \ java \ io \ vertx \ test \ core \ JsonObjectTest . java \n + @ Test \n + public void testMergeInFlat ( ) { \n + JsonObject obj1 = new JsonObject ( " { \ " foo \ " : { \ " bar \ " : \ " flurb \ " , \ " eek \ " : 32 } } " ) ; \n + JsonObject obj2 = new JsonObject ( " { \ " foo \ " : { \ " bar \ " : \ " eek \ " } } " ) ; \n + obj1 . mergeIn ( obj2 , false ) ; \n + assertEquals ( 1 , obj1 . size ( ) ) ; \n + assertEquals ( 1 , obj1 . getJsonObject ( " foo " ) . size ( ) ) ; \n + assertEquals ( " eek " , obj1 . getJsonObject ( " foo " ) . getString ( " bar " ) ) ; \n + } \n + \n
new file \n callback \ src \ main \ java \ com \ iluwatar \ callback \ LambdasApp . java \n + package com . iluwatar . callback ; \n + \n + / * * \n + * \n + * This example generates the exact same output as { @ link App } however the callback has been \n + * defined as a Lambdas expression . \n + * \n + * / \n + public class LambdasApp { \n + \n + / * * \n + * Program entry point \n + * / \n + public static void main ( String [ ] args ) { \n + Task task = new SimpleTask ( ) ; \n + Callback c = ( ) - > System . out . println ( " I ' m done now . " ) ; \n + task . executeWith ( c ) ; \n + } \n + } \n callback \ src \ test \ java \ com \ iluwatar \ callback \ AppTest . java \n + \n + @ Test \n + public void testWithLambdasExample ( ) { \n + Callback callback = ( ) - > callingCount + + ; \n + \n + Task task = new SimpleTask ( ) ; \n + \n + assertEquals ( " Initial calling count of 0 " , new Integer ( 0 ) , callingCount ) ; \n + \n + task . executeWith ( callback ) ; \n + \n + assertEquals ( " Callback called once " , new Integer ( 1 ) , callingCount ) ; \n + \n + task . executeWith ( callback ) ; \n + \n + assertEquals ( " Callback called twice " , new Integer ( 2 ) , callingCount ) ; \n + \n + } \n
new file \n feature - toggle \ pom . xml \n + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > \n + < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " \n + xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " \n + xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / xsd / maven - 4 . 0 . 0 . xsd " > \n + < parent > \n + < artifactId > java - design - patterns < / artifactId > \n + < groupId > com . iluwatar < / groupId > \n + < version > 1 . 10 . 0 - SNAPSHOT < / version > \n + < / parent > \n + < modelVersion > 4 . 0 . 0 < / modelVersion > \n + \n + < artifactId > feature - toggle < / artifactId > \n + \n + \n + < / project > \n
stetho \ src \ main \ java \ com \ facebook \ stetho \ inspector \ network \ NetworkEventReporterImpl . java \n + params . type = Page . ResourceType . OTHER ; \n - } \n + } \n
stetho \ src \ main \ java \ com \ facebook \ stetho \ inspector \ network \ NetworkEventReporterImpl . java \n + \n + / / Type is now required as of at least WebKit Inspector rev @ 188492 . If you don ' t send \n + / / it , Chrome will refuse to draw the row in the Network tab until the response is \n + / / received ( providing the type ) . This delay is very noticable on slow networks . \n + \n + failedParams . type = Page . ResourceType . OTHER ; \n stetho \ src \ main \ java \ com \ facebook \ stetho \ inspector \ protocol \ module \ Network . java \n + \n + / / Chrome introduced this undocumented new addition that , if not sent , will cause the row \n + / / to be removed from the UI and raise a JavaScript exception in the console . This is \n + / / clearly an upstream bug that needs to be fixed , though we can work around it by \n + / / providing this new undocumented field . \n + @ JsonProperty \n + public Page . ResourceType type ; \n
gradle . properties \n - VERSION _ NAME = 1 . 3 . 1 \n + VERSION _ NAME = 1 . 3 . 2 - SNAPSHOT \n
stetho - sample \ src \ main \ java \ com \ facebook \ stetho \ sample \ IRCConnectActivity . java \n - mIRCNickname . setText ( " Guest " + ( new Random ( ) . nextInt ( 9999 ) + 1 ) ) ; \n + mIRCNickname . setText ( " stetho " + ( new Random ( ) . nextInt ( 9999 ) + 1 ) ) ; \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ fabric \ mounting \ SurfaceMountingManager . java \n + ViewParent viewParent = view . getParent ( ) ; \n + if ( viewParent ! = null ) { \n + int actualParentId = \n + viewParent instanceof ViewGroup ? ( ( ViewGroup ) viewParent ) . getId ( ) : View . NO _ ID ; \n + ReactSoftException . logSoftException ( \n + TAG , \n + new IllegalStateException ( \n + " addViewAt : cannot insert view [ " \n + + tag \n + + " ] into parent [ " \n + + parentTag \n + + " ] : View already has a parent : [ " \n + + actualParentId \n + + " ] " \n + + viewParent . getClass ( ) . getSimpleName ( ) ) ) ; \n + } \n + \n
ReactCommon \ react \ renderer \ animations \ LayoutAnimationKeyFrameManager . cpp \n - ShadowViewMutationList const & mutations , \n - bool deletesOnly ) const { \n + ShadowViewMutationList const & mutations ) const { \n - if ( deletesOnly & & mutation . type ! = ShadowViewMutation : : Type : : Delete ) { \n - continue ; \n - } \n - \n - bool conflicting = animatedKeyFrame . tag = = baselineShadowView . tag | | \n - ( ( mutation . type = = ShadowViewMutation : : Type : : Delete | | \n - mutation . type = = ShadowViewMutation : : Type : : Create ) & & \n - animatedKeyFrame . parentView . tag = = baselineShadowView . tag ) ; \n + bool conflicting = animatedKeyFrame . tag = = baselineShadowView . tag ; \n ReactCommon \ react \ renderer \ animations \ LayoutAnimationKeyFrameManager . h \n - ShadowViewMutationList const & mutations , \n - bool deletesOnly = false ) const ; \n + ShadowViewMutationList const & mutations ) const ; \n
animated - base \ src \ test \ java \ com \ facebook \ imagepipeline \ animated \ impl \ AnimatedDrawableBackendImplTest . java \n - @ PrepareForTest ( { Bitmap . class , Rect . class , Canvas . class } ) \n + @ PrepareForTest ( { Bitmap . class , Canvas . class } ) \n
ReactAndroid \ src \ androidTest \ java \ com \ facebook \ react \ testing \ BUCK \n - load ( " / / tools / build _ defs / oss : rn _ defs . bzl " , " react _ native _ dep " , " react _ native _ integration _ tests _ target " , " react _ native _ target " , " rn _ android _ library " ) \n + load ( " / / tools / build _ defs / oss : rn _ defs . bzl " , " react _ native _ android _ toplevel _ dep " , " react _ native _ dep " , " react _ native _ integration _ tests _ target " , " react _ native _ target " , " rn _ android _ library " ) \n - react _ native _ dep ( " third - party / java / mockito : mockito " ) , \n + react _ native _ android _ toplevel _ dep ( " third - party / java / mockito2 : mockito2 " ) , \n
src \ jvm \ clojure \ lang \ LazySeq . java \n - return Util . hash ( seq ( ) ) ; \n + return Util . hash ( s ) ; \n
src \ jvm \ clojure \ lang \ LispReader . java \n + final static private Object READ _ STARTED = new Object ( ) ; \n - Object result = null ; \n + Object result = READ _ STARTED ; \n - if ( result = = null ) { \n + if ( result = = READ _ STARTED ) { \n - if ( result = = null ) / / no features matched \n + if ( result = = READ _ STARTED ) / / no features matched \n test \ clojure \ test _ clojure \ reader . cljc \n - ( is ( = 1 ( read - string opts " # ? ( : cljs { : a # _ : b : c } : clj 1 ) " ) ) ) ) ) ) \n + ( is ( = 1 ( read - string opts " # ? ( : cljs { : a # _ : b : c } : clj 1 ) " ) ) ) ) ) \n + ( testing " nil expressions " \n + ( is ( nil ? # ? ( : default nil ) ) ) \n + ( is ( nil ? # ? ( : foo : bar : clj nil ) ) ) \n + ( is ( nil ? # ? ( : clj nil : foo : bar ) ) ) \n + ( is ( nil ? # ? ( : foo : bar : default nil ) ) ) ) ) \n
spring - web \ src \ main \ java \ org \ springframework \ http \ ResponseEntity . java \n - * Copyright 2002 - 2020 the original author or authors . \n + * Copyright 2002 - 2021 the original author or authors . \n - * A shortcut for creating a { @ code ResponseEntity } with the given body and \n - * the status set to { @ linkplain HttpStatus # OK OK } . \n + * A shortcut for creating a { @ code ResponseEntity } with the given body \n + * and the status set to { @ linkplain HttpStatus # OK OK } . \n + * @ param body the body of the response entity ( possibly empty ) \n
build . gradle \n - mavenBom " org . eclipse . jetty : jetty - bom : 9 . 4 . 36 . v20210114 " \n + mavenBom " org . eclipse . jetty : jetty - bom : 9 . 4 . 37 . v20210219 " \n - dependency " com . github . ben - manes . caffeine : caffeine : 2 . 8 . 8 " \n + dependency " com . github . ben - manes . caffeine : caffeine : 2 . 9 . 0 " \n - dependencySet ( group : ' org . mockito ' , version : ' 3 . 7 . 7 ' ) { \n + dependencySet ( group : ' org . mockito ' , version : ' 3 . 8 . 0 ' ) { \n - toolVersion = " 8 . 39 " \n + toolVersion = " 8 . 40 " \n
spring - tx \ src \ main \ java \ org \ springframework \ transaction \ interceptor \ TransactionInterceptor . java \n - * Copyright 2002 - 2019 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n + import org . springframework . transaction . TransactionManager ; \n - * @ param attributes the transaction attributes in properties format \n + * @ param tas the attribute source to be used to find transaction attributes \n + * @ since 5 . 2 . 5 \n - * @ see # setTransactionAttributes ( java . util . Properties ) \n + * @ see # setTransactionAttributeSource \n - public TransactionInterceptor ( PlatformTransactionManager ptm , Properties attributes ) { \n + public TransactionInterceptor ( TransactionManager ptm , TransactionAttributeSource tas ) { \n - setTransactionAttributes ( attributes ) ; \n + setTransactionAttributeSource ( tas ) ; \n - * @ see # setTransactionAttributeSource ( TransactionAttributeSource ) \n + * @ see # setTransactionAttributeSource \n + * @ deprecated as of 5 . 2 . 5 , in favor of \n + * { @ link # TransactionInterceptor ( TransactionManager , TransactionAttributeSource ) } \n + @ Deprecated \n + / * * \n + * Create a new TransactionInterceptor . \n + * @ param ptm the default transaction manager to perform the actual transaction management \n + * @ param attributes the transaction attributes in properties format \n + * @ see # setTransactionManager \n + * @ see # setTransactionAttributes ( java . util . Properties ) \n + * @ deprecated as of 5 . 2 . 5 , in favor of { @ link # setTransactionAttributes ( Properties ) } \n + * / \n + @ Deprecated \n + public TransactionInterceptor ( PlatformTransactionManager ptm , Properties attributes ) { \n + setTransactionManager ( ptm ) ; \n + setTransactionAttributes ( attributes ) ; \n + } \n + \n
spring - core \ src \ main \ java \ org \ springframework \ core \ annotation \ SynthesizedMergedAnnotationInvocationHandler . java \n - * Copyright 2002 - 2019 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n + if ( classLoader = = interfaceClass . getClassLoader ( ) ) { \n + return true ; \n + } \n
src \ main \ java \ io \ vertx \ core \ json \ JsonArray . java \n - * Make a copy of the JSON array \n + * Deep copy of the JSON array . \n - * @ return a copy \n + * @ return a copy where all elements have been copied recursively \n src \ main \ java \ io \ vertx \ core \ json \ JsonObject . java \n - * Copy the JSON object \n + * Deep copy of this JSON object . \n - * @ return a copy of the object \n + * @ return a copy where all elements have been copied recursively \n
src \ main \ java \ io \ vertx \ core \ file \ impl \ FileResolver . java \n + / / https : / / docs . microsoft . com / en - us / windows / win32 / fileio / naming - a - file # naming - conventions \n - if ( c < 33 ) { \n + if ( c < 32 ) { / / control characters 0 - 31 are invalid , space character 32 is valid \n
modules \ reindex \ src \ yamlRestTest \ resources \ rest - api - spec \ test \ reindex \ 35 _ search _ failures . yml \n - - - \n - - skip : \n - version : " all " \n - reason : " awaits fix of https : / / github . com / elastic / elasticsearch / pull / 64382 " \n - do : \n server \ src \ internalClusterTest \ java \ org \ elasticsearch \ search \ SearchCancellationIT . java \n + import static org . hamcrest . Matchers . containsString ; \n - expectThrows ( Exception . class , ( ) - > { \n + SearchPhaseExecutionException e = expectThrows ( SearchPhaseExecutionException . class , ( ) - > \n - . setAllowPartialSearchResults ( false ) . setSize ( 1000 ) . get ( ) ; \n - } ) ; \n + . setAllowPartialSearchResults ( false ) . setSize ( 1000 ) . get ( ) ) ; \n + assertThat ( e . getMessage ( ) , containsString ( " Partial shards failure " ) ) ; \n server \ src \ main \ java \ org \ elasticsearch \ action \ search \ AbstractSearchAsyncAction . java \n + \n - / * This is the main search phase transition where we move to the next phase . At this point we check if there is \n - * at least one successful operation left and if so we move to the next phase . If not we immediately fail the \n - * search phase as " all shards failed " * / \n - if ( successfulOps . get ( ) = = 0 ) { / / we have 0 successful results that means we shortcut stuff and return a failure \n - final ShardOperationFailedException [ ] shardSearchFailures = ExceptionsHelper . groupBy ( buildShardFailures ( ) ) ; \n + / * This is the main search phase transition where we move to the next phase . If all shards \n + * failed or if there was a failure and partial results are not allowed , then we immediately \n + * fail . Otherwise we continue to the next phase . \n + * / \n + ShardOperationFailedException [ ] shardSearchFailures = buildShardFailures ( ) ; \n + if ( shardSearchFailures . length = = getNumShards ( ) ) { \n + shardSearchFailures = ExceptionsHelper . groupBy ( shardSearchFailures ) ; \n - ShardOperationFailedException [ ] shardSearchFailures = buildShardFailures ( ) ; \n
docs \ reference \ mapping \ params \ store . asciidoc \n - \n - Another situation where it can make sense to make a field stored is for those \n - that don ' t appear in the ` _ source ` field ( such as < < copy - to , ` copy _ to ` fields > > ) . \n
src \ main \ asciidoc \ index . adoc \n + IMPORTANT : In most cases the variant with a ` CompletionStage ` and a ` Context ` is the one you will want to use to respect the Vert . x threading model , \n + since Vert . x ` Future ` are more likely to be used with Vert . x code , libraries and clients . \n + \n
src \ main \ java \ examples \ CompletionStageInteropExamples . java \n + import java . util . UUID ; \n + private Future < String > storeInDb ( String key , String value ) { \n + return Future . succeededFuture ( " Yo " ) ; \n + } \n + \n + . flatMap ( str - > { \n + String key = UUID . randomUUID ( ) . toString ( ) ; \n + return storeInDb ( key , str ) ; \n + } ) \n
src \ main \ java \ io \ vertx \ core \ package - info . java \n - * \n + * \n - * \n + * \n - * vertx - ha \n + * vertx bare \n
src \ main \ java \ examples \ NetExamples . java \n - ar . result ( ) . handler ( System . out : : println ) ; \n + ar . result ( ) . handler ( buffer - > System . out . println ( buffer ) ) ; \n
pom . xml \n - < version > 4 . 0 . 1 < / version > \n + < version > 4 . 0 . 2 - SNAPSHOT < / version > \n - < stack . version > 4 . 0 . 1 < / stack . version > \n + < stack . version > 4 . 0 . 2 - SNAPSHOT < / stack . version > \n
src \ main \ java \ io \ vertx \ core \ http \ HttpServerRequest . java \n + import io . vertx . core . Context ; \n + / * * \n + * @ return the Vert . x context associated with this server request \n + * / \n + Context context ( ) ; \n + \n src \ main \ java \ io \ vertx \ core \ http \ impl \ Http1xServerRequest . java \n + import io . vertx . core . Context ; \n + @ Override \n + public Context context ( ) { \n + return context ; \n + } \n + \n src \ main \ java \ io \ vertx \ core \ http \ impl \ Http2ServerRequestImpl . java \n + import io . vertx . core . Context ; \n + @ Override \n + public Context context ( ) { \n + return context ; \n + } \n + \n src \ test \ java \ io \ vertx \ core \ http \ HttpTest . java \n + assertSame ( req . context ( ) , Vertx . currentContext ( ) ) ; \n
. travis . yml \n - openjdk8 \n - - oraclejdk8 \n - - openjdk9 \n - - openjdk10 \n - openjdk11 \n - rm ~ / . m2 / settings . xml | | true \n
. travis _ after _ success . sh \n - if [ [ " $ { TRAVIS _ JDK _ VERSION } " ! = " oraclejdk8 " ] ] ; then \n + if [ [ " $ { TRAVIS _ JDK _ VERSION } " ! = " openjdk8 " ] ] ; then \n
gradle \ release . gradle \n + task uploadMavenCentral ( dependsOn : subprojects . tasks . uploadMavenCentral ) \n
build . gradle \n - repositories { mavenRepo url : ' http : / / jcenter . bintray . com ' } \n + repositories { \n + mavenLocal ( ) \n + maven { url ' http : / / jcenter . bintray . com ' } \n + } \n - \n gradle \ buildscript . gradle \n - classpath ' nl . javadude . gradle . plugins : license - gradle - plugin : 0 . 6 . 0 ' \n + classpath ' nl . javadude . gradle . plugins : license - gradle - plugin : 0 . 6 . 1 ' \n gradle \ license . gradle \n + skipExistingHeaders true \n
samples \ scrollperf \ build . gradle \n + noNativeCode { \n + } \n + noNativeCodeImplementation ( project ( ' : static - webp ' ) ) { \n + exclude group : ' com . facebook . soloader ' , module : ' soloader ' \n + exclude module : ' native - filters ' \n + exclude module : ' imagepipeline - native ' \n + exclude module : ' nativememory ' \n + exclude module : ' native - imagetranscoder ' \n + } \n + noNativeCodeImplementation ( project ( ' : drawee - backends : drawee - pipeline ' ) ) { \n + exclude group : ' com . facebook . soloader ' , module : ' soloader ' \n + exclude module : ' native - filters ' \n + exclude module : ' imagepipeline - native ' \n + exclude module : ' nativememory ' \n + exclude module : ' native - imagetranscoder ' \n + } \n + \n samples \ scrollperf \ src \ main \ java \ com \ facebook \ samples \ scrollperf \ ScrollPerfApplication . java \n + import com . facebook . imagepipeline . core . MemoryChunkType ; \n - Fresco . initialize ( this , imagePipelineConfigBuilder . build ( ) , draweeConfig ) ; \n + if ( BuildConfig . FLAVOR = = " noNativeCode " ) { \n + imagePipelineConfigBuilder . setMemoryChunkType ( MemoryChunkType . BUFFER _ MEMORY ) ; \n + Fresco . initialize ( this , imagePipelineConfigBuilder . build ( ) , draweeConfig , false ) ; \n + } else { \n + Fresco . initialize ( this , imagePipelineConfigBuilder . build ( ) , draweeConfig , true ) ; \n + } \n vito \ core \ build . gradle \n + testImplementation project ( ' : imagepipeline - base - test ' ) \n
drawee - backends \ drawee - pipeline \ src \ main \ java \ com \ facebook \ drawee \ backends \ pipeline \ Fresco . java \n + import com . facebook . imagepipeline . core . NativeCodeSetup ; \n - / * * Initializes Fresco with the specified config . * / \n + / * * Initializes Fresco with the specified config and native code enabled . * / \n + initialize ( context , imagePipelineConfig , draweeConfig , true ) ; \n + } \n + \n + / * * Initializes Fresco with the specified config . * / \n + public static void initialize ( \n + Context context , \n + @ Nullable ImagePipelineConfig imagePipelineConfig , \n + @ Nullable DraweeConfig draweeConfig , \n + boolean useNativeCode ) { \n + \n + NativeCodeSetup . setUseNativeCode ( useNativeCode ) ; \n + \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ transcoder \ MultiImageTranscoderFactory . java \n + import com . facebook . imagepipeline . core . NativeCodeSetup ; \n - if ( imageTranscoder = = null ) { \n + if ( imageTranscoder = = null & & NativeCodeSetup . getUseNativeCode ( ) ) { \n
packages \ rn - tester \ js \ examples \ ScrollView \ ScrollViewExample . js \n + import type { RNTesterExampleModuleItem } from ' . . / . . / types / RNTesterTypes ' ; \n - exports . examples = [ \n + exports . examples = ( [ \n + name : ' scrollTo ' , \n - style = { styles . scrollView } > \n + style = { styles . scrollView } \n + testID = " scroll _ vertical " > \n + testID = " scroll _ to _ top _ button " \n + testID = " scroll _ to _ bottom _ button " \n + testID = " flash _ scroll _ indicators _ button " \n - ] ; \n + ] : Array < RNTesterExampleModuleItem > ) ; \n + \n - const Button = ( { label , onPress } ) = > ( \n - < TouchableOpacity style = { styles . button } onPress = { onPress } > \n - < Text > { label } < / Text > \n + const Button = ( props : { \n + label : string , \n + onPress : ( ) = > void , \n + testID ? : string , \n + } ) = > ( \n + < TouchableOpacity \n + style = { styles . button } \n + onPress = { props . onPress } \n + testID = { props . testID } > \n + < Text > { props . label } < / Text > \n
Libraries \ Components \ ScrollView \ ScrollView . js \n - UNSAFE _ componentWillMount ( ) { \n + componentDidMount ( ) { \n + \n + this . _ updateAnimatedNodeAttachment ( ) ; \n - componentDidMount ( ) { \n - this . _ updateAnimatedNodeAttachment ( ) ; \n - } \n - \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ PropertyDerivations . java \n - . unordered ( unordered ) \n + . unordered ( true ) \n - . unordered ( unordered ) \n - . unordered ( unordered ) \n
presto - product - tests \ src \ main \ java \ com \ facebook \ presto \ tests \ hive \ TestHiveStorageFormats . java \n + import com . facebook . presto . tests . utils . JdbcDriverUtils ; \n + / / only admin user is allowed to change session properties \n + setRole ( " admin " ) ; \n + / / only admin user is allowed to change session properties \n + setRole ( " admin " ) ; \n + / / only admin user is allowed to change session properties \n + setRole ( " admin " ) ; \n + / / only admin user is allowed to change session properties \n + setRole ( " admin " ) ; \n + private static void setRole ( String role ) \n + { \n + Connection connection = defaultQueryExecutor ( ) . getConnection ( ) ; \n + try { \n + JdbcDriverUtils . setRole ( connection , role ) ; \n + } \n + catch ( SQLException e ) { \n + throw new RuntimeException ( e ) ; \n + } \n + } \n + \n presto - product - tests \ src \ main \ java \ com \ facebook \ presto \ tests \ utils \ JdbcDriverUtils . java \n + public static void setRole ( Connection connection , String role ) \n + throws SQLException \n + { \n + try ( Statement statement = connection . createStatement ( ) ) { \n + statement . execute ( String . format ( " SET ROLE % s " , role ) ) ; \n + } \n + } \n + \n
AndroidAnnotations \ checkstyle - checks . xml \n - < property name = " file " value = " $ { checkstyle . suppressions . file } " / > \n - < / module > \n + < property name = " file " value = " $ { config _ loc } / checkstyle - suppressions . xml " / > \n + < / module > \n AndroidAnnotations \ pom . xml \n + < propertyExpansion > config _ loc = $ { main . basedir } < / propertyExpansion > \n
AndroidAnnotations \ checkstyle - checks - ci . xml \n - < property name = " groups " value = " / ^ javax ? \ . / , org " / > \n + < property name = " groups " value = " / ^ javax ? \ . / , org , com " / > \n AndroidAnnotations \ checkstyle - checks . xml \n - < property name = " groups " value = " / ^ javax ? \ . / , org " / > \n + < property name = " groups " value = " / ^ javax ? \ . / , org , com " / > \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ rule \ HiveFilterPushdown . java \n - decomposedFilter . getRemainingExpression ( ) , \n + remainingExpression , \n
presto - docs \ src \ main \ sphinx \ develop \ connectors . rst \n - - - - - - - - - - - - - - - - \n - Instances of your connecor splits . \n + Instances of your connecor splits . \n - The ` ` getNodeSelectionStrategy ` ` method indicates the node affinity \n + The ` ` getNodeSelectionStrategy ` ` method indicates the node affinity \n - The ` ` getPreferredNodes ` ` method provides a list of preferred nodes \n + The ` ` getPreferredNodes ` ` method provides a list of preferred nodes \n - The scheduler will respect the preference if the strategy is \n - HARD _ AFFINITY . Otherwise , the scheduler will prioritize the provided \n + The scheduler will respect the preference if the strategy is \n + HARD _ AFFINITY . Otherwise , the scheduler will prioritize the provided \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ CompilationSupport . java \n - * - dead _ strip } and { @ code - no _ dead _ strip _ inits _ and _ terms } ) . \n + * - dead _ strip } ) . \n src \ test \ java \ com \ google \ devtools \ build \ lib \ packages \ util \ mock \ osx _ cc _ toolchain _ config . bzl \n - flags = [ " - dead _ strip " , " - no _ dead _ strip _ inits _ and _ terms " ] , \n + flags = [ " - dead _ strip " ] , \n tools \ osx \ crosstool \ cc _ toolchain _ config . bzl \n - flags = [ " - dead _ strip " , " - no _ dead _ strip _ inits _ and _ terms " ] , \n + flags = [ " - dead _ strip " ] , \n
site \ docs \ platforms . md \n - [ ` constraint _ value ` ] ( platform . html # constraint _ value ) that no platform \n + [ ` constraint _ value ` ] ( be / platform . html # constraint _ value ) that no platform \n - ] , \n + } ) , \n
CHANGELOG . md \n + * Fixed a potential cause for Realm file corruptions ( never reported ) . \n + * Upgraded to Realm Sync 1 . 3 . 2 . \n + * Upgraded to Realm Core 2 . 4 . 0 . \n + \n dependencies . list \n - REALM _ SYNC _ VERSION = 1 . 2 . 1 \n - REALM _ SYNC _ SHA256 = b796433319e2574ea3cdb1b3dcda4e2311a2080f8e1563ea68a59b2cdac1d0a7 \n + REALM _ SYNC _ VERSION = 1 . 3 . 2 \n + REALM _ SYNC _ SHA256 = be79d334ca8d87785a91fa5d68264bc62de49271936d5c19b6473f34cd47f9f0 \n realm \ realm - library \ src \ androidTest \ java \ io \ realm \ RealmTests . java \n - assertEquals ( 1 , files . length ) ; \n + assertEquals ( 2 , files . length ) ; \n
CHANGELOG . md \n + * Updated file format of Realm files . Existing Realm files will automatically be migrated to the new format when they are opened . \n + * [ ObjectServer ] Due to file format changes , Realm Object Server 1 . 3 . 0 or later is required . \n + * Upgraded to Realm Sync 1 . 5 . 0 . \n + * Upgraded to Realm Core 2 . 5 . 1 . \n dependencies . list \n - REALM _ SYNC _ VERSION = 1 . 3 . 2 \n - REALM _ SYNC _ SHA256 = be79d334ca8d87785a91fa5d68264bc62de49271936d5c19b6473f34cd47f9f0 \n + REALM _ SYNC _ VERSION = 1 . 5 . 0 \n + REALM _ SYNC _ SHA256 = 2da0de557182e7d717d74808bf6d3f1e5f18d5c082744d29b96dca80555733a7 \n - REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 2 . 1 - 270 \n + REALM _ OBJECT _ SERVER _ DE _ VERSION = 1 . 3 . 0 - 294 \n realm \ realm - library \ src \ main \ cpp \ object - store \n - Subproject commit 14c2c7e7038850302f60f6fa1e36a22bceb3ab94 \n + Subproject commit 3eada170f380174992b47b6023f375f3f372a9d2 \n
realm \ realm - library \ src \ androidTest \ java \ io \ realm \ SyncConfigurationTests . java \n + import java . util . HashMap ; \n + import java . util . Map ; \n + @ Test \n + public void serverUrl _ port ( ) { \n + Map < String , Integer > urlPort = new HashMap < String , Integer > ( ) ; \n + urlPort . put ( " realm : / / objectserver . realm . io / ~ / default " , 80 ) ; \n + urlPort . put ( " realms : / / objectserver . realm . io / ~ / default " , 443 ) ; \n + urlPort . put ( " realm : / / objectserver . realm . io : 8080 / ~ / default " , 8080 ) ; \n + urlPort . put ( " realms : / / objectserver . realm . io : 2443 / ~ / default " , 2443 ) ; \n + \n + for ( String url : urlPort . keySet ( ) ) { \n + SyncConfiguration config = new SyncConfiguration . Builder ( context ) \n + . serverUrl ( url ) \n + . user ( createTestUser ( ) ) \n + . build ( ) ; \n + assertEquals ( urlPort . get ( url ) . intValue ( ) , config . getServerUrl ( ) . getPort ( ) ) ; \n + } \n + } \n + \n realm \ realm - library \ src \ main \ java \ io \ realm \ SyncConfiguration . java \n + \n + URI serverUrl ; \n - this . serverUrl = new URI ( url ) ; \n + serverUrl = new URI ( url ) ; \n + / / set port if not set by user \n + int port ; \n + int currentPort = serverUrl . getPort ( ) ; \n + if ( currentPort = = - 1 ) { \n + port = scheme . equals ( " realm " ) ? 80 : 443 ; \n + } else { \n + port = currentPort ; \n + } \n + \n + try { \n + this . serverUrl = new URI ( scheme , serverUrl . getUserInfo ( ) , serverUrl . getHost ( ) , \n + port , serverUrl . getPath ( ) , serverUrl . getQuery ( ) , serverUrl . getFragment ( ) ) ; \n + } catch ( URISyntaxException e ) { \n + throw new IllegalArgumentException ( " Cannot reconstruct url : " + url , e ) ; \n + } \n
CHANGELOG . md \n - * Updated Realm Sync to 1 . 0 . 0 - BETA - 7 . 1 . \n + * Updated Realm Sync to 1 . 0 . 0 - BETA - 7 . 2 . \n dependencies . list \n - REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 7 . 1 \n - REALM _ SYNC _ SHA256 = 5412b42d96dd525af3ec6a0b7943330c43beae2c663b32376b77278ea54e34a5 \n + REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 7 . 2 \n + REALM _ SYNC _ SHA256 = d2474e81e1e820d19e16c208c410b10cc7e22f3791f9e9d3d0745c259754b238 \n
src \ main \ java \ org \ junit \ internal \ builders \ JUnit4Builder . java \n - import org . junit . runners . BlockJUnit4ClassRunner ; \n + import org . junit . runners . JUnit4 ; \n - return new BlockJUnit4ClassRunner ( testClass ) ; \n + return new JUnit4 ( testClass ) ; \n - } \n + } \n src \ main \ java \ org \ junit \ runners \ JUnit4 . java \n + import org . junit . runners . model . TestClass ; \n - super ( klass ) ; \n + super ( new TestClass ( klass ) ) ; \n
src \ main \ java \ org \ junit \ rules \ TemporaryFolder . java \n - / / Before checking the paths , check if create ( ) was ever called , and if it wasn ' t , throw \n - File root = getRoot ( ) ; \n + if ( paths . length = = 0 ) { \n + throw new IllegalArgumentException ( " must pass at least one path " ) ; \n + } \n + / * \n + * Before checking if the paths are absolute paths , check if create ( ) was ever called , \n + * and if it wasn ' t , throw IllegalStateException . \n + * / \n + File root = getRoot ( ) ; \n src \ test \ java \ org \ junit \ rules \ TemporaryFolderUsageTest . java \n + @ Test \n + public void newFolderWithGivenEmptyArrayThrowsIllegalArgumentException ( ) throws IOException { \n + tempFolder . create ( ) ; \n + \n + thrown . expect ( IllegalArgumentException . class ) ; \n + thrown . expectMessage ( " must pass at least one path " ) ; \n + tempFolder . newFolder ( new String [ 0 ] ) ; \n + } \n + \n
src \ main \ java \ org \ junit \ experimental \ categories \ CategoryFilterFactory . java \n - Class < ? > categoryClass = Classes . getClass ( category ) ; \n + / * \n + * Load the category class using the context class loader . \n + * If there is no context class loader , use the class loader for this class . \n + * / \n + Class < ? > categoryClass = Classes . getClass ( category , getClass ( ) ) ; \n src \ main \ java \ org \ junit \ internal \ Classes . java \n + * If the current thread does not have a class loader , falls back to the class loader for \n + * { @ link Classes } . \n - return Class . forName ( className , true , currentThread ( ) . getContextClassLoader ( ) ) ; \n + return getClass ( className , Classes . class ) ; \n + } \n + \n + / * * \n + * Returns Class . forName for { @ code className } using the current thread ' s class loader . \n + * If the current thread does not have a class loader , falls back to the class loader for the \n + * passed - in class . \n + * \n + * @ param className Name of the class . \n + * @ param callingClass Class that is requesting a the class \n + * @ throws ClassNotFoundException \n + * @ since 4 . 13 \n + * / \n + public static Class < ? > getClass ( String className , Class < ? > callingClass ) throws ClassNotFoundException { \n + ClassLoader classLoader = currentThread ( ) . getContextClassLoader ( ) ; \n + return Class . forName ( className , true , classLoader = = null ? callingClass . getClassLoader ( ) : classLoader ) ; \n
src \ main \ java \ org \ junit \ rules \ ExpectedException . java \n + @ Deprecated \n
ReactAndroid \ build . gradle \n + javadocDeps . extendsFrom api \n + javadocDeps ( " com . squareup : javapoet : 1 . 13 . 0 " ) \n + \n ReactAndroid \ release . gradle \n - classpath + = files ( project . getConfigurations ( ) . getByName ( " compile " ) . asList ( ) ) \n + / / Note : this doesn ' t handle . aar files , only . jar . \n + classpath + = configurations . javadocDeps \n
RNTester \ android \ app \ build . gradle \n + dexOptions { \n + javaMaxHeapSize " 4g " \n + } \n + \n new file \n gradle . properties \n + org . gradle . configureondemand = true \n + org . gradle . daemon = true \n + org . gradle . jvmargs = - Xmx4g - XX : MaxPermSize = 2048m - XX : + HeapDumpOnOutOfMemoryError - Dfile . encoding = UTF - 8 \n + org . gradle . parallel = true \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipelineExperiments . java \n + public boolean isPartialImageCachingEnabled ( ) { \n + return mPartialImageCachingEnabled ; \n + } \n + \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipelineFactory . java \n - useBitmapPrepareToDraw ) ; \n + useBitmapPrepareToDraw , \n + mConfig . getExperiments ( ) . isPartialImageCachingEnabled ( ) ) ; \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ProducerFactory . java \n + import com . facebook . imagepipeline . producers . PartialDiskCacheProducer ; \n + public PartialDiskCacheProducer newPartialDiskCacheProducer ( \n + Producer < EncodedImage > inputProducer ) { \n + return new PartialDiskCacheProducer ( \n + mDefaultBufferedDiskCache , \n + mCacheKeyFactory , \n + mPooledByteBufferFactory , \n + mByteArrayPool , \n + inputProducer ) ; \n + } \n + \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ProducerSequenceFactory . java \n + private final boolean mPartialImageCachingEnabled ; \n - boolean useBitmapPrepareToDraw ) { \n + boolean useBitmapPrepareToDraw , \n + boolean partialImageCachingEnabled ) { \n + mPartialImageCachingEnabled = partialImageCachingEnabled ; \n - Producer < EncodedImage > cacheWriteProducer = \n - mProducerFactory . newDiskCacheWriteProducer ( inputProducer ) ; \n + Producer < EncodedImage > cacheWriteProducer ; \n + if ( mPartialImageCachingEnabled ) { \n + Producer < EncodedImage > partialDiskCacheProducer = \n + mProducerFactory . newPartialDiskCacheProducer ( inputProducer ) ; \n + cacheWriteProducer = mProducerFactory . newDiskCacheWriteProducer ( partialDiskCacheProducer ) ; \n + } else { \n + cacheWriteProducer = mProducerFactory . newDiskCacheWriteProducer ( inputProducer ) ; \n + } \n imagepipeline \ src \ test \ java \ com \ facebook \ imagepipeline \ core \ ProducerSequenceFactoryTest . java \n - new ProducerSequenceFactory ( producerFactory , null , true , false , null , false , false ) ; \n + new ProducerSequenceFactory ( producerFactory , null , true , false , null , false , false , false ) ; \n - mProducerSequenceFactory . mNetworkFetchSequence ) ) ; \n + mProducerSequenceFactory . mNetworkFetchSequence ) ) ; \n - mProducerSequenceFactory . mPostprocessorSequences \n - . get ( mProducerSequenceFactory . mNetworkFetchSequence ) ) ) ; \n + mProducerSequenceFactory . mPostprocessorSequences \n + . get ( mProducerSequenceFactory . mNetworkFetchSequence ) ) ) ; \n - / * useBitmapPrepareToDraw * / true ) ; \n + / * useBitmapPrepareToDraw * / true , \n + false ) ; \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ DecodeProducer . java \n - if ( isNotLast ( status ) \n + if ( ( isNotLast ( status ) | | statusHasFlag ( status , IS _ PARTIAL _ RESULT ) ) \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ MediaVariationsFallbackProducer . java \n - resizeOptions . width < = 0 ) { \n + resizeOptions . width < = 0 | | \n + imageRequest . getBytesRange ( ) ! = null ) { \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ ImageRequestBuilder . java \n + * \n + * < p > Even where this is supported , there is no contract that this must be followed . The response \n + * may contain the full image data , more than is requested or less , depending on what ' s already in \n + * cache and external factors . \n + * \n samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ imagepipeline \ PartialRequestFragment . java \n + . setMediaVariationsForMediaId ( " partial " ) \n
new file \n tests \ UpdatableSystemFontTest \ OWNERS \n + # Bug component : 24939 \n + \n + include / graphics / java / android / graphics / fonts / OWNERS \n
core \ java \ android \ service \ textservice \ OWNERS \n - # Bug component : 34867 \n + # Bug component : 816455 \n - include . . / . . / inputmethodservice / OWNERS \n + include / services / core / java / com / android / server / textservices / OWNERS \n core \ java \ android \ view \ textservice \ OWNERS \n - # Bug component : 34867 \n + # Bug component : 816455 \n - include . . / inputmethod / OWNERS \n + include / services / core / java / com / android / server / textservices / OWNERS \n new file \n core \ java \ com \ android \ internal \ textservice \ OWNERS \n + # Bug component : 816455 \n + \n + include / services / core / java / com / android / server / textservices / OWNERS \n new file \n core \ tests \ coretests \ src \ android \ view \ textservice \ OWNERS \n + # Bug component : 816455 \n + \n + include / services / core / java / com / android / server / textservices / OWNERS \n new file \n services \ core \ java \ com \ android \ server \ textservices \ OWNERS \n + # Bug component : 816455 \n + \n + include / services / core / java / com / android / server / inputmethod / OWNERS \n new file \n services \ tests \ servicestests \ src \ com \ android \ server \ textservices \ OWNERS \n + # Bug component : 816455 \n + \n + include / services / core / java / com / android / server / textservices / OWNERS \n
ion \ src \ com \ koushikdutta \ ion \ conscrypt \ ConscryptMiddleware . java \n - \n - middleware . addEngineConfigurator ( new AsyncSSLEngineConfigurator ( ) { \n - @ Override \n - public SSLEngine createEngine ( SSLContext inContext , String peerHost , int peerPort ) { \n - if ( inContext = = sslContext ) \n - return sslContext . createSSLEngine ( peerHost , peerPort ) ; \n - return null ; \n - } \n - \n - @ Override \n - public void configureEngine ( SSLEngine engine , GetSocketData data , String host , int port ) { \n - \n - } \n - } ) ; \n
ion \ src \ com \ koushikdutta \ ion \ Ion . java \n - httpClient . getSSLSocketMiddleware ( ) . setSpdyEnabled ( true ) ; \n + httpClient . getSSLSocketMiddleware ( ) . setSpdyEnabled ( false ) ; \n
CHANGELOG . md \n - * [ ObjectServer ] Added support for ` SyncConfigration . Builder . waitForInitialRemoteData ( ) ` ( # 4270 ) . \n + * [ ObjectServer ] Added support for ` SyncConfiguration . Builder . waitForInitialRemoteData ( ) ` ( # 4270 ) . \n - * Changelisteners will now auto - expand variable names to be more descriptive when using Android Studio . \n + * Change listeners will now auto - expand variable names to be more descriptive when using Android Studio . \n
CHANGELOG . md \n - * Workaround for a Android JVM crash when using ' compactOnLaunch ( ) ' ( # 4964 ) . \n + * Workaround for an Android JVM crash when using ` compactOnLaunch ( ) ` ( # 4964 ) . \n - * @ PrimaryKey field value can now be null for String , Byte , Short , Integer , and Long types . Older Realms should be migrated , using RealmObjectSchema . setNullable ( ) , or by adding the @ Required annotation . ( # 2515 ) . \n + * @ PrimaryKey field value can now be null for String , Byte , Short , Integer , and Long types . Older Realms should be migrated , using RealmObjectSchema . setNullable ( ) , or by adding the @ Required annotation ( # 2515 ) . \n - * RealmResults and RealmObjects can no longer accidentially be GC ' ed if using ` asObservable ( ) ` . Previously this caused the observable to stop emitting . ( # 2485 ) . \n + * RealmResults and RealmObjects can no longer accidentially be GC ' ed if using ` asObservable ( ) ` . Previously this caused the observable to stop emitting ( # 2485 ) . \n - Fixed a bug where an async query can be copied incomplete in rare cases ( # 1717 ) . \n - * Added a check to prevent removing a RealmChangeListener from a non - Looper thread ( # 1962 ) . ( Thank you @ hohnamkung ) \n + * Added a check to prevent removing a RealmChangeListener from a non - Looper thread ( # 1962 ) . ( Thank you @ hohnamkung . ) \n - * The Realm AAR now also contains the ProGuard configuration ( # 1767 ) . ( Thank you @ skyisle ) \n + * The Realm AAR now also contains the ProGuard configuration ( # 1767 ) . ( Thank you @ skyisle . ) \n - Removed reliance on POSIX signals when using encryption . \n - * Added support for parsing JSON Dates with timezone information . ( Thank you @ LateralKevin ) \n + * Added support for parsing JSON Dates with timezone information . ( Thank you @ LateralKevin . ) \n - * Realm now works with Kotlin ( M12 + ) . ( Thank you @ cypressious ) \n + * Realm now works with Kotlin ( M12 + ) . ( Thank you @ cypressious . ) \n - * RealmBaseAdapter now allow RealmResults to be null . ( Thanks @ zaki50 ) \n + * RealmBaseAdapter now allow RealmResults to be null . ( Thanks @ zaki50 . ) \n
server \ src \ test \ java \ org \ elasticsearch \ index \ engine \ SegmentsStatsTests . java \n - @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 65267 " ) \n + if ( " lock " . equals ( extension ) ) { \n + / / We should ignore lock files for stats file comparisons \n + continue ; \n + } \n - assertTrue ( SegmentsStats . FILE _ DESCRIPTIONS . get ( extension ) ! = null ) ; \n + assertNotNull ( " extension [ " + extension + " ] was not contained in the known segment stats files " , \n + SegmentsStats . FILE _ DESCRIPTIONS . get ( extension ) ) ; \n
build . gradle \n - boolean bwc _ tests _ enabled = true \n - String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = false \n + String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 68762 " / * place a PR link here when committing bwc changes * / \n
presto - verifier \ src \ main \ java \ com \ facebook \ presto \ verifier \ prestoaction \ JdbcPrestoAction . java \n + import static com . facebook . presto . SystemSessionProperties . QUERY _ MAX _ EXECUTION _ TIME ; \n + import static com . facebook . presto . SystemSessionProperties . QUERY _ MAX _ RUN _ TIME ; \n - private static final String QUERY _ MAX _ EXECUTION _ TIME = " query _ max _ execution _ time " ; \n - \n - Map < String , String > sessionProperties = new HashMap < > ( queryConfiguration . getSessionProperties ( ) ) ; \n + / / configure session properties \n + Map < String , String > sessionProperties = queryStage . isMain ( ) \n + ? new HashMap < > ( queryConfiguration . getSessionProperties ( ) ) \n + : new HashMap < > ( ) ; \n + \n + / / Remove query max run time to respect execution time limit . \n + sessionProperties . remove ( QUERY _ MAX _ RUN _ TIME ) ; \n + \n
presto - docs \ Makefile \n - ALLSPHINXOPTS = - n - W - d $ ( BUILDDIR ) / doctrees $ ( PAPEROPT _ $ ( PAPER ) ) $ ( SPHINXOPTS ) $ ( SOURCEDIR ) \n + ALLSPHINXOPTS = - n - d $ ( BUILDDIR ) / doctrees $ ( PAPEROPT _ $ ( PAPER ) ) $ ( SPHINXOPTS ) $ ( SOURCEDIR ) \n
kotlin - native \ backend . native \ tests \ build . gradle \n + task deserialized _ fields ( type : KonanLocalTest ) { \n + source = " serialization / deserialized _ fields . kt " \n + } \n + \n new file \n kotlin - native \ backend . native \ tests \ serialization \ deserialized _ fields . kt \n + / * \n + * Copyright 2010 - 2020 JetBrains s . r . o . Use of this source code is governed by the Apache 2 . 0 license \n + * that can be found in the LICENSE file . \n + * / \n + package serialization . deserialized _ fields \n + \n + import kotlin . test . * \n + \n + class CustomThrowable ( val extraInfo : String ) : Throwable ( " Some message " , null ) \n + \n + @ Test fun runTest ( ) { \n + val custom = CustomThrowable ( " Extra info " ) \n + assertEquals ( custom . extraInfo , " Extra info " ) \n + assertEquals ( custom . message , " Some message " ) \n + assertEquals ( custom . cause , null ) \n + } \n
kotlin - native \ samples \ videoplayer \ src \ videoPlayerMain \ kotlin \ VideoPlayer . kt \n + enum class Mode { \n + VIDEO , \n + AUDIO , \n + BOTH \n + } \n + \n - ArgType . Choice ( listOf ( " video " , " audio " , " both " ) ) , shortName = " m " , description = " Play mode " ) \n - . default ( " both " ) \n + ArgType . Choice < Mode > ( ) , shortName = " m " , description = " Play mode " ) \n + . default ( BOTH ) \n kotlin - native \ tools \ benchmarksAnalyzer \ src \ main \ kotlin \ main . kt \n - val renders by argParser . option ( ArgType . Choice ( listOf ( " text " , " html " , " teamcity " , " statistics " , " metrics " ) ) , \n - shortName = " r " , description = " Renders for showing information " ) . multiple ( ) . default ( listOf ( " text " ) ) \n + val renders by argParser . option ( ArgType . Choice < RenderType > ( ) , shortName = " r " , \n + description = " Renders for showing information " ) . multiple ( ) . default ( listOf ( RenderType . TEXT ) ) \n - Render . getRenderByName ( it ) . print ( summaryReport , useShortForm , outputFile ) \n + it . render . print ( summaryReport , useShortForm , outputFile ) \n kotlin - native \ tools \ benchmarksAnalyzer \ src \ main \ kotlin \ org \ jetbrains \ renders \ Render . kt \n + enum class RenderType ( val render : Render ) { \n + TEXT ( TextRender ( ) ) , \n + HTML ( HTMLRender ( ) ) , \n + TEAMCITY ( TeamCityStatisticsRender ( ) ) , \n + STATISTICS ( StatisticsRender ( ) ) \n + } \n + \n - companion object { \n - fun getRenderByName ( name : String ) = \n - when ( name ) { \n - " text " - > TextRender ( ) \n - " html " - > HTMLRender ( ) \n - " teamcity " - > TeamCityStatisticsRender ( ) \n - " statistics " - > StatisticsRender ( ) \n - " metrics " - > MetricResultsRender ( ) \n - else - > error ( " Unknown render $ name " ) \n - } \n - } \n - \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractConfig . java \n - Runtime . getRuntime ( ) . addShutdownHook ( DubboShutdownHook . getDubboShutdownHook ( ) ) ; \n + DubboShutdownHook . getDubboShutdownHook ( ) . register ( ) ; \n dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ DubboShutdownHook . java \n + / * * \n + * Has it already been registered or not ? \n + * / \n + private final AtomicBoolean registered = new AtomicBoolean ( false ) ; \n - private final AtomicBoolean destroyed ; \n + private final AtomicBoolean destroyed = new AtomicBoolean ( false ) ; \n - this . destroyed = new AtomicBoolean ( false ) ; \n + / * * \n + * Register the ShutdownHook \n + * / \n + public void register ( ) { \n + if ( ! registered . get ( ) & & registered . compareAndSet ( false , true ) ) { \n + Runtime . getRuntime ( ) . addShutdownHook ( getDubboShutdownHook ( ) ) ; \n + } \n + } \n + \n + / * * \n + * Unregister the ShutdownHook \n + * / \n + public void unregister ( ) { \n + if ( registered . get ( ) & & registered . compareAndSet ( true , false ) ) { \n + Runtime . getRuntime ( ) . removeShutdownHook ( getDubboShutdownHook ( ) ) ; \n + } \n + } \n + \n + / / unregister the shutdownHook \n + unregister ( ) ; \n + \n dubbo - config \ dubbo - config - spring \ src \ main \ java \ org \ apache \ dubbo \ config \ spring \ extension \ SpringExtensionFactory . java \n - Runtime . getRuntime ( ) . removeShutdownHook ( DubboShutdownHook . getDubboShutdownHook ( ) ) ; \n + DubboShutdownHook . getDubboShutdownHook ( ) . unregister ( ) ; \n
dubbo - rpc \ dubbo - rpc - dubbo \ src \ main \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ telnet \ InvokeTelnetHandler . java \n + import org . apache . dubbo . common . utils . CompatibleTypeUtils ; \n + if ( arg instanceof String & & type . isEnum ( ) ) { \n + try { \n + CompatibleTypeUtils . compatibleTypeConvert ( arg , type ) ; \n + } catch ( RuntimeException e ) { \n + return false ; \n + } \n + continue ; \n + } \n dubbo - rpc \ dubbo - rpc - dubbo \ src \ test \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ support \ DemoService . java \n - / / Type enumlength ( Type type ) ; \n + Type getType ( Type type ) ; \n dubbo - rpc \ dubbo - rpc - dubbo \ src \ test \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ support \ DemoServiceImpl . java \n - \n - public Type enumlength ( Type type ) { \n + \n + public Type getType ( Type type ) { \n dubbo - rpc \ dubbo - rpc - dubbo \ src \ test \ java \ org \ apache \ dubbo \ rpc \ protocol \ dubbo \ telnet \ InvokerTelnetHandlerTest . java \n + @ Test \n + public void testInvokeByPassingEnumValue ( ) throws RemotingException { \n + mockInvoker = mock ( Invoker . class ) ; \n + given ( mockInvoker . getInterface ( ) ) . willReturn ( DemoService . class ) ; \n + given ( mockInvoker . getUrl ( ) ) . willReturn ( URL . valueOf ( " dubbo : / / 127 . 0 . 0 . 1 : 20886 / demo " ) ) ; \n + given ( mockInvoker . invoke ( any ( Invocation . class ) ) ) . willReturn ( new RpcResult ( " ok " ) ) ; \n + mockChannel = mock ( Channel . class ) ; \n + given ( mockChannel . getAttribute ( " telnet . service " ) ) . willReturn ( null ) ; \n + given ( mockChannel . getLocalAddress ( ) ) . willReturn ( NetUtils . toAddress ( " 127 . 0 . 0 . 1 : 5555 " ) ) ; \n + given ( mockChannel . getRemoteAddress ( ) ) . willReturn ( NetUtils . toAddress ( " 127 . 0 . 0 . 1 : 20886 " ) ) ; \n + \n + DubboProtocol . getDubboProtocol ( ) . export ( mockInvoker ) ; \n + String result = invoke . telnet ( mockChannel , " getType ( \ " High \ " ) " ) ; \n + assertTrue ( result . contains ( " ok " ) ) ; \n + } \n + \n + \n
instrumentation \ src \ androidTest \ java \ com \ bumptech \ glide \ test \ BitmapRegressionTester . java \n - testClass . getMethod ( testName . getMethodName ( ) , / * parameterTypes = * / ( Class [ ] ) null ) ; \n + testClass . getMethod ( testName . getMethodName ( ) , / * parameterTypes . . . = * / ( Class [ ] ) null ) ; \n
third _ party \ turbine \ turbine _ direct . jar \n Binary files a / third _ party / turbine / turbine _ direct . jar and b / third _ party / turbine / turbine _ direct . jar differ \n
dubbo - rpc \ dubbo - rpc - grpc \ src \ main \ java \ org \ apache \ dubbo \ rpc \ protocol \ grpc \ GrpcInvoker . java \n - } else if ( status . getCode ( ) = = Status . Code . DEADLINE _ EXCEEDED ) { \n - / / \n
. gitignore \n - # flatten ignore \n - . flattened - pom . xml \n - \n
docs \ reference \ rest - api \ index . asciidoc \n - * < < graph - explore - api , Graph Explore API > > \n - * < < find - structure > > \n + * < < graph - explore - api , Graph explore API > > \n + * < < find - structure , Find structure API > > \n - * < < indices - reload - analyzers , Reload Search Analyzers API > > \n - * < < repositories - metering - apis , Repositories Metering APIs > > \n + * < < indices - reload - analyzers , Reload search analyzers API > > \n + * < < repositories - metering - apis , Repositories metering APIs > > \n
docs \ reference \ aggregations \ pipeline \ inference - bucket - aggregation . asciidoc \n - privileges that are required for using the < < get - trained - models > > . \n + privileges that are required for using the < < get - trained - models , get trained models API > > . \n - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \n - < 1 > The ID of model to use . \n + < 1 > The unique identifier or alias for the trained model . \n - | ` model _ id ` | The ID of the model to load and infer against | Required | - \n + | ` model _ id ` | The ID or alias for the trained model . | Required | - \n - < 3 > { infer - cap } bucket aggregation that contains the model ID and maps the \n + < 3 > { infer - cap } bucket aggregation that specifies the trained model and maps the \n docs \ reference \ ingest \ processors \ inference . asciidoc \n - | ` model _ id ` | yes | - | ( String ) The ID of the model to load and infer against . \n + | ` model _ id ` | yes | - | ( String ) The ID or alias for the trained model . \n
services \ core \ java \ com \ android \ server \ ConnectivityService . java \n + propagateUnderlyingNetworkCapabilities ( nai . network ) ; \n - propagateUnderlyingNetworkCapabilities ( nai . network ) ; \n tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n - assertNull ( mCm . getActiveNetworkInfo ( ) ) ; / / ? ? ? \n + assertActiveNetworkInfo ( TYPE _ MOBILE , DetailedState . CONNECTED ) ; \n - / / Suspending and resuming reveals other bugs . \n + / / Re - suspending the current network fixes the problem . \n - callback . assertNoCallback ( ) ; / / BUG : should get callback that VPN is suspended . \n + callback . expectCapabilitiesThat ( mMockVpn , \n + nc - > ! nc . hasCapability ( NET _ CAPABILITY _ NOT _ SUSPENDED ) \n + & & nc . hasTransport ( TRANSPORT _ CELLULAR ) ) ; \n + callback . expectCallback ( CallbackEntry . SUSPENDED , mMockVpn ) ; \n + callback . assertNoCallback ( ) ; \n - assertTrue ( mCm . getNetworkCapabilities ( mMockVpn . getNetwork ( ) ) \n - . hasCapability ( NET _ CAPABILITY _ NOT _ SUSPENDED ) ) ; / / BUG : VPN should be SUSPENDED . \n + assertFalse ( mCm . getNetworkCapabilities ( mMockVpn . getNetwork ( ) ) \n + . hasCapability ( NET _ CAPABILITY _ NOT _ SUSPENDED ) ) ; \n - assertNull ( mCm . getActiveNetworkInfo ( ) ) ; / / ? ? ? \n + assertActiveNetworkInfo ( TYPE _ MOBILE , DetailedState . SUSPENDED ) ; \n - callback . assertNoCallback ( ) ; / / BUG : should get callback that VPN is no longer suspended . \n + callback . expectCapabilitiesThat ( mMockVpn , \n + nc - > nc . hasCapability ( NET _ CAPABILITY _ NOT _ SUSPENDED ) \n + & & nc . hasTransport ( TRANSPORT _ CELLULAR ) ) ; \n + callback . expectCallback ( CallbackEntry . RESUMED , mMockVpn ) ; \n + callback . assertNoCallback ( ) ; \n - assertNetworkInfo ( TYPE _ VPN , DetailedState . SUSPENDED ) ; \n - assertNull ( mCm . getActiveNetworkInfo ( ) ) ; / / ? ? ? \n - assertGetNetworkInfoOfGetActiveNetworkIsConnected ( false ) ; \n + assertNetworkInfo ( TYPE _ VPN , DetailedState . CONNECTED ) ; \n + assertActiveNetworkInfo ( TYPE _ MOBILE , DetailedState . CONNECTED ) ; \n + assertGetNetworkInfoOfGetActiveNetworkIsConnected ( true ) ; \n
tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n + waitForIdle ( ) ; \n - expectNetworkRejectNonSecureVpn ( inOrder , false , firstHalf , secondHalf ) ; \n + expectNetworkRejectNonSecureVpn ( inOrder , false , firstHalf , secondHalf ) ; \n + waitForIdle ( ) ; \n + waitForIdle ( ) ; \n
server \ src \ main \ java \ org \ elasticsearch \ index \ mapper \ RootObjectMapper . java \n + break ; \n
server \ src \ main \ java \ org \ elasticsearch \ action \ admin \ indices \ mapping \ get \ TransportGetFieldMappingsIndexAction . java \n - import org . elasticsearch . index . mapper . MappingLookup ; \n + import org . elasticsearch . index . mapper . MappingLookup ; \n - final MappingLookup allFieldMappers = documentMapper . mappers ( ) ; \n + final MappingLookup mappingLookup = documentMapper . mappers ( ) ; \n - for ( Mapper fieldMapper : allFieldMappers ) { \n + for ( Mapper fieldMapper : mappingLookup . fieldMappers ( ) ) { \n - for ( Mapper fieldMapper : allFieldMappers ) { \n + for ( Mapper fieldMapper : mappingLookup . fieldMappers ( ) ) { \n - Mapper fieldMapper = allFieldMappers . getMapper ( field ) ; \n + Mapper fieldMapper = mappingLookup . getMapper ( field ) ; \n server \ src \ main \ java \ org \ elasticsearch \ index \ mapper \ MappingLookup . java \n - import java . util . Iterator ; \n - public final class MappingLookup implements Iterable < Mapper > { \n + public final class MappingLookup { \n - public FieldTypeLookup fieldTypes ( ) { \n + FieldTypeLookup fieldTypes ( ) { \n - @ Override \n - public Iterator < Mapper > iterator ( ) { \n - return fieldMappers . values ( ) . iterator ( ) ; \n + / * * \n + * Returns an iterable over all the registered field mappers ( including alias mappers ) \n + * / \n + public Iterable < Mapper > fieldMappers ( ) { \n + return fieldMappers . values ( ) ; \n
src \ main \ java \ io \ vertx \ core \ json \ JsonObject . java \n - * Method for instantiating a Java object from a JsonObject . \n + * Instantiate a Java object from a JsonObject . \n
src \ main \ java \ io \ vertx \ core \ json \ JsonObject . java \n + * Faster than calling ` Json . decodeValue ( Json . encode ( jsonObject ) , type ) ` . \n src \ test \ java \ io \ vertx \ test \ core \ JsonPOJOMapperTest . java \n + Thread . currentThread ( ) . setName ( " vert . x - 1 " ) ; \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ views \ textinput \ ReactTextInputManager . java \n + private static boolean shouldHideCursorForEmailTextInput ( ) { \n + String manufacturer = Build . MANUFACTURER . toLowerCase ( ) ; \n + return ( Build . VERSION . SDK _ INT = = Build . VERSION _ CODES . Q & & manufacturer . contains ( " xiaomi " ) ) ; \n + } \n + \n - / / Set cursor ' s visibility to False to fix a crash on some Xiaomi devices with Android Q . This \n - / / crash happens when focusing on a email EditText , during which a prompt will be triggered but \n - / / the system fail to locate it properly . Here is an example post discussing about this \n - / / issue : https : / / github . com / facebook / react - native / issues / 27204 \n - String manufacturer = Build . MANUFACTURER . toLowerCase ( ) ; \n - if ( ( view . getInputType ( ) = = InputType . TYPE _ TEXT _ VARIATION _ EMAIL _ ADDRESS \n - | | view . getInputType ( ) = = InputType . TYPE _ TEXT _ VARIATION _ WEB _ EMAIL _ ADDRESS ) \n - & & Build . VERSION . SDK _ INT = = Build . VERSION _ CODES . Q \n - & & manufacturer . contains ( " xiaomi " ) ) { \n - view . setCursorVisible ( false ) ; \n + if ( view . getStagedInputType ( ) = = InputType . TYPE _ TEXT _ VARIATION _ EMAIL _ ADDRESS \n + & & shouldHideCursorForEmailTextInput ( ) ) { \n - \n + \n + / / Set cursor ' s visibility to False to fix a crash on some Xiaomi devices with Android Q . This \n + / / crash happens when focusing on a email EditText , during which a prompt will be triggered \n + / / but \n + / / the system fail to locate it properly . Here is an example post discussing about this \n + / / issue : https : / / github . com / facebook / react - native / issues / 27204 \n + if ( shouldHideCursorForEmailTextInput ( ) ) { \n + view . setCursorVisible ( false ) ; \n + } \n
ReactAndroid \ src \ main \ java \ com \ facebook \ react \ modules \ dialog \ DialogModule . java \n - if ( getReactApplicationContext ( ) . hasActiveCatalystInstance ( ) ) { \n + if ( getReactApplicationContext ( ) . isBridgeless ( ) \n + | | getReactApplicationContext ( ) . hasActiveCatalystInstance ( ) ) { \n - if ( getReactApplicationContext ( ) . hasActiveCatalystInstance ( ) ) { \n + if ( getReactApplicationContext ( ) . isBridgeless ( ) \n + | | getReactApplicationContext ( ) . hasActiveCatalystInstance ( ) ) { \n
Libraries \ Image \ AssetSourceResolver . js \n - const pickScale = require ( ' . / AssetSourcePickScale ' ) ; \n + const { pickScale } = require ( ' . / AssetUtils ' ) ; \n rename from Libraries \ Image \ AssetSourcePickScale . js \n rename to Libraries \ Image \ AssetUtils . js \n - const PixelRatio = require ( ' . . / Utilities / PixelRatio ' ) ; \n - function AssetSourcePickScale ( \n - scales : Array < number > , \n - deviceScale ? : number , \n - ) : number { \n + import PixelRatio from ' . . / Utilities / PixelRatio ' ; \n + \n + let cacheBreaker ; \n + let warnIfCacheBreakerUnset = true ; \n + \n + export function pickScale ( scales : Array < number > , deviceScale ? : number ) : number { \n - module . exports = AssetSourcePickScale ; \n + \n + export function setUrlCacheBreaker ( appendage : string ) { \n + cacheBreaker = appendage ; \n + } \n + \n + export function getUrlCacheBreaker ( ) : string { \n + if ( _ _ DEV _ _ & & warnIfCacheBreakerUnset & & cacheBreaker = = null ) { \n + warnIfCacheBreakerUnset = false ; \n + console . warn ( ' AssetUtils . getUrlCacheBreaker : Cache breaker value is unset ' ) ; \n + return ' ' ; \n + } \n + return cacheBreaker ; \n + } \n Libraries \ Image \ resolveAssetSource . js \n - const AssetSourcePickScale = require ( ' . / AssetSourcePickScale ' ) ; \n + const { pickScale } = require ( ' . / AssetUtils ' ) ; \n - module . exports . pickScale = AssetSourcePickScale ; \n + module . exports . pickScale = pickScale ; \n
Libraries \ Lists \ VirtualizedSectionList . js \n - const leadingSeparator = LeadingSeparatorComponent & & ( \n + const leadingSeparator = LeadingSeparatorComponent ! = null & & ( \n - const separator = SeparatorComponent & & ( \n + const separator = SeparatorComponent ! = null & & ( \n - / * $ FlowFixMe ( > = 0 . 89 . 0 site = react _ native _ fb ) This comment suppresses an \n - * error found when Flow v0 . 89 was deployed . To see the error , delete \n - * this comment and run Flow . * / \n - { ! inverted ? leadingSeparator : separator } \n + { inverted = = = false ? leadingSeparator : separator } \n - { ! inverted ? separator : leadingSeparator } \n + { inverted = = = false ? separator : leadingSeparator } \n
CHANGES \n - API Change : Table # round uses ceil / floor and is applied during layout , rather than afterward . \n - Fixed blurry NinePatch rendering when using a single center region . \n - API Change : Upon changing the window size with the lwjgl3 backend , the window is centered on the monitor . \n + - Fixed DepthShaderProvider no longer creates one DepthShader per bones count . Now it creates only one skinned variant and one non - skinned variant based on DepthShader / Config numBones . \n - Update to MobiVM 2 . 3 . 8 \n gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ shaders \ DepthShader . java \n - if ( skinned ! = ( numBones > 0 ) ) return false ; \n - if ( ! skinned ) return true ; \n - int w = 0 ; \n - final int n = renderable . meshPart . mesh . getVertexAttributes ( ) . size ( ) ; \n - for ( int i = 0 ; i < n ; i + + ) { \n - final VertexAttribute attr = renderable . meshPart . mesh . getVertexAttributes ( ) . get ( i ) ; \n - if ( attr . usage = = Usage . BoneWeight ) w | = ( 1 < < attr . unit ) ; \n - } \n - return w = = weights ; \n + return skinned = = ( weights > 0 ) ; \n gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ utils \ BaseShaderProvider . java \n + import com . badlogic . gdx . utils . GdxRuntimeException ; \n + if ( ! shader . canRender ( renderable ) ) throw new GdxRuntimeException ( " unable to provide a shader for this renderable " ) ; \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ attributes \ ColorAttribute . java \n + public final static ColorAttribute createEmissive ( final Color color ) { \n + return new ColorAttribute ( Emissive , color ) ; \n + } \n + \n + public final static ColorAttribute createEmissive ( float r , float g , float b , float a ) { \n + return new ColorAttribute ( Emissive , r , g , b , a ) ; \n + } \n + \n + public final static ColorAttribute createAmbientLight ( final Color color ) { \n + return new ColorAttribute ( AmbientLight , color ) ; \n + } \n + \n + public final static ColorAttribute createAmbientLight ( float r , float g , float b , float a ) { \n + return new ColorAttribute ( AmbientLight , r , g , b , a ) ; \n + } \n + \n + public final static ColorAttribute createFog ( final Color color ) { \n + return new ColorAttribute ( Fog , color ) ; \n + } \n + \n + public final static ColorAttribute createFog ( float r , float g , float b , float a ) { \n + return new ColorAttribute ( Fog , r , g , b , a ) ; \n + } \n + \n gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ attributes \ IntAttribute . java \n + / * * create a cull face attribute to be used in a material \n + * @ param value cull face value , possible values are GL _ FRONT _ AND _ BACK , GL _ BACK , GL _ FRONT , or - 1 to inherit default \n + * @ return an attribute * / \n
spring - boot - project \ spring - boot \ src \ main \ java \ org \ springframework \ boot \ logging \ logback \ LogbackLoggingSystem . java \n + import org . springframework . core . env . Environment ; \n + Environment environment = initializationContext . getEnvironment ( ) ; \n + context . putProperty ( LoggingSystemProperties . LOG _ LEVEL _ PATTERN , \n + environment . resolvePlaceholders ( " $ { logging . pattern . level : $ { LOG _ LEVEL _ PATTERN : % 5p } } " ) ) ; \n + context . putProperty ( LoggingSystemProperties . LOG _ DATEFORMAT _ PATTERN , environment . resolvePlaceholders ( \n + " $ { logging . pattern . dateformat : $ { LOG _ DATEFORMAT _ PATTERN : yyyy - MM - dd HH : mm : ss . SSS } } " ) ) ; \n + context . putProperty ( LoggingSystemProperties . ROLLING _ FILE _ NAME _ PATTERN , environment \n + . resolvePlaceholders ( " $ { logging . pattern . rolling - file - name : $ { LOG _ FILE } . % d { yyyy - MM - dd } . % i . gz } " ) ) ; \n spring - boot - project \ spring - boot \ src \ test \ java \ org \ springframework \ boot \ logging \ logback \ LogbackLoggingSystemTests . java \n - import java . util . HashSet ; \n - import java . util . Set ; \n - private Set < Object > systemPropertyNames ; \n - \n - this . systemPropertyNames = new HashSet < > ( System . getProperties ( ) . keySet ( ) ) ; \n - System . getProperties ( ) . keySet ( ) . retainAll ( this . systemPropertyNames ) ; \n - new LoggingSystemProperties ( this . environment ) . apply ( ) ; \n - new LoggingSystemProperties ( this . environment ) . apply ( ) ; \n
spring - boot - project \ spring - boot - actuator - autoconfigure \ src \ main \ java \ org \ springframework \ boot \ actuate \ autoconfigure \ security \ reactive \ ReactiveManagementWebSecurityAutoConfiguration . java \n - import org . springframework . boot . actuate . info . InfoEndpoint ; \n - * actuator is on the classpath . Specifically , it permits access to the health and info \n - * endpoints while securing everything else . \n + * actuator is on the classpath . Specifically , it permits access to the health endpoint \n + * while securing everything else . \n - exchanges . matchers ( EndpointRequest . to ( HealthEndpoint . class , InfoEndpoint . class ) ) . permitAll ( ) ; \n + exchanges . matchers ( EndpointRequest . to ( HealthEndpoint . class ) ) . permitAll ( ) ; \n spring - boot - project \ spring - boot - actuator - autoconfigure \ src \ test \ java \ org \ springframework \ boot \ actuate \ autoconfigure \ info \ InfoEndpointAutoConfigurationTests . java \n + @ Test \n + void runShouldHaveEndpointBean ( ) { \n + this . contextRunner . withPropertyValues ( " management . endpoints . web . exposure . include = info " ) \n + . run ( ( context ) - > assertThat ( context ) . hasSingleBean ( InfoEndpoint . class ) ) ; \n + } \n + \n + @ Test \n + void runWhenNotExposedShouldNotHaveEndpointBean ( ) { \n + this . contextRunner . run ( ( context ) - > assertThat ( context ) . doesNotHaveBean ( InfoEndpoint . class ) ) ; \n + } \n + \n spring - boot - tests \ spring - boot - smoke - tests \ spring - boot - smoke - test - secure - webflux \ src \ test \ java \ smoketest \ secure \ webflux \ SampleSecureWebFluxApplicationTests . java \n - @ Test \n - void infoInsecureByDefault ( ) { \n - this . webClient . get ( ) . uri ( " / actuator / info " ) . accept ( MediaType . APPLICATION _ JSON ) . exchange ( ) . expectStatus ( ) . isOk ( ) ; \n - } \n - \n
testapp \ src \ main \ java \ com \ google \ android \ agera \ testapp \ NotesFragment . java \n + import android . support . v7 . widget . RecyclerView . RecycledViewPool ; \n + private RecycledViewPool pool ; \n - final RowHandler < NoteGroup , List < Note > > rowHandler = rowBinder ( \n + pool = new RecycledViewPool ( ) ; \n + final RowHandler < NoteGroup , List < Note > > rowHandler = rowBinder ( pool , \n + pool . clear ( ) ; \n testapp \ src \ main \ java \ com \ google \ android \ agera \ testapp \ RowHandler . java \n - private RowHandler ( @ NonNull final Function < TRow , TRowItems > data , \n + private RowHandler ( @ NonNull final RecycledViewPool pool , \n + @ NonNull final Function < TRow , TRowItems > data , \n - this . pool = new RecycledViewPool ( ) ; \n + this . pool = pool ; \n + @ NonNull final RecycledViewPool pool , \n - return new RowHandler < > ( dataFunction , stableIdFunction , presenterFromView , layoutManager ) ; \n + return new RowHandler < > ( pool , dataFunction , stableIdFunction , presenterFromView , layoutManager ) ; \n
extensions \ rvdatabinding \ src \ main \ java \ com \ google \ android \ agera \ rvdatabinding \ DataBindingRepositoryPresenterCompiler . java \n - public Object handler ( @ LayoutRes final int handlerId , @ NonNull final Object handler ) { \n + public Object handler ( final int handlerId , @ NonNull final Object handler ) { \n - public Object itemId ( @ LayoutRes final int itemId ) { \n + public Object itemId ( final int itemId ) { \n extensions \ rvdatabinding \ src \ main \ java \ com \ google \ android \ agera \ rvdatabinding \ DataBindingRepositoryPresenterCompilerStates . java \n - import android . support . annotation . LayoutRes ; \n - TRet itemId ( @ LayoutRes int itemId ) ; \n + TRet itemId ( int itemId ) ; \n - TRet handler ( @ LayoutRes int handlerId , @ NonNull Object handler ) ; \n + TRet handler ( int handlerId , @ NonNull Object handler ) ; \n
realm \ realm - library \ src \ main \ java \ io \ realm \ OsRealmObjectSchema . java \n - nativeAddProperty ( nativePtr , new Property ( name , type , primary , indexed , required ) . getNativePtr ( ) ) ; \n + final Property property = new Property ( name , type , primary , indexed , required ) ; \n + try { \n + nativeAddProperty ( nativePtr , property . getNativePtr ( ) ) ; \n + } finally { \n + property . close ( ) ; \n + } \n - nativeAddProperty ( nativePtr , new Property ( name , type , linkedTo ) . getNativePtr ( ) ) ; \n + final Property property = new Property ( name , type , linkedTo ) ; \n + try { \n + nativeAddProperty ( nativePtr , property . getNativePtr ( ) ) ; \n + } finally { \n + property . close ( ) ; \n + } \n
realm \ realm - library \ src \ main \ cpp \ io _ realm _ Property . cpp \n - std : : unique _ ptr < Property > property ( new Property ( name , p _ type , link _ name , " " , false , false , is _ nullable ) ) ; \n - return reinterpret _ cast < jlong > ( property . release ( ) ) ; \n + return reinterpret _ cast < jlong > ( new Property ( name , p _ type , link _ name , " " , false , false , is _ nullable ) ) ; \n
changelog . txt \n - 0 . 84 \n + 0 . 83 . 1 \n
realm \ src \ androidTest \ java \ io \ realm \ RealmConfigurationTest . java \n - RealmConfiguration realmConfig = new RealmConfiguration . Builder ( getContext ( ) ) . setModules ( Realm . getDefaultModule ( ) , null ) . build ( ) ; \n + RealmConfiguration realmConfig = new RealmConfiguration . Builder ( getContext ( ) ) . setModules ( Realm . getDefaultModule ( ) , ( Object ) null ) . build ( ) ; \n
pom . xml \n - < version > 4 . 13 . 1 < / version > \n + < version > 4 . 13 . 2 - SNAPSHOT < / version > \n - < tag > r4 . 13 . 1 < / tag > \n + < tag > HEAD < / tag > \n
pom . xml \n - < version > 4 . 13 . 2 - SNAPSHOT < / version > \n + < version > 4 . 13 . 2 < / version > \n - < tag > HEAD < / tag > \n + < tag > r4 . 13 . 2 < / tag > \n
sample \ src \ main \ java \ com \ loopj \ android \ http \ sample \ DirectorySample . java \n + import android . widget . CheckBox ; \n + private CheckBox cbAppend , cbRename ; \n + cbAppend = new CheckBox ( this ) ; \n + cbAppend . setText ( " Constructor \ " append \ " is true ? " ) ; \n + cbAppend . setChecked ( false ) ; \n + cbRename = new CheckBox ( this ) ; \n + cbRename . setText ( " Constructor \ " renameTargetFileIfExists \ " is true ? " ) ; \n + cbRename . setChecked ( true ) ; \n + customFieldsLayout . addView ( cbAppend ) ; \n + customFieldsLayout . addView ( cbRename ) ; \n - lastResponseHandler = new FileAsyncHttpResponseHandler ( getCacheDir ( ) , false , true ) { \n + lastResponseHandler = new FileAsyncHttpResponseHandler ( getCacheDir ( ) , cbAppend . isChecked ( ) , cbRename . isChecked ( ) ) { \n
library \ build . gradle \n + \n + afterEvaluate { project - > \n + android . libraryVariants . all { variant - > \n + tasks . androidJavadocs . doFirst { \n + classpath + = files ( variant . javaCompile . classpath . files ) \n + } \n + } \n + } \n
. ci \ java - versions . properties \n - ES _ BUILD _ JAVA = openjdk15 \n + ES _ BUILD _ JAVA = openjdk14 \n buildSrc \ build . gradle \n - / / When upgrading forbidden apis , ensure dependency version is bumped in ThirdPartyPrecommitPlugin as well \n buildSrc \ src \ integTest \ java \ org \ elasticsearch \ gradle \ precommit \ ThirdPartyAuditTaskIT . java \n + public void testWithEmptyRules ( ) { \n + getGradleRunner ( " thirdPartyAudit " ) . withArguments ( \n + " : clean " , \n + " : empty " , \n + " - s " , \n + " - PcompileOnlyGroup = other . gradle : broken - log4j " , \n + " - PcompileOnlyVersion = 0 . 0 . 1 " , \n + " - PcompileGroup = other . gradle : dummy - io " , \n + " - PcompileVersion = 0 . 0 . 1 " \n + ) . buildAndFail ( ) ; \n + } \n + \n buildSrc \ src \ main \ java \ org \ elasticsearch \ gradle \ precommit \ ThirdPartyAuditPrecommitPlugin . java \n - project . getDependencies ( ) . add ( " forbiddenApisCliJar " , " de . thetaphi : forbiddenapis : 3 . 1 " ) ; \n + project . getDependencies ( ) . add ( " forbiddenApisCliJar " , " de . thetaphi : forbiddenapis : 2 . 7 " ) ; \n buildSrc \ src \ main \ resources \ minimumCompilerVersion \n - 15 \n + 14 \n
qa \ wildfly \ build . gradle \n + systemProperty ' tests . security . manager ' , ' false ' \n qa \ wildfly \ docker - compose - oss . yml \n - discovery . type : single - node \n + - discovery . type = single - node \n + - " ES _ JAVA _ OPTS = - Xms512m - Xmx512m " \n qa \ wildfly \ docker - compose . yml \n - discovery . type : single - node \n + - discovery . type = single - node \n + - " ES _ JAVA _ OPTS = - Xms512m - Xmx512m " \n qa \ wildfly \ src \ test \ java \ org \ elasticsearch \ wildfly \ WildflyIT . java \n - import org . apache . lucene . util . LuceneTestCase ; \n + import org . elasticsearch . test . ESTestCase ; \n - public class WildflyIT extends LuceneTestCase { \n + public class WildflyIT extends ESTestCase { \n
DaoCore \ src \ de \ greenrobot \ dao \ QueryBuilder . java \n - for ( Property property : properties ) { \n - checkOrderBuilder ( ) ; \n - append ( orderBuilder , property ) . append ( " ASC " ) ; \n - } \n + orderAscOrDesc ( " ASC " , properties ) ; \n + orderAscOrDesc ( " DESC " , properties ) ; \n + return this ; \n + } \n + \n + private void orderAscOrDesc ( String ascOrDescWithLeadingSpace , Property . . . properties ) { \n - append ( orderBuilder , property ) . append ( " DESC " ) ; \n + append ( orderBuilder , property ) ; \n + if ( String . class . equals ( property . type ) ) { \n + orderBuilder . append ( " COLLATE LOCALIZED " ) ; \n + } \n + orderBuilder . append ( ascOrDescWithLeadingSpace ) ; \n - return this ; \n
EventBus \ build . gradle \n + group = ' de . greenrobot . eventbus ' \n + version = ' 2 . 0 . 0 ' \n + \n - \n + } \n + \n + task javadocJar ( type : Jar , dependsOn : javadoc ) { \n + classifier = ' javadoc ' \n + from ' build / docs / javadoc ' \n + } \n + \n + task sourcesJar ( type : Jar ) { \n + from sourceSets . main . allSource \n + classifier = ' sources ' \n + } \n + \n + artifacts { \n + archives jar \n + archives javadocJar \n + archives sourcesJar \n
data - mapper \ index . md \n - permalink : / patterns / dm / \n + permalink : / patterns / data - mapper / \n - Java \n
README . md \n - [ Programming / Software Design Principles ] ( http : / / webpro . github . io / programming - principles / ) . \n + Programming / Software Design Principles . \n
DaoCore \ src \ main \ java \ org \ greenrobot \ greendao \ Property . java \n - / * * Creates an " not equal ( ' < > ' ) " condition for this property . * / \n + / * * Creates an " not equal ( ' & lt ; & gt ; ' ) " condition for this property . * / \n - / * * Creates an " greater than ( ' > ' ) " condition for this property . * / \n + / * * Creates an " greater than ( ' & gt ; ' ) " condition for this property . * / \n - / * * Creates an " less than ( ' < ' ) " condition for this property . * / \n + / * * Creates an " less than ( ' & lt ; ' ) " condition for this property . * / \n - / * * Creates an " greater or equal ( ' > = ' ) " condition for this property . * / \n + / * * Creates an " greater or equal ( ' & gt ; = ' ) " condition for this property . * / \n - / * * Creates an " less or equal ( ' < = ' ) " condition for this property . * / \n + / * * Creates an " less or equal ( ' & lt ; = ' ) " condition for this property . * / \n DaoGenerator \ src \ org \ greenrobot \ greendao \ generator \ Entity . java \n - / * * Flag if CREATE & DROP TABLE scripts should be skipped in Dao . * / \n + / * * Flag if CREATE and DROP TABLE scripts should be skipped in Dao . * / \n greendao - api \ src \ main \ java \ org \ greenrobot \ greendao \ annotation \ ToMany . java \n - * Array of matching source - > target properties \n + * Array of matching source - & gt ; target properties \n
EventBus \ src \ org \ greenrobot \ eventbus \ SubscriberMethodFinder . java \n + import android . annotation . TargetApi ; \n + import java . util . logging . Level ; \n - methods = findState . clazz . getMethods ( ) ; \n + try { \n + methods = findState . clazz . getMethods ( ) ; \n + } catch ( LinkageError error ) { / / super class of NoClassDefFoundError to be a bit more broad . . . \n + String msg = " Could not inspect methods of " + findState . clazz . getName ( ) + \n + " . Please consider using EventBus annotation processor to avoid reflection . " ; \n + throwLinkageError ( error , msg ) ; \n + return ; \n + } \n + @ TargetApi ( 19 ) \n + private void throwLinkageError ( LinkageError error , String msg ) { \n + try { \n + error = new LinkageError ( msg , error ) ; / / Wrapping only works with Java 7 / Android API 19 \n + } catch ( Throwable ex ) { \n + Logger . Default . get ( ) . log ( Level . SEVERE , msg ) ; / / Can not wrap , log additional info \n + } \n + throw error ; \n + } \n + \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ cache \ BufferedDiskCache . java \n + public void addKeyForAsyncProbing ( final CacheKey key ) { \n + Preconditions . checkNotNull ( key ) ; \n + mFileCache . probe ( key ) ; \n + } \n + \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ BitmapProbeProducer . java \n - preferredCache . probe ( cacheKey ) ; \n + preferredCache . addKeyForAsyncProbing ( cacheKey ) ; \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ producers \ EncodedProbeProducer . java \n - preferredCache . probe ( cacheKey ) ; \n + preferredCache . addKeyForAsyncProbing ( cacheKey ) ; \n
imagepipeline - base \ src \ main \ java \ com \ facebook \ cache \ disk \ DiskCacheConfig . java \n - private DiskCacheConfig ( Builder builder ) { \n + protected DiskCacheConfig ( Builder builder ) { \n + mContext = builder . mContext ; \n + Preconditions . checkState ( \n + builder . mBaseDirectoryPathSupplier ! = null | | mContext ! = null , \n + " Either a non - null context or a base directory path or supplier must be provided . " ) ; \n + if ( builder . mBaseDirectoryPathSupplier = = null & & mContext ! = null ) { \n + builder . mBaseDirectoryPathSupplier = \n + new Supplier < File > ( ) { \n + @ Override \n + public File get ( ) { \n + return mContext . getApplicationContext ( ) . getCacheDir ( ) ; \n + } \n + } ; \n + } \n - mContext = builder . mContext ; \n - Preconditions . checkState ( \n - mBaseDirectoryPathSupplier ! = null | | mContext ! = null , \n - " Either a non - null context or a base directory path or supplier must be provided . " ) ; \n - if ( mBaseDirectoryPathSupplier = = null & & mContext ! = null ) { \n - mBaseDirectoryPathSupplier = \n - new Supplier < File > ( ) { \n - @ Override \n - public File get ( ) { \n - return mContext . getApplicationContext ( ) . getCacheDir ( ) ; \n - } \n - } ; \n - } \n
x - pack \ plugin \ monitoring \ src \ test \ java \ org \ elasticsearch \ xpack \ monitoring \ action \ TransportMonitoringMigrateAlertsActionTests . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66586 " ) \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66586 " ) \n
x - pack \ plugin \ monitoring \ src \ test \ java \ org \ elasticsearch \ xpack \ monitoring \ action \ TransportMonitoringMigrateAlertsActionTests . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66586 " ) \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 66586 " ) \n
code \ src \ main \ com \ lmax \ disruptor \ BatchEventProcessor . java \n - private final Sequence sequence = new Sequence ( RingBuffer . INITIAL _ CURSOR _ VALUE ) ; \n + private volatile boolean running = true ; \n + private ExceptionHandler exceptionHandler = new FatalExceptionHandler ( ) ; \n - private ExceptionHandler exceptionHandler = new FatalExceptionHandler ( ) ; \n - private volatile boolean running = true ; \n + private final Sequence sequence = new Sequence ( RingBuffer . INITIAL _ CURSOR _ VALUE ) ; \n - while ( running ) \n + while ( true ) \n - / / Wake up from blocking wait and check if we should continue to run \n + if ( ! running ) \n + { \n + break ; \n + } \n
code \ src \ test \ com \ lmax \ disruptor \ DependencyBarrierTest . java \n + import java . util . concurrent . CountDownLatch ; \n + import java . util . concurrent . TimeUnit ; \n + \n - final Sequence sequence1 = new Sequence ( 8L ) ; \n - final Sequence sequence2 = new Sequence ( 8L ) ; \n - final Sequence sequence3 = new Sequence ( 8L ) ; \n + final CountDownLatch latch = new CountDownLatch ( 3 ) ; \n + final Sequence sequence1 = new CountDownLatchSequence ( 8L , latch ) ; \n + final Sequence sequence2 = new CountDownLatchSequence ( 8L , latch ) ; \n + final Sequence sequence3 = new CountDownLatchSequence ( 8L , latch ) ; \n - Thread . sleep ( 1000L ) ; \n + latch . await ( 3 , TimeUnit . SECONDS ) ; \n + \n + private final static class CountDownLatchSequence extends Sequence \n + { \n + private final CountDownLatch latch ; \n + \n + private CountDownLatchSequence ( final long initialValue , final CountDownLatch latch ) \n + { \n + super ( initialValue ) ; \n + this . latch = latch ; \n + } \n + \n + @ Override \n + public long get ( ) \n + { \n + latch . countDown ( ) ; \n + return super . get ( ) ; \n + } \n + } \n
okhttp - tls \ src \ main \ java \ okhttp3 \ tls \ HandshakeCertificates . kt \n - private val keyManager : X509KeyManager , \n - private val trustManager : X509TrustManager \n + @ get : JvmName ( " keyManager " ) val keyManager : X509KeyManager , \n + @ get : JvmName ( " trustManager " ) val trustManager : X509TrustManager \n + \n + @ JvmName ( " - deprecated _ keyManager " ) \n + @ Deprecated ( \n + message = " moved to val " , \n + replaceWith = ReplaceWith ( expression = " keyManager " ) , \n + level = DeprecationLevel . WARNING ) \n + @ JvmName ( " - deprecated _ trustManager " ) \n + @ Deprecated ( \n + message = " moved to val " , \n + replaceWith = ReplaceWith ( expression = " trustManager " ) , \n + level = DeprecationLevel . WARNING ) \n
okhttp \ src \ main \ java \ okhttp3 \ Response . kt \n - check ( code > 0 ) { " code < 0 : $ code " } \n + check ( code > = 0 ) { " code < 0 : $ code " } \n okhttp \ src \ test \ java \ okhttp3 \ ResponseTest . java \n + import static org . assertj . core . api . Assertions . assertThatThrownBy ; \n + @ Test public void negativeStatusCodeThrowsIllegalStateException ( ) { \n + assertThatThrownBy ( ( ) - > newResponse ( responseBody ( " set status code - 1 " ) , - 1 ) ) \n + . isInstanceOf ( IllegalStateException . class ) ; \n + } \n + \n + @ Test public void zeroStatusCodeIsValid ( ) { \n + Response response = newResponse ( responseBody ( " set status code 0 " ) , 0 ) ; \n + assertThat ( response . code ( ) ) . isEqualTo ( 0 ) ; \n + } \n + \n + return newResponse ( responseBody , 200 ) ; \n + } \n + \n + private Response newResponse ( ResponseBody responseBody , int code ) { \n - . code ( 200 ) \n + . code ( code ) \n
presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ reader \ MapDirectSelectiveStreamReader . java \n + int nestedPositionCount = 0 ; \n + nestedPositionCount + = length ; \n - int nestedPositionCount = populateNestedPositions ( positionCount , nestedOffset ) ; \n + populateNestedPositions ( positionCount , nestedPositionCount ) ; \n + int nestedPositionCount = 0 ; \n + nestedPositionCount + = length ; \n - int nestedPositionCount = populateNestedPositions ( nonNullPositionCount , nestedOffset ) ; \n + populateNestedPositions ( nonNullPositionCount , nestedPositionCount ) ; \n - private int populateNestedPositions ( int positionCount , int nestedOffset ) \n + private void populateNestedPositions ( int positionCount , int nestedPositionCount ) \n - nestedPositions = ensureCapacity ( nestedPositions , nestedOffset ) ; \n - int nestedPositionCount = 0 ; \n + nestedPositions = ensureCapacity ( nestedPositions , nestedPositionCount ) ; \n + int index = 0 ; \n - nestedPositions [ nestedPositionCount + + ] = nestedOffsets [ i ] + j ; \n + nestedPositions [ index + + ] = nestedOffsets [ i ] + j ; \n - return nestedPositionCount ; \n
presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveExternalWorkersQueries . java \n - ImmutableMap . of ( " optimizer . optimize - hash - generation " , " false " ) , \n + ImmutableMap . of ( " optimizer . optimize - hash - generation " , " false " , \n + " parse - decimal - literals - as - double " , " true " ) , \n + assertQuery ( " SELECT * FROM nation WHERE nationkey BETWEEN 3 AND 7 " ) ; \n + \n + @ Test \n + public void testCast ( ) \n + { \n + / / TODO Fix cast double - to - varchar and boolean - to - varchar . \n + / / cast ( 0 . 0 as varchar ) should return " 0 . 0 " , not " 0 " . \n + / / cast ( bool as varchar ) should return " TRUE " or " FALSE " , not " true " or " false " . \n + assertQuery ( " SELECT CAST ( linenumber as TINYINT ) , CAST ( linenumber AS SMALLINT ) , " + \n + " CAST ( linenumber AS INTEGER ) , CAST ( linenumber AS BIGINT ) , CAST ( quantity AS REAL ) , " + \n + " CAST ( orderkey AS DOUBLE ) , CAST ( orderkey AS VARCHAR ) FROM lineitem " ) ; \n + } \n + \n + @ Test \n + public void testValues ( ) \n + { \n + assertQuery ( " SELECT 1 , 0 . 24 , ceil ( 4 . 5 ) , ' A not too short ASCII string ' " ) ; \n + } \n
core \ java \ android \ content \ ContextWrapper . java \n - @ UnsupportedAppUsage ( maxTargetSdk = Build . VERSION _ CODES . R , trackingBug = 170729553 ) \n + @ UnsupportedAppUsage ( trackingBug = 175981568 ) \n
graphics \ java \ android \ graphics \ SurfaceTexture . java \n - @ UnsupportedAppUsage ( maxTargetSdk = Build . VERSION _ CODES . R , trackingBug = 170729553 ) \n + @ UnsupportedAppUsage ( trackingBug = 176388660 ) \n - @ UnsupportedAppUsage ( maxTargetSdk = Build . VERSION _ CODES . R , trackingBug = 170729553 ) \n + @ UnsupportedAppUsage ( trackingBug = 176388660 ) \n
fbcore \ src \ main \ java \ com \ facebook \ common \ util \ ByteConstants . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n fbcore \ src \ main \ java \ com \ facebook \ common \ util \ ExceptionWithNoStacktrace . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n fbcore \ src \ main \ java \ com \ facebook \ common \ util \ StreamUtil . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n
fbcore \ src \ main \ java \ com \ facebook \ common \ util \ HashCodeUtil . java \n + import com . facebook . infer . annotation . Nullsafe ; \n + @ Nullsafe ( Nullsafe . Mode . STRICT ) \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ org \ androidannotations \ processing \ rest \ RestProcessor . java \n + import static org . androidannotations . helper . CanonicalNameConstants . CLIENT _ HTTP _ REQUEST _ INTERCEPTOR ; \n + JClass clientInterceptorClass = eBeansHolder . refClass ( CLIENT _ HTTP _ REQUEST _ INTERCEPTOR ) ; \n + listClass = listClass . narrow ( clientInterceptorClass ) ; \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ org \ androidannotations \ processing \ rest \ GetProcessor . java \n + import javax . lang . model . element . ExecutableElement ; \n + import org . androidannotations . helper . CanonicalNameConstants ; \n + import org . androidannotations . processing . EBeanHolder ; \n + \n + import com . sun . codemodel . JBlock ; \n + import com . sun . codemodel . JClass ; \n + import com . sun . codemodel . JExpr ; \n + import com . sun . codemodel . JExpression ; \n + import com . sun . codemodel . JInvocation ; \n + import com . sun . codemodel . JVar ; \n + @ Override \n + protected JVar generateHttpEntityVar ( MethodProcessorHolder methodHolder ) { \n + ExecutableElement executableElement = ( ExecutableElement ) methodHolder . getElement ( ) ; \n + EBeanHolder holder = methodHolder . getHolder ( ) ; \n + JClass httpEntity = holder . refClass ( CanonicalNameConstants . HTTP _ ENTITY ) ; \n + JExpression httpEntityValue ; \n + \n + JBlock body = methodHolder . getBody ( ) ; \n + JVar httpHeadersVar = generateHttpHeadersVar ( holder , body , executableElement ) ; \n + \n + boolean hasHeaders = httpHeadersVar ! = null ; \n + \n + if ( hasHeaders ) { \n + JInvocation newHttpEntityVarCall = JExpr . _ new ( httpEntity . narrow ( Object . class ) ) ; \n + newHttpEntityVarCall . arg ( httpHeadersVar ) ; \n + httpEntityValue = newHttpEntityVarCall ; \n + } else { \n + httpEntityValue = httpEntity . staticRef ( " EMPTY " ) ; \n + } \n + \n + JVar httpEntityVar ; \n + String httpEntityVarName = " requestEntity " ; \n + httpEntityVar = body . decl ( httpEntity . narrow ( Object . class ) , httpEntityVarName , httpEntityValue ) ; \n + \n + return httpEntityVar ; \n + } \n
hystrix - contrib \ hystrix - javanica \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ javanica \ conf \ HystrixPropertiesManager . java \n + public static final String ALLOW _ MAXIMUM _ SIZE _ TO _ DIVERGE _ FROM _ CORE _ SIZE = " allowMaximumSizeToDivergeFromCoreSize " ; \n + . put ( ALLOW _ MAXIMUM _ SIZE _ TO _ DIVERGE _ FROM _ CORE _ SIZE , new PropSetter < HystrixThreadPoolProperties . Setter , String > ( ) { \n + @ Override \n + public void set ( HystrixThreadPoolProperties . Setter setter , String value ) throws IllegalArgumentException { \n + setter . withAllowMaximumSizeToDivergeFromCoreSize ( toBoolean ( value ) ) ; \n + } \n + } ) \n hystrix - contrib \ hystrix - javanica \ src \ test \ java \ com \ netflix \ hystrix \ contrib \ javanica \ test \ common \ configuration \ command \ BasicCommandPropertiesTest . java \n - assertEquals ( 25 , ( int ) properties . maximumSize ( ) . get ( ) ) ; \n + assertEquals ( 35 , ( int ) properties . maximumSize ( ) . get ( ) ) ; \n + assertEquals ( true , properties . getAllowMaximumSizeToDivergeFromCoreSize ( ) . get ( ) ) ; \n - @ HystrixProperty ( name = " maximumSize " , value = " 25 " ) , \n + @ HystrixProperty ( name = " maximumSize " , value = " 35 " ) , \n + @ HystrixProperty ( name = " allowMaximumSizeToDivergeFromCoreSize " , value = " true " ) , \n
hystrix - contrib \ hystrix - codahale - metrics - publisher \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ codahalemetricspublisher \ HystrixCodaHaleMetricsPublisherThreadPool . java \n - return properties . maximumSize ( ) . get ( ) ; \n + return properties . actualMaximumSize ( ) ; \n
hystrix - core \ src \ test \ java \ com \ netflix \ hystrix \ metric \ consumer \ CumulativeThreadPoolEventCounterStreamTest . java \n - saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 200 ) ) ; \n + saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 700 ) ) ; \n
hystrix - core \ src \ test \ java \ com \ netflix \ hystrix \ metric \ consumer \ HealthCountsStreamTest . java \n - saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 200 , HystrixCommandProperties . ExecutionIsolationStrategy . SEMAPHORE ) ) ; \n + saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 700 , HystrixCommandProperties . ExecutionIsolationStrategy . SEMAPHORE ) ) ; \n - saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 200 ) ) ; \n + saturators . add ( CommandStreamTest . Command . from ( groupKey , key , HystrixEventType . SUCCESS , 700 ) ) ; \n
src \ main \ java \ org \ junit \ rules \ TestWatcher . java \n - * protected void failed ( Description d ) { \n - * watchedLog + = d + & quot ; \ n & quot ; ; \n + * protected void failed ( Throwable e , Description description ) { \n + * watchedLog + = description + & quot ; \ n & quot ; ; \n - * protected void succeeded ( Description d ) { \n - * watchedLog + = d + & quot ; & quot ; + & quot ; success ! \ n & quot ; ; \n + * protected void succeeded ( Description description ) { \n + * watchedLog + = description + & quot ; & quot ; + & quot ; success ! \ n & quot ; ; \n
src \ main \ java \ org \ junit \ rules \ RuleChain . java \n - * public TestRule chain = RuleChain \n + * public RuleChain chain = RuleChain \n src \ main \ java \ org \ junit \ rules \ TestWatcher . java \n - * public TestRule watchman = new TestWatcher ( ) { \n + * public TestWatcher watchman = new TestWatcher ( ) { \n src \ main \ java \ org \ junit \ rules \ Timeout . java \n - * public TestRule globalTimeout = new Timeout ( 20 ) ; \n + * public Timeout globalTimeout = new Timeout ( 20 ) ; \n src \ main \ java \ org \ junit \ rules \ Verifier . java \n - * public TestRule verifier = new Verifier ( ) { \n + * public Verifier verifier = new Verifier ( ) { \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ UriBeaconDiscoveryService . java \n - String contentText = " Pull down to see them . " ; \n + String contentText = getString ( R . string . summary _ notification _ pull _ down ) ; \n android \ PhysicalWeb \ app \ src \ main \ res \ values \ strings . xml \n + < string name = " summary _ notification _ pull _ down " > Pull down to see them . < / string > \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ NearbyBeaconsFragment . java \n + if ( mIsScanRunning ) { \n + return ; \n + } \n
src \ test \ java \ rx \ android \ operators \ OperatorObserveFromAndroidComponentTest . java \n - import java . lang . reflect . Constructor ; \n - import java . lang . reflect . Field ; \n - import java . lang . reflect . InvocationTargetException ; \n - import java . util . Arrays ; \n - import java . util . concurrent . Callable ; \n - import java . util . concurrent . Executors ; \n - import java . util . concurrent . Future ; \n - import java . util . concurrent . TimeUnit ; \n - import java . util . concurrent . atomic . AtomicReference ; \n - \n - \n + \n + import java . lang . reflect . Constructor ; \n + import java . lang . reflect . Field ; \n + import java . lang . reflect . InvocationTargetException ; \n + import java . util . Arrays ; \n + import java . util . concurrent . atomic . AtomicReference ; \n + \n - final Observable < Integer > testObservable = Observable . from ( 1 ) \n + final Observable < Integer > testObservable = Observable . just ( 1 ) \n
rxjava - contrib \ rxjava - android - samples \ build . gradle \n - classpath ' com . android . tools . build : gradle : 0 . 8 . + ' \n + classpath ' com . android . tools . build : gradle : 0 . 9 . + ' \n
new file \n library \ src \ main \ res \ values - sw600dp \ dimen . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < resources > \n + < dimen name = " appIntroDefaultPaddingLeft " > 80dp < / dimen > \n + < dimen name = " appIntroDefaultPaddingRight " > 80dp < / dimen > \n + < / resources > \n new file \n library \ src \ main \ res \ values - sw720dp \ dimen . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < resources > \n + < dimen name = " appIntroDefaultPaddingLeft " > 80dp < / dimen > \n + < dimen name = " appIntroDefaultPaddingRight " > 80dp < / dimen > \n + < / resources > \n
new file \n library \ src \ main \ res \ values - sw600dp \ dimen . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < resources > \n + < dimen name = " appIntroDefaultPaddingLeft " > 80dp < / dimen > \n + < dimen name = " appIntroDefaultPaddingRight " > 80dp < / dimen > \n + < / resources > \n new file \n library \ src \ main \ res \ values - sw720dp \ dimen . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < resources > \n + < dimen name = " appIntroDefaultPaddingLeft " > 80dp < / dimen > \n + < dimen name = " appIntroDefaultPaddingRight " > 80dp < / dimen > \n + < / resources > \n
presto - tests \ src \ test \ java \ com \ facebook \ presto \ tests \ TestDistributedSpilledQueries . java \n + import org . testng . annotations . Test ; \n + @ Test ( timeOut = 4 * 60 * 1000 ) \n + @ Override \n + public void testJoinPredicatePushdown ( ) \n + { \n + super . testJoinPredicatePushdown ( ) ; \n + } \n + \n
pull _ request _ template . md \n + Test plan - ( Please fill in how you tested your changes ) \n + \n
dubbo - common \ pom . xml \n - - > \n - < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > \n + < project xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " xmlns : xsi = " http : / / www . w3 . org / 2001 / XMLSchema - instance " \n + xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > \n + < ! - - Common Annotations API - - > \n + < dependency > \n + < groupId > javax . annotation < / groupId > \n + < artifactId > javax . annotation - api < / artifactId > \n + < / dependency > \n - < profiles > \n - < profile > \n - < id > javax . annotation < / id > \n - < activation > \n - < jdk > [ 1 . 11 , ) < / jdk > \n - < / activation > \n - < dependencies > \n - < dependency > \n - < groupId > javax . annotation < / groupId > \n - < artifactId > javax . annotation - api < / artifactId > \n - < version > 1 . 3 . 1 < / version > \n - < / dependency > \n - < / dependencies > \n - < / profile > \n - < / profiles > \n dubbo - dependencies - bom \ pom . xml \n + < javax _ annotation - api _ version > 1 . 3 . 2 < / javax _ annotation - api _ version > \n + < ! - - Common Annotations API - - > \n + < dependency > \n + < groupId > javax . annotation < / groupId > \n + < artifactId > javax . annotation - api < / artifactId > \n + < version > $ { javax _ annotation - api _ version } < / version > \n + < / dependency > \n + < ! - - Servlet API - - > \n
dubbo - build - tools \ pom . xml \n + \n + < build > \n + < plugins > \n + < plugin > \n + < groupId > org . apache . maven . plugins < / groupId > \n + < artifactId > maven - deploy - plugin < / artifactId > \n + < version > 2 . 8 . 2 < / version > \n + < configuration > \n + < skip > true < / skip > \n + < / configuration > \n + < / plugin > \n + < / plugins > \n + < / build > \n + \n
build . gradle \n - version = new Version ( major : 3 , minor : 3 , revision : 5 , stage : " rc2 " ) \n + version = new Version ( major : 3 , minor : 3 , revision : 5 ) \n
src \ perftest \ java \ com \ lmax \ disruptor \ sequenced \ OneToOneSequencedThroughputTest . java \n - / / failIfNot ( expectedResult , handler . getValue ( ) ) ; \n + failIfNot ( expectedResult , handler . getValue ( ) ) ; \n
README . md \n + # # # 3 . 4 . 1 \n + \n + - Fix race between run ( ) and halt ( ) on BatchEventProcessor . \n + \n - Drop support for JDK6 , support JDK7 and above only . \n build . gradle \n - version = new Version ( major : 3 , minor : 4 , revision : 0 ) \n + version = new Version ( major : 3 , minor : 4 , revision : 1 , stage : " rc1 " ) \n
src \ main \ java \ com \ lmax \ disruptor \ BatchEventProcessor . java \n - running . set ( IDLE ) ; \n
pom . xml \n + < parent > \n + < groupId > org . sonatype . oss < / groupId > \n + < artifactId > oss - parent < / artifactId > \n + < version > 7 < / version > \n + < / parent > \n + < description > A Sinatra inspired micro web framework < / description > \n + < licenses > \n + < license > \n + < name > The Apache Software License , Version 2 . 0 < / name > \n + < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > \n + < distribution > repo < / distribution > \n + < / license > \n + < / licenses > \n + < scm > \n + < connection > scm : git : git @ github . com : perwendel / spark . git < / connection > \n + < developerConnection > scm : git : git @ github . com : perwendel / spark . git < / developerConnection > \n + < url > scm : git : git @ github . com : perwendel / spark . git < / url > \n + < / scm > \n + < developers > \n + < / developers > \n - \n - < distributionManagement > \n - < snapshotRepository > \n - < id > spark < / id > \n - < url > http : / / 46 . 137 . 105 . 19 : 8081 / nexus / content / repositories / spark < / url > \n - < / snapshotRepository > \n - < / distributionManagement > \n - \n - \n
pom . xml \n - < version > 1 . 1 < / version > \n + < version > 1 . 1 - SNAPSHOT < / version > \n
src \ main \ java \ io \ vertx \ core \ http \ HttpClientResponse . java \n - * @ return The priority of associated HTTP / 2 stream \n + * Gets the priority of the associated HTTP / 2 stream \n + * @ return The priority of the associated HTTP / 2 stream for HTTP / 2 otherwise { @ code null } \n
src \ main \ java \ io \ vertx \ core \ http \ impl \ Http2ServerRequestImpl . java \n - streamPriorityHandler = handler ; \n + synchronized ( conn ) { \n + streamPriorityHandler = handler ; \n + } \n - System . out . println ( getClass ( ) . getName ( ) + " . handlePriorityChange ( " + streamPriority + " ) " ) ; \n + Handler < StreamPriority > handler ; \n + boolean priorityChanged = false ; \n - Handler < StreamPriority > handler = streamPriorityHandler ; \n - if ( handler ! = null ) { \n - if ( streamPriority ! = null & & ! streamPriority . equals ( getStreamPriority ( ) ) ) { \n + handler = streamPriorityHandler ; \n + if ( streamPriority ! = null & & ! streamPriority . equals ( getStreamPriority ( ) ) ) { \n - handler . handle ( streamPriority ) ; \n - } \n + priorityChanged = true ; \n + if ( handler ! = null & & priorityChanged ) { \n + handler . handle ( streamPriority ) ; \n + } \n
web - service \ helpers . py \n + return RankedResponse ( metadata _ output ) \n + \n + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # \n + \n + def RankedResponse ( metadata _ output ) : \n + def ComputeDistance ( obj ) : \n + try : \n + rssi = int ( obj [ " rssi " ] ) \n + tx = int ( obj [ " tx " ] ) \n + if rssi = = 127 : \n + # TODO : What does rssi 127 mean , compared to no value ? \n + return None \n + path _ loss = tx - rssi \n + distance = pow ( 10 . 0 , path _ loss - 41 ) \n + return distance \n + except : \n + return None \n + \n + def SortByDistanceCmp ( a , b ) : \n + dista , distb = ComputeDistance ( a ) , ComputeDistance ( b ) \n + if dista is None and distb is None : \n + return 0 # No winner \n + if dista is None : \n + return - 1 # assume b is closer \n + if distb is None : \n + return 1 # assume a is closer \n + return distb - dista # We want smaller distance first \n + \n + metadata _ output . sort ( SortByDistanceCmp ) \n
web - service \ helpers . py \n - device _ data [ ' groupid ' ] = ComputeGroupId ( url , siteInfo . title , siteInfo . description ) \n + device _ data [ ' groupid ' ] = ComputeGroupId ( siteInfo . url , siteInfo . title , siteInfo . description ) \n - seed = domain + title \n + seed = domain + ' \ 0 ' + title \n
src \ jvm \ clojure \ lang \ APersistentVector . java \n - final IPersistentVector v ; \n - final int start ; \n - final int end ; \n + public final IPersistentVector v ; \n + public final int start ; \n + public final int end ; \n src \ jvm \ clojure \ lang \ PersistentVector . java \n - static class Node implements Serializable { \n - transient final AtomicReference < Thread > edit ; \n - final Object [ ] array ; \n + public static class Node implements Serializable { \n + transient public final AtomicReference < Thread > edit ; \n + public final Object [ ] array ; \n - Node ( AtomicReference < Thread > edit , Object [ ] array ) { \n + public Node ( AtomicReference < Thread > edit , Object [ ] array ) { \n - final static Node EMPTY _ NODE = new Node ( NOEDIT , new Object [ 32 ] ) ; \n + public final static Node EMPTY _ NODE = new Node ( NOEDIT , new Object [ 32 ] ) ; \n - final int shift ; \n - final Node root ; \n - final Object [ ] tail ; \n + public final int shift ; \n + public final Node root ; \n + public final Object [ ] tail ; \n
src \ jvm \ clojure \ lang \ APersistentVector . java \n - static class SubVector extends APersistentVector implements IObj { \n + public static class SubVector extends APersistentVector implements IObj { \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ request \ BasePostprocessor . java \n + import android . graphics . Paint ; \n + / * * \n + * This is the default value that define if native bitmap copy is enable or not . If it isn ' t , the \n + * fallback is drawing the bitmap using { @ link Canvas # drawBitmap ( Bitmap , float , float , Paint ) } . \n + * / \n + public static boolean sEnableNativeBitmapCopy = true ; \n + \n - * Copies the content of < code > sourceBitmap < / code > to < code > destBitmap < / code > . Both bitmaps must \n - * have the same width and height . If their { @ link Bitmap . Config } are identical , the memory is \n - * directly copied . Otherwise , the < code > sourceBitmap < / code > is drawn into \n - * < code > destBitmap < / code > . \n + * Copies the content of { @ code sourceBitmap } to { @ code destBitmap } . Both bitmaps must have the \n + * same width and height . If their { @ link Bitmap . Config } are identical , the memory is directly \n + * copied if { @ link # sEnableNativeBitmapCopy } is true . Otherwise , the { @ code sourceBitmap } is \n + * drawn into { @ code destBitmap } . \n - if ( destBitmap . getConfig ( ) = = sourceBitmap . getConfig ( ) ) { \n + if ( destBitmap . getConfig ( ) = = sourceBitmap . getConfig ( ) & & sEnableNativeBitmapCopy ) { \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ nativecode \ DalvikPurgeableDecoder . java \n - private static boolean sEnableAshmemBitmap = true ; \n - \n - if ( sEnableAshmemBitmap ) { \n - / / Decode the image into a ' purgeable ' bitmap that lives on the ashmem heap \n - options . inPurgeable = true ; \n - / / Enable copy of of bitmap to enable purgeable decoding by filedescriptor \n - options . inInputShareable = true ; \n - } \n + / / Decode the image into a ' purgeable ' bitmap that lives on the ashmem heap \n + options . inPurgeable = true ; \n + / / Enable copy of of bitmap to enable purgeable decoding by filedescriptor \n + options . inInputShareable = true ; \n - if ( sEnableAshmemBitmap ) { \n - / / Real decoding happens here - if the image was corrupted , this will throw an exception \n - nativePinBitmap ( bitmap ) ; \n - } \n + / / Real decoding happens here - if the image was corrupted , this will throw an exception \n + nativePinBitmap ( bitmap ) ; \n - public static void enableAshmemBitmap ( final boolean enableAshmemBitmap ) { \n - sEnableAshmemBitmap = enableAshmemBitmap ; \n - } \n - \n
app \ build . gradle \n - implementation ( " io . coil - kt : coil : 1 . 1 . 0 " ) \n + implementation ( " io . coil - kt : coil : 1 . 1 . 1 " ) \n - implementation ' com . mikepenz : google - material - typeface : 3 . 0 . 1 . 6 . original - kotlin @ aar ' \n + implementation ' com . mikepenz : google - material - typeface : 4 . 0 . 0 . 1 - kotlin @ aar ' \n - implementation " org . jetbrains . kotlin : kotlin - stdlib - jdk7 : $ { versions . kotlin } " \n + implementation " org . jetbrains . kotlin : kotlin - stdlib - jdk8 : $ { versions . kotlin } " \n build . gradle \n - material : ' 1 . 2 . 1 ' , \n + material : ' 1 . 3 . 0 ' , \n - kotlin : " 1 . 4 . 21 " , \n + kotlin : " 1 . 4 . 30 " , \n - iconics : " 5 . 2 . 1 " , \n - aboutLibs : " 8 . 6 . 3 " , \n - navigation : " 2 . 3 . 2 " , \n - detekt : ' 1 . 14 . 2 ' , \n + iconics : " 5 . 2 . 5 " , \n + aboutLibs : " 8 . 8 . 1 " , \n + navigation : " 2 . 3 . 3 " , \n + detekt : ' 1 . 15 . 0 ' , \n - jcenter ( ) \n + jcenter ( ) \n - classpath ' com . android . tools . build : gradle : 4 . 1 . 1 ' \n + classpath ' com . android . tools . build : gradle : 4 . 1 . 2 ' \n - jcenter ( ) \n + jcenter ( ) \n gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 7 . 1 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 8 . 2 - all . zip \n
README . md \n - - Kotlin & & New | [ v8 . 3 . 1 ] ( https : / / github . com / mikepenz / MaterialDrawer / tree / v8 . 3 . 1 ) \n + - Kotlin & & New | [ v8 . 3 . 2 ] ( https : / / github . com / mikepenz / MaterialDrawer / tree / v8 . 3 . 2 ) \n - Kotlin | [ v7 . 0 . 0 ] ( https : / / github . com / mikepenz / MaterialDrawer / tree / v7 . 0 . 0 ) | ( Builder approach like v6 . x ) \n - Java & & AndroidX | [ v6 . 1 . 2 ] ( https : / / github . com / mikepenz / MaterialDrawer / tree / v6 . 1 . 2 ) \n - Java & & AppCompat | [ v6 . 0 . 9 ] ( https : / / github . com / mikepenz / MaterialDrawer / tree / v6 . 0 . 9 ) \n build . gradle \n - versionName : " 8 . 3 . 1 " , \n - versionCode : 8031 \n + versionName : " 8 . 3 . 2 " , \n + versionCode : 8032 \n
compiler \ tests - different - jdk \ build . gradle . kts \n - codegenTest ( target = 6 , jvm = 15 ) { \n - jvmArgs ( " - XX : - FailOverToOldVerifier " ) \n - } \n + codegenTest ( target = 6 , jvm = 15 ) { } \n - codegenTest ( target = 8 , jvm = 15 ) { \n - jvmArgs ( " - XX : - FailOverToOldVerifier " ) \n - } \n + codegenTest ( target = 8 , jvm = 15 ) { } \n - jvmArgs ( " - XX : - FailOverToOldVerifier " ) \n
compiler \ tests - different - jdk \ tests \ org \ jetbrains \ kotlin \ codegen \ jdk \ CustomJvmTargetOnJvmBaseTest . kt \n - import org . jetbrains . kotlin . codegen . jdk . RunOnlyJdk6Test \n - import org . jetbrains . kotlin . test . runners . codegen . BlackBoxCodegenTestGenerated \n - import org . jetbrains . kotlin . test . runners . codegen . BlackBoxInlineCodegenTestGenerated \n - import org . jetbrains . kotlin . test . runners . codegen . CompileKotlinAgainstInlineKotlinTestGenerated \n + import org . jetbrains . kotlin . test . runners . codegen . * \n - CompileKotlinAgainstInlineKotlinTestGenerated : : class \n + CompileKotlinAgainstInlineKotlinTestGenerated : : class , \n + \n + IrBlackBoxCodegenTestGenerated : : class , \n + IrBlackBoxInlineCodegenTestGenerated : : class , \n + IrCompileKotlinAgainstInlineKotlinTestGenerated : : class \n
compiler \ fir \ fir2ir \ src \ org \ jetbrains \ kotlin \ fir \ backend \ generators \ CallAndReferenceGenerator . kt \n + import org . jetbrains . kotlin . backend . common . ir . isMethodOfAny \n - dispatchReceiver = qualifiedAccess . findIrDispatchReceiver ( explicitReceiverExpression ) \n + val baseDispatchReceiver = qualifiedAccess . findIrDispatchReceiver ( explicitReceiverExpression ) \n + dispatchReceiver = \n + if ( ! ownerFunction . isMethodOfAny ( ) | | baseDispatchReceiver ? . type ? . classOrNull ? . owner ? . isInterface ! = true ) { \n + baseDispatchReceiver \n + } else { \n + / / NB : for FE 1 . 0 , this type cast is added by InterfaceObjectCallsLowering \n + / / However , it doesn ' t work for FIR due to different f / o structure \n + / / ( FIR calls Any method directly , but FE 1 . 0 calls its interface f / o instead ) \n + IrTypeOperatorCallImpl ( \n + baseDispatchReceiver . startOffset , \n + baseDispatchReceiver . endOffset , \n + irBuiltIns . anyType , \n + IrTypeOperator . IMPLICIT _ CAST , \n + irBuiltIns . anyType , \n + baseDispatchReceiver \n + ) \n + } \n compiler \ testData \ codegen \ bytecodeText \ hashCode \ interfaceHashCode . kt \n - / / IGNORE _ BACKEND _ FIR : JVM _ IR \n
compiler \ daemon \ daemon - common - new \ src \ org \ jetbrains \ kotlin \ daemon \ common \ experimental \ CompileServiceClientSideImpl . kt \n - runWithTimeout ( timeout = KEEPALIVE _ PERIOD / 2 ) { \n + val keepAliveAcknowledgement = runWithTimeout ( timeout = KEEPALIVE _ PERIOD / 2 ) { \n - } ? : if ( ! keepAliveSuccess ( ) ) readActor . send ( StopAllRequests ( ) ) . also { \n + } \n + if ( keepAliveAcknowledgement = = null & & ! keepAliveSuccess ( ) ) { \n + readActor . send ( StopAllRequests ( ) ) \n
tests \ StagedInstallTest \ Android . bp \n + " cts - install - lib - host " , \n tests \ StagedInstallTest \ src \ com \ android \ tests \ stagedinstallinternal \ host \ StagedInstallInternalTest . java \n + import com . android . cts . install . lib . host . InstallUtilsHost ; \n + private final InstallUtilsHost mHostUtils = new InstallUtilsHost ( this ) ; \n - mTestUtils . isApexUpdateSupported ( ) ) ; \n + mHostUtils . isApexUpdateSupported ( ) ) ; \n - mTestUtils . isApexUpdateSupported ( ) ) ; \n + mHostUtils . isApexUpdateSupported ( ) ) ; \n - mTestUtils . isApexUpdateSupported ( ) ) ; \n + mHostUtils . isApexUpdateSupported ( ) ) ; \n
tests \ StagedInstallTest \ Android . bp \n - " module _ test _ util " , \n tests \ StagedInstallTest \ src \ com \ android \ tests \ stagedinstallinternal \ host \ StagedInstallInternalTest . java \n - import com . android . tests . util . ModuleTestUtils ; \n - private final ModuleTestUtils mTestUtils = new ModuleTestUtils ( this ) ; \n - final File apexFile = mTestUtils . getTestFile ( SHIM _ V2 ) ; \n + final File apexFile = mHostUtils . getTestFile ( SHIM _ V2 ) ; \n - final File apexFile = mTestUtils . getTestFile ( SHIM _ V2 ) ; \n + final File apexFile = mHostUtils . getTestFile ( SHIM _ V2 ) ; \n - final File apexFile = mTestUtils . getTestFile ( SHIM _ V2 ) ; \n + final File apexFile = mHostUtils . getTestFile ( SHIM _ V2 ) ; \n - final File apexFile = mTestUtils . getTestFile ( SHIM _ V2 ) ; \n + final File apexFile = mHostUtils . getTestFile ( SHIM _ V2 ) ; \n - final File apexFile = mTestUtils . getTestFile ( SHIM _ V2 ) ; \n - final File apkFile = mTestUtils . getTestFile ( APK _ A ) ; \n + final File apexFile = mHostUtils . getTestFile ( SHIM _ V2 ) ; \n + final File apkFile = mHostUtils . getTestFile ( APK _ A ) ; \n
caching \ src \ main \ java \ com \ iluwatar \ caching \ CacheStore . java \n - static LruCache cache = null ; \n + static LruCache cache ; \n caching \ src \ main \ java \ com \ iluwatar \ caching \ LruCache . java \n - Node head = null ; \n - Node end = null ; \n + Node head ; \n + Node end ; \n chain \ src \ main \ java \ com \ iluwatar \ chain \ Request . java \n - private boolean handled = false ; \n + private boolean handled ; \n fluentinterface \ src \ main \ java \ com \ iluwatar \ fluentinterface \ fluentiterable \ lazy \ DecoratingIterator . java \n - private TYPE next = null ; \n + private TYPE next ; \n fluentinterface \ src \ main \ java \ com \ iluwatar \ fluentinterface \ fluentiterable \ lazy \ LazyFluentIterable . java \n - int currentIndex = 0 ; \n + int currentIndex ; \n - private int currentIndex = 0 ; \n + private int currentIndex ; \n model - view - presenter \ src \ main \ java \ com \ iluwatar \ model \ view \ presenter \ FileLoader . java \n - private boolean loaded = false ; \n + private boolean loaded ; \n monostate \ src \ main \ java \ com \ iluwatar \ monostate \ LoadBalancer . java \n - private static int id = 0 ; \n - private static int lastServedId = 0 ; \n + private static int id ; \n + private static int lastServedId ; \n producer - consumer \ src \ main \ java \ com \ iluwatar \ producer \ consumer \ Producer . java \n - private int itemId = 0 ; \n + private int itemId ; \n reader - writer - lock \ src \ main \ java \ com \ iluwatar \ reader \ writer \ lock \ ReaderWriterLock . java \n - private int currentReaderCount = 0 ; \n + private int currentReaderCount ; \n reader - writer - lock \ src \ main \ java \ com \ iluwatar \ reader \ writer \ lock \ Writer . java \n - private Lock writeLock = null ; \n + private Lock writeLock ; \n singleton \ src \ main \ java \ com \ iluwatar \ singleton \ ThreadSafeLazyLoadedIvoryTower . java \n - private static ThreadSafeLazyLoadedIvoryTower instance = null ; \n + private static ThreadSafeLazyLoadedIvoryTower instance ; \n twin \ src \ main \ java \ com \ iluwatar \ twin \ BallItem . java \n - private boolean isSuspended = false ; \n + private boolean isSuspended ; \n
event - aggregator \ src \ main \ java \ com \ iluwatar \ event \ aggregator \ EventEmitter . java \n - public void registerObserver ( EventObserver obs ) { \n + public final void registerObserver ( EventObserver obs ) { \n iterator \ src \ main \ java \ com \ iluwatar \ iterator \ Item . java \n - public void setType ( ItemType type ) { \n + public final void setType ( ItemType type ) { \n layers \ src \ main \ java \ com \ iluwatar \ layers \ Cake . java \n - public void setLayers ( Set < CakeLayer > layers ) { \n + public final void setLayers ( Set < CakeLayer > layers ) { \n layers \ src \ main \ java \ com \ iluwatar \ layers \ CakeLayer . java \n - public void setName ( String name ) { \n + public final void setName ( String name ) { \n - public void setCalories ( int calories ) { \n + public final void setCalories ( int calories ) { \n layers \ src \ main \ java \ com \ iluwatar \ layers \ CakeTopping . java \n - public void setName ( String name ) { \n + public final void setName ( String name ) { \n - public int getCalories ( ) { \n + public final int getCalories ( ) { \n
dubbo - metadata - report \ dubbo - metadata - report - redis \ src \ main \ java \ org \ apache \ dubbo \ metadata \ store \ redis \ RedisMetadataReport . java \n + password = url . getPassword ( ) ; \n - pool = new JedisPool ( new JedisPoolConfig ( ) , url . getHost ( ) , url . getPort ( ) , timeout , url . getPassword ( ) , database ) ; \n + pool = new JedisPool ( new JedisPoolConfig ( ) , url . getHost ( ) , url . getPort ( ) , timeout , password , database ) ; \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractInterfaceConfig . java \n + cc . setParameters ( new HashMap < > ( ) ) ; \n + cc . getParameters ( ) . put ( org . apache . dubbo . remoting . Constants . CLIENT _ KEY , rc . getClient ( ) ) ; \n
version . txt \n - 5 . 12 . 0 \n + 5 . 12 . 1 - SNAPSHOT \n
version . txt \n - 5 . 13 . 0 \n + 5 . 13 . 1 - SNAPSHOT \n
packages \ rn - tester \ js \ examples \ TextInput \ TextInputSharedExamples . js \n - name : ' clearInput ' , \n + name : ' clearButton ' , \n
Libraries \ Components \ Pressable \ Pressable . js \n + / * * \n + * Whether a press gesture can be interrupted by a parent gesture such as a \n + * scroll event . Defaults to true . \n + * / \n + cancelable ? : ? boolean , \n + \n - onLayout ? : ? ( event : LayoutEvent ) = > void , \n + onLayout ? : ? ( event : LayoutEvent ) = > mixed , \n - onLongPress ? : ? ( event : PressEvent ) = > void , \n + onLongPress ? : ? ( event : PressEvent ) = > mixed , \n - onPress ? : ? ( event : PressEvent ) = > void , \n + onPress ? : ? ( event : PressEvent ) = > mixed , \n - onPressIn ? : ? ( event : PressEvent ) = > void , \n + onPressIn ? : ? ( event : PressEvent ) = > mixed , \n - onPressOut ? : ? ( event : PressEvent ) = > void , \n + onPressOut ? : ? ( event : PressEvent ) = > mixed , \n + cancelable , \n + cancelable , \n + cancelable , \n
mobile \ build . gradle \n - abortOnError false \n + abortOnError true \n deleted file \n mobile \ src \ main \ res \ layout \ media _ details _ activity . xml \n - < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n - < ! - - \n - Copyright ( C ) 2014 The Android Open Source Project \n - \n - Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - you may not use this file except in compliance with the License . \n - You may obtain a copy of the License at \n - \n - http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - \n - Unless required by applicable law or agreed to in writing , software \n - distributed under the License is distributed on an " AS IS " BASIS , \n - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - See the License for the specific language governing permissions and \n - limitations under the License . \n - - - > \n - < fragment xmlns : android = " http : / / schemas . android . com / apk / res / android " \n - android : name = " com . example . android . uamp . ui . tv . MediaDetailsFragment " \n - android : id = " @ + id / details _ fragment " \n - android : layout _ width = " match _ parent " \n - android : layout _ height = " match _ parent " \n - / > \n
mobile \ build . gradle \n - abortOnError false \n + abortOnError true \n deleted file \n mobile \ src \ main \ res \ layout \ media _ details _ activity . xml \n - < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n - < ! - - \n - Copyright ( C ) 2014 The Android Open Source Project \n - \n - Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - you may not use this file except in compliance with the License . \n - You may obtain a copy of the License at \n - \n - http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - \n - Unless required by applicable law or agreed to in writing , software \n - distributed under the License is distributed on an " AS IS " BASIS , \n - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - See the License for the specific language governing permissions and \n - limitations under the License . \n - - - > \n - < fragment xmlns : android = " http : / / schemas . android . com / apk / res / android " \n - android : name = " com . example . android . uamp . ui . tv . MediaDetailsFragment " \n - android : id = " @ + id / details _ fragment " \n - android : layout _ width = " match _ parent " \n - android : layout _ height = " match _ parent " \n - / > \n
okhttp \ src \ main \ java \ com \ squareup \ okhttp \ internal \ spdy \ SpdyConnection . java \n - synchronized ( this ) { \n + synchronized ( SpdyConnection . this ) { \n
okhttp \ src \ main \ java \ com \ squareup \ okhttp \ Connection . java \n - socket . connect ( route . inetSocketAddress , connectTimeout ) ; \n + Platform . get ( ) . connectSocket ( socket , route . inetSocketAddress , connectTimeout ) ; \n okhttp \ src \ main \ java \ com \ squareup \ okhttp \ internal \ Platform . java \n + import java . net . InetSocketAddress ; \n + public void connectSocket ( Socket socket , InetSocketAddress address , \n + int connectTimeout ) throws IOException { \n + socket . connect ( address , connectTimeout ) ; \n + } \n + \n + @ Override public void connectSocket ( Socket socket , InetSocketAddress address , \n + int connectTimeout ) throws IOException { \n + try { \n + socket . connect ( address , connectTimeout ) ; \n + } catch ( SecurityException se ) { \n + / / Before android 4 . 3 , socket . connect could throw a SecurityException \n + / / if opening a socket resulted in an EACCES error . \n + throw new IOException ( " Exception in connect " , se ) ; \n + } \n + } \n + \n + \n
factory - method \ src \ main \ java \ com \ iluwatar \ factory \ method \ App . java \n + private final Blacksmith blacksmith ; \n + \n + / * * \n + * Creates an instance of < code > App < / code > which will use < code > blacksmith < / code > to manufacture \n + * the weapons for war . \n + * < code > App < / code > is unaware which concrete implementation of { @ link Blacksmith } it is using . \n + * The decision of which blacksmith implementation to use may depend on configuration , or \n + * the type of rival in war . \n + * @ param blacksmith \n + * / \n + public App ( Blacksmith blacksmith ) { \n + this . blacksmith = blacksmith ; \n + } \n + \n - Blacksmith blacksmith ; \n + / / Lets go to war with Orc weapons \n + App app = new App ( new OrcBlacksmith ( ) ) ; \n + app . manufactureWeapons ( ) ; \n + \n + / / Lets go to war with Elf weapons \n + app = new App ( new ElfBlacksmith ( ) ) ; \n + app . manufactureWeapons ( ) ; \n + } \n + \n + private void manufactureWeapons ( ) { \n - \n - blacksmith = new OrcBlacksmith ( ) ; \n - \n - blacksmith = new ElfBlacksmith ( ) ; \n - weapon = blacksmith . manufactureWeapon ( WeaponType . SHORT _ SWORD ) ; \n - System . out . println ( weapon ) ; \n - weapon = blacksmith . manufactureWeapon ( WeaponType . SPEAR ) ; \n - System . out . println ( weapon ) ; \n factory - method \ src \ test \ java \ com \ iluwatar \ factory \ method \ FactoryMethodTest . java \n - private void verifyWeapon ( Weapon weapon , WeaponType expectedWeaponType , Class clazz ) { \n + private void verifyWeapon ( Weapon weapon , WeaponType expectedWeaponType , Class < ? > clazz ) { \n
abstract - factory \ src \ main \ java \ com \ iluwatar \ abstractfactory \ App . java \n - ElfKingdomFactory getElfKingdomFactory ( ) { \n - return new ElfKingdomFactory ( ) ; \n - } \n - \n - OrcKingdomFactory getOrcKingdomFactory ( ) { \n - return new OrcKingdomFactory ( ) ; \n - } \n - \n - KingdomFactory elfKingdomFactory ; \n - elfKingdomFactory = app . getElfKingdomFactory ( ) ; \n - app . createKingdom ( elfKingdomFactory ) ; \n + app . createKingdom ( new ElfKingdomFactory ( ) ) ; \n - KingdomFactory orcKingdomFactory ; \n - orcKingdomFactory = app . getOrcKingdomFactory ( ) ; \n - app . createKingdom ( orcKingdomFactory ) ; \n + app . createKingdom ( new OrcKingdomFactory ( ) ) ; \n abstract - factory \ src \ test \ java \ com \ iluwatar \ abstractfactory \ AbstractFactoryTest . java \n - elfFactory = app . getElfKingdomFactory ( ) ; \n - orcFactory = app . getOrcKingdomFactory ( ) ; \n + elfFactory = new ElfKingdomFactory ( ) ; \n + orcFactory = new OrcKingdomFactory ( ) ; \n
android \ src \ androidTest \ java \ com \ google \ samples \ apps \ iosched \ login \ StubLoginAndAuth . java \n - h . postDelayed ( r , 50 ) ; \n + h . postDelayed ( r , 0 ) ; \n
android \ build . gradle \n - buildConfigField ( " boolean " , " ENABLE _ SOCIAL _ IN _ NAVIGATION " , " true " ) \n + buildConfigField ( " boolean " , " ENABLE _ SOCIAL _ IN _ NAVIGATION " , " false " ) \n android \ src \ androidTest \ java \ com \ google \ samples \ apps \ iosched \ navigation \ AppNavigationViewAsDrawerImpl _ LoggedInAttendingTest . java \n - public void social _ WhenClicked _ ActivityDisplayed ( ) { \n - NavigationUtils . clickOnNavigationItemAndCheckActivityIsDisplayed ( \n - R . string . navdrawer _ item _ social , \n - R . string . title _ activity _ new _ social ) ; \n + public void social _ NotDisplayed ( ) { \n + NavigationUtils . checkNavigationItemIsNotDisplayed ( R . string . navdrawer _ item _ social ) ; \n android \ src \ androidTest \ java \ com \ google \ samples \ apps \ iosched \ navigation \ AppNavigationViewAsDrawerImpl _ LoggedInRemoteTest . java \n - public void social _ WhenClicked _ ActivityDisplayed ( ) { \n - NavigationUtils . clickOnNavigationItemAndCheckActivityIsDisplayed ( \n - R . string . navdrawer _ item _ social , \n - R . string . title _ activity _ new _ social ) ; \n + public void social _ NotDisplayed ( ) { \n + NavigationUtils . checkNavigationItemIsNotDisplayed ( R . string . navdrawer _ item _ social ) ; \n android \ src \ androidTest \ java \ com \ google \ samples \ apps \ iosched \ social \ SocialActivityTest . java \n - import com . google . samples . apps . iosched . navigation . NavigationModel ; \n - @ Test \n - public void navigation _ WhenShown _ CorrectItemIsSelected ( ) { \n - NavigationUtils . checkNavigationItemIsSelected ( NavigationModel . NavigationItemEnum . SOCIAL ) ; \n - } \n android \ src \ main \ res \ menu \ drawer _ items . xml \n - < / group > \n - < group \n - android : id = " @ + id / grp2 " \n - android : checkableBehavior = " single " > \n - android : id = " @ + id / grp3 " \n + android : id = " @ + id / grp2 " \n
src \ clj \ backtype \ storm \ daemon \ worker . clj \n - ( : port worker ) ) ] \n + ( : port worker ) ) \n + state ( worker - state conf ( : worker - id worker ) ) ] \n - ( . put ( worker - state conf ( : worker - id worker ) ) \n + ( . put state \n - hb ) \n + hb \n + false \n + ) \n + ( . cleanup state 60 ) ; this is just in case supervisor is down so that disk doesn ' t fill up . \n + ; it shouldn ' t take supervisor 120 seconds between listing dir and reading it \n + \n src \ jvm \ backtype \ storm \ utils \ LocalState . java \n + put ( key , val , true ) ; \n + } \n + \n + public synchronized void put ( Object key , Object val , boolean cleanup ) throws IOException { \n - persist ( curr ) ; \n + persist ( curr , cleanup ) ; \n + remove ( key , true ) ; \n + } \n + \n + public synchronized void remove ( Object key , boolean cleanup ) throws IOException { \n - persist ( curr ) ; \n + persist ( curr , cleanup ) ; \n + } \n + \n + public synchronized void cleanup ( int keepVersions ) throws IOException { \n + _ vs . cleanup ( keepVersions ) ; \n - private void persist ( Map < Object , Object > val ) throws IOException { \n + private void persist ( Map < Object , Object > val , boolean cleanup ) throws IOException { \n - _ vs . cleanup ( 4 ) ; \n + if ( cleanup ) _ vs . cleanup ( 4 ) ; \n
src \ jvm \ backtype \ storm \ utils \ LocalState . java \n + \n - String latestPath = _ vs . mostRecentVersionPath ( ) ; \n - if ( latestPath = = null ) return new HashMap < Object , Object > ( ) ; \n - return ( Map < Object , Object > ) Utils . deserialize ( FileUtils . readFileToByteArray ( new File ( latestPath ) ) ) ; \n + int attempts = 0 ; \n + while ( true ) { \n + String latestPath = _ vs . mostRecentVersionPath ( ) ; \n + if ( latestPath = = null ) return new HashMap < Object , Object > ( ) ; \n + try { \n + return ( Map < Object , Object > ) Utils . deserialize ( FileUtils . readFileToByteArray ( new File ( latestPath ) ) ) ; \n + } catch ( IOException e ) { \n + attempts + + ; \n + if ( attempts > = 10 ) { \n + throw e ; \n + } \n + } \n + } \n
src \ jvm \ backtype \ storm \ scheduler \ Cluster . java \n + public Set < String > getBlacklistedHosts ( ) { \n + return blackListedHosts ; \n + } \n + \n - public List < Integer > getUsedPorts ( SupervisorDetails supervisor ) { \n + public Set < Integer > getUsedPorts ( SupervisorDetails supervisor ) { \n - List < Integer > usedPorts = new ArrayList < Integer > ( ) ; \n + Set < Integer > usedPorts = new HashSet < Integer > ( ) ; \n - public List < Integer > getAvailablePorts ( SupervisorDetails supervisor ) { \n - List < Integer > usedPorts = this . getUsedPorts ( supervisor ) ; \n + public Set < Integer > getAvailablePorts ( SupervisorDetails supervisor ) { \n + Set < Integer > usedPorts = this . getUsedPorts ( supervisor ) ; \n - List < Integer > ret = new ArrayList < Integer > ( ) ; \n - ret . addAll ( supervisor . allPorts ) ; \n + Set < Integer > ret = new HashSet ( ) ; \n + ret . addAll ( getAssignablePorts ( supervisor ) ) ; \n + \n + public Set < Integer > getAssignablePorts ( SupervisorDetails supervisor ) { \n + if ( isBlackListed ( supervisor . id ) ) return new HashSet ( ) ; \n + return supervisor . allPorts ; \n + } \n - if ( isBlackListed ( supervisor . id ) ) return new ArrayList ( ) ; \n - List < Integer > ports = this . getAvailablePorts ( supervisor ) ; \n + Set < Integer > ports = this . getAvailablePorts ( supervisor ) ; \n + public List < WorkerSlot > getAssignableSlots ( SupervisorDetails supervisor ) { \n + Set < Integer > ports = this . getAssignablePorts ( supervisor ) ; \n + List < WorkerSlot > slots = new ArrayList < WorkerSlot > ( ports . size ( ) ) ; \n + \n + for ( Integer port : ports ) { \n + slots . add ( new WorkerSlot ( supervisor . getId ( ) , port ) ) ; \n + } \n + \n + return slots ; \n + } \n + \n + \n + public List < WorkerSlot > getAssignableSlots ( ) { \n + List < WorkerSlot > slots = new ArrayList < WorkerSlot > ( ) ; \n + for ( SupervisorDetails supervisor : this . supervisors . values ( ) ) { \n + slots . addAll ( this . getAssignableSlots ( supervisor ) ) ; \n + } \n + \n + return slots ; \n + } \n
project . clj \n - [ compojure " 0 . 6 . 4 " ] \n + [ compojure " 1 . 1 . 3 " ] \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g2d \ TextureAtlas . java \n + pads = region . pads ; \n
backends \ gdx - backends - gwt \ src \ com \ badlogic \ gdx \ backends \ gwt \ GwtFileHandle . java \n - throw new GdxRuntimeException ( " Not supported in GWT backend " ) ; \n + throw new GdxRuntimeException ( " file ( ) not supported in GWT backend " ) ; \n backends \ gdx - backends - gwt \ src \ com \ badlogic \ gdx \ backends \ gwt \ GwtFiles . java \n - throw new GdxRuntimeException ( " Not supported in GWT backend " ) ; \n + throw new GdxRuntimeException ( " external ( ) not supported in GWT backend " ) ; \n - throw new GdxRuntimeException ( " Not supported in GWT backend " ) ; \n + throw new GdxRuntimeException ( " absolute ( ) not supported in GWT backend " ) ; \n - throw new GdxRuntimeException ( " Not supported in GWT backend " ) ; \n + throw new GdxRuntimeException ( " local ( ) not supported in GWT backend " ) ; \n tests \ gdx - tests - lwjgl3 \ src \ com \ badlogic \ gdx \ tests \ lwjgl3 \ Lwjgl3TestStarter . java \n - private static CommandLineOptions options ; \n + static CommandLineOptions options ; \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g2d \ TextureAtlas . java \n + public TextureAtlasData ( ) { \n + } \n + \n + load ( packFile , imagesDir , flip ) ; \n + } \n + \n + public void load ( FileHandle packFile , FileHandle imagesDir , boolean flip ) { \n
gdx \ src \ com \ badlogic \ gdx \ utils \ StringBuilder . java \n - final int prime = 31 ; \n - int result = 1 ; \n - result = prime + length ; \n - result = prime * result + Arrays . hashCode ( chars ) ; \n + int result = 31 + length ; \n + for ( int index = 0 ; index < length ; + + index ) \n + result = 31 * result + chars [ index ] ; \n
okhttp \ src \ main \ java \ okhttp3 \ internal \ framed \ FramedConnection . java \n - private long idleStartTimeNs = System . nanoTime ( ) ; \n - if ( stream ! = null & & streams . isEmpty ( ) ) { \n - setIdle ( true ) ; \n - } \n - private synchronized void setIdle ( boolean value ) { \n - idleStartTimeNs = value ? System . nanoTime ( ) : Long . MAX _ VALUE ; \n - } \n - \n - / * * Returns true if this connection is idle . * / \n - public synchronized boolean isIdle ( ) { \n - return idleStartTimeNs ! = Long . MAX _ VALUE ; \n - } \n - \n - / * * \n - * Returns the time in ns when this connection became idle or Long . MAX _ VALUE if connection is not \n - * idle . \n - * / \n - public synchronized long getIdleStartTimeNs ( ) { \n - return idleStartTimeNs ; \n - } \n - \n - setIdle ( false ) ; \n - setIdle ( false ) ; \n
new file \n services \ core \ java \ com \ android \ server \ location \ timezone \ OWNERS \n + # Bug component : 847766 \n + nfuller @ google . com \n + include / core / java / android / app / timedetector / OWNERS \n new file \n services \ tests \ servicestests \ src \ com \ android \ internal \ location \ timezone \ OWNERS \n + # Bug component : 847766 \n + nfuller @ google . com \n + include / core / java / android / app / timedetector / OWNERS \n
README . md \n - # < img src = " src / docs / spring - framework . png " width = " 80 " height = " 80 " > Spring Framework [ ! [ Build Status ] ( https : / / ci . spring . io / api / v1 / teams / spring - framework / pipelines / spring - framework - 5 . 3 . x / jobs / build / badge ) ] ( https : / / ci . spring . io / teams / spring - framework / pipelines / spring - framework - 5 . 3 . x ? groups = Build " ) \n + # < img src = " src / docs / spring - framework . png " width = " 80 " height = " 80 " > Spring Framework [ ! [ Build Status ] ( https : / / ci . spring . io / api / v1 / teams / spring - framework / pipelines / spring - framework - 5 . 3 . x / jobs / build / badge ) ] ( https : / / ci . spring . io / teams / spring - framework / pipelines / spring - framework - 5 . 3 . x ? groups = Build " ) [ ! [ Revved up by Gradle Enterprise ] ( https : / / img . shields . io / badge / Revved % 20up % 20by - Gradle % 20Enterprise - 06A0CE ? logo = Gradle & labelColor = 02303A ) ] ( https : / / ge . spring . io / scans ? search . rootProjectNames = spring ) \n
README . adoc \n - = Spring Boot image : https : / / ci . spring . io / api / v1 / teams / spring - boot / pipelines / spring - boot - 2 . 5 . x / jobs / build / badge [ " Build Status " , link = " https : / / ci . spring . io / teams / spring - boot / pipelines / spring - boot - 2 . 5 . x ? groups = Build " ] image : https : / / badges . gitter . im / Join Chat . svg [ " Chat " , link = " https : / / gitter . im / spring - projects / spring - boot ? utm _ source = badge & utm _ medium = badge & utm _ campaign = pr - badge & utm _ content = badge " ] image : https : / / img . shields . io / badge / Revved % 20up % 20by - Gradle % 20Enterprise - 06A0CE ? logo = Gradle & labelColor = 02303A [ " Revved up by Gradle Enterprise " , link = " https : / / ge . spring . io / scans " ] \n + = Spring Boot image : https : / / ci . spring . io / api / v1 / teams / spring - boot / pipelines / spring - boot - 2 . 5 . x / jobs / build / badge [ " Build Status " , link = " https : / / ci . spring . io / teams / spring - boot / pipelines / spring - boot - 2 . 5 . x ? groups = Build " ] image : https : / / badges . gitter . im / Join Chat . svg [ " Chat " , link = " https : / / gitter . im / spring - projects / spring - boot ? utm _ source = badge & utm _ medium = badge & utm _ campaign = pr - badge & utm _ content = badge " ] image : https : / / img . shields . io / badge / Revved % 20up % 20by - Gradle % 20Enterprise - 06A0CE ? logo = Gradle & labelColor = 02303A [ " Revved up by Gradle Enterprise " , link = " https : / / ge . spring . io / scans ? & search . rootProjectNames = Spring % 20Boot % 20Build & search . rootProjectNames = spring - boot - build " ] \n
presto - tests \ src \ main \ java \ com \ facebook \ presto \ tests \ TestingPrestoClient . java \n - import com . facebook . presto . spi . type . TimeZoneKey ; \n - return new MaterializedResultSession ( session ) ; \n + return new MaterializedResultSession ( ) ; \n - private final TimeZoneKey timeZoneKey ; \n - \n - private MaterializedResultSession ( Session session ) \n - { \n - this . timeZoneKey = session . getTimeZoneKey ( ) ; \n - } \n - \n - rows . addAll ( transform ( data . getData ( ) , dataToRow ( timeZoneKey , types . get ( ) ) ) ) ; \n + rows . addAll ( transform ( data . getData ( ) , dataToRow ( types . get ( ) ) ) ) ; \n - private static Function < List < Object > , MaterializedRow > dataToRow ( final TimeZoneKey timeZoneKey , final List < Type > types ) \n + private static Function < List < Object > , MaterializedRow > dataToRow ( final List < Type > types ) \n - row . add ( convertToRowValue ( type , value , timeZoneKey ) ) ; \n + row . add ( convertToRowValue ( type , value ) ) ; \n - private static Object convertToRowValue ( Type type , Object value , TimeZoneKey timeZoneKey ) \n + private static Object convertToRowValue ( Type type , Object value ) \n - . map ( element - > convertToRowValue ( ( ( ArrayType ) type ) . getElementType ( ) , element , timeZoneKey ) ) \n + . map ( element - > convertToRowValue ( ( ( ArrayType ) type ) . getElementType ( ) , element ) ) \n - e - > convertToRowValue ( ( ( MapType ) type ) . getKeyType ( ) , e . getKey ( ) , timeZoneKey ) , \n - e - > convertToRowValue ( ( ( MapType ) type ) . getValueType ( ) , e . getValue ( ) , timeZoneKey ) ) ) ; \n + e - > convertToRowValue ( ( ( MapType ) type ) . getKeyType ( ) , e . getKey ( ) ) , \n + e - > convertToRowValue ( ( ( MapType ) type ) . getValueType ( ) , e . getValue ( ) ) ) ) ; \n
presto - accumulo \ src \ main \ java \ com \ facebook \ presto \ accumulo \ metadata \ AccumuloTable . java \n - this . external = requireNonNull ( external , " external is null " ) ; \n + this . external = external ; \n presto - accumulo \ src \ main \ java \ com \ facebook \ presto \ accumulo \ model \ AccumuloColumnConstraint . java \n - this . indexed = requireNonNull ( indexed , " indexed is null " ) ; \n + this . indexed = indexed ; \n presto - accumulo \ src \ main \ java \ com \ facebook \ presto \ accumulo \ model \ AccumuloColumnHandle . java \n - this . indexed = requireNonNull ( indexed , " indexed is null " ) ; \n + this . indexed = indexed ; \n presto - accumulo \ src \ main \ java \ com \ facebook \ presto \ accumulo \ model \ AccumuloTableHandle . java \n - this . external = requireNonNull ( external , " external is null " ) ; \n + this . external = external ; \n presto - blackhole \ src \ main \ java \ com \ facebook \ presto \ plugin \ blackhole \ BlackHoleSplit . java \n - this . rowsPerPage = requireNonNull ( rowsPerPage , " rowsPerPage is null " ) ; \n - this . pagesCount = requireNonNull ( pagesCount , " pagesCount is null " ) ; \n - this . fieldsLength = requireNonNull ( fieldsLength , " fieldsLength is null " ) ; \n + this . rowsPerPage = rowsPerPage ; \n + this . pagesCount = pagesCount ; \n + this . fieldsLength = fieldsLength ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ metastore \ file \ PermissionMetadata . java \n - this . grantOption = requireNonNull ( grantOption , " grantOption is null " ) ; \n + this . grantOption = grantOption ; \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ analyzer \ Field . java \n - requireNonNull ( aliased , " aliased is null " ) ; \n - requireNonNull ( aliased , " aliased is null " ) ; \n
server \ src \ main \ java \ org \ elasticsearch \ index \ engine \ LuceneChangesSnapshot . java \n - import org . elasticsearch . common . lucene . index . SequentialStoredFieldsLeafReader ; \n - if ( leaf . reader ( ) instanceof SequentialStoredFieldsLeafReader ) { \n - ( ( SequentialStoredFieldsLeafReader ) leaf . reader ( ) ) . getSequentialStoredFieldsReader ( ) . visitDocument ( segmentDocID , fields ) ; \n - } else { \n - assert false : " The changes reader isn ' t wrapped with Lucene # wrapAllDocsLive " ; \n - throw new IllegalStateException ( " The changes reader isn ' t wrapped with Lucene # wrapAllDocsLive " ) ; \n - } \n + leaf . reader ( ) . document ( segmentDocID , fields ) ; \n + \n test \ framework \ src \ main \ java \ org \ elasticsearch \ test \ engine \ ThrowingLeafReaderWrapper . java \n - import org . apache . lucene . codecs . StoredFieldsReader ; \n + import org . apache . lucene . index . FilterLeafReader ; \n - import org . elasticsearch . common . lucene . index . SequentialStoredFieldsLeafReader ; \n - public class ThrowingLeafReaderWrapper extends SequentialStoredFieldsLeafReader { \n + public class ThrowingLeafReaderWrapper extends FilterLeafReader { \n - \n - @ Override \n - protected StoredFieldsReader doGetSequentialStoredFieldsReader ( StoredFieldsReader reader ) { \n - return reader ; \n - } \n
server \ src \ main \ java \ org \ elasticsearch \ search \ internal \ ShardSearchContextId . java \n - if ( in . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( in . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 12 _ 0 ) ) { \n - if ( out . getVersion ( ) . onOrAfter ( Version . V _ 8 _ 0 _ 0 ) ) { \n + if ( out . getVersion ( ) . onOrAfter ( Version . V _ 7 _ 12 _ 0 ) ) { \n
dropwizard - testing \ pom . xml \n - < dependency > \n - < groupId > org . junit . platform < / groupId > \n - < artifactId > junit - platform - surefire - provider < / artifactId > \n - < version > 1 . 3 . 2 < / version > \n - < / dependency > \n
pom . xml \n + < ! - - Disable EqualsGetClass . Further discussion : https : / / github . com / dropwizard / dropwizard / pull / 2647 - - > \n + < arg > - Xep : EqualsGetClass : OFF < / arg > \n
new file \n core \ src \ main \ res \ values - v29 \ colors . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < ! - - \n + Copyright ( c ) 2019 Google Inc . \n + \n + Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; you may not use this file except \n + in compliance with the License . You may obtain a copy of the License at \n + \n + http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + \n + Unless required by applicable law or agreed to in writing , software distributed under the License \n + is distributed on an " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express \n + or implied . See the License for the specific language governing permissions and limitations under \n + the License . \n + - - > \n + \n + < resources > \n + \n + < ! - - common colours - - > \n + < color name = " nav _ bar " > @ android : color / transparent < / color > \n + \n + < / resources > \n core \ src \ main \ res \ values \ colors . xml \n + < color name = " nav _ bar " > @ color / immersive _ bars < / color > < ! - - overridden on v29 + - - > \n core \ src \ main \ res \ values \ styles . xml \n - < item name = " android : navigationBarColor " > @ color / immersive _ bars < / item > \n + < item name = " android : navigationBarColor " > @ color / nav _ bar < / item > \n
core \ src \ main \ res \ values \ styles . xml \n + < item name = " android : navigationBarColor " > @ color / nav _ bar < / item > \n dribbble \ src \ main \ java \ io \ plaidapp \ dribbble \ ui \ shot \ ShotActivity . kt \n + import android . view . View \n + import android . view . ViewGroup . MarginLayoutParams \n + import androidx . core . view . updateLayoutParams \n + import androidx . core . view . updatePadding \n + \n + binding . draggableFrame . apply { \n + systemUiVisibility = ( View . SYSTEM _ UI _ FLAG _ LAYOUT _ STABLE \n + or View . SYSTEM _ UI _ FLAG _ LAYOUT _ FULLSCREEN \n + or View . SYSTEM _ UI _ FLAG _ LAYOUT _ HIDE _ NAVIGATION ) \n + setOnApplyWindowInsetsListener { _ , insets - > \n + updateLayoutParams < MarginLayoutParams > { topMargin = insets . systemWindowInsetTop } \n + binding . bodyScroll . updatePadding ( bottom = insets . systemWindowInsetBottom ) \n + insets \n + } \n + } \n dribbble \ src \ main \ res \ values \ styles . xml \n - < item name = " android : navigationBarColor " > @ color / dribbble _ super _ dark < / item > \n
transport - native - epoll \ src \ main \ java \ io \ netty \ channel \ epoll \ AbstractEpollStreamChannel . java \n - private Queue < SpliceInTask > spliceQueue ; \n + private volatile Queue < SpliceInTask > spliceQueue ; \n - if ( spliceQueue = = null ) { \n + Queue < SpliceInTask > sQueue = spliceQueue ; \n + if ( sQueue = = null ) { \n - SpliceInTask task = spliceQueue . poll ( ) ; \n + SpliceInTask task = sQueue . poll ( ) ; \n + Queue < SpliceInTask > sQueue = null ; \n - if ( spliceQueue ! = null ) { \n - SpliceInTask spliceTask = spliceQueue . peek ( ) ; \n + if ( sQueue ! = null | | ( sQueue = spliceQueue ) ! = null ) { \n + SpliceInTask spliceTask = sQueue . peek ( ) ; \n - spliceQueue . remove ( ) ; \n + sQueue . remove ( ) ; \n - EventLoop eventLoop = eventLoop ( ) ; \n - if ( eventLoop . inEventLoop ( ) ) { \n - addToSpliceQueue0 ( task ) ; \n - } else { \n - eventLoop . execute ( new Runnable ( ) { \n - @ Override \n - public void run ( ) { \n - addToSpliceQueue0 ( task ) ; \n + Queue < SpliceInTask > sQueue = spliceQueue ; \n + if ( sQueue = = null ) { \n + synchronized ( this ) { \n + sQueue = spliceQueue ; \n + if ( sQueue = = null ) { \n + spliceQueue = sQueue = PlatformDependent . newMpscQueue ( ) ; \n - } ) ; \n - } \n - } \n - \n - private void addToSpliceQueue0 ( SpliceInTask task ) { \n - if ( spliceQueue = = null ) { \n - spliceQueue = PlatformDependent . newMpscQueue ( ) ; \n + } \n - spliceQueue . add ( task ) ; \n + sQueue . add ( task ) ; \n
buffer \ src \ main \ java \ io \ netty \ buffer \ ByteBufOutputStream . java \n - private final DataOutputStream utf8out = new DataOutputStream ( this ) ; \n + private DataOutputStream utf8out ; / / lazily - instantiated \n - utf8out . writeUTF ( s ) ; \n + DataOutputStream out = utf8out ; \n + if ( out = = null ) { \n + utf8out = out = new DataOutputStream ( this ) ; \n + } \n + out . writeUTF ( s ) ; \n
build . gradle \n - / / Suppress warnings about using Unsafe and sun . misc \n - options . compilerArgs < < ' - XDignore . symbol . file ' \n - options . warnings = false \n + options . warnings = true \n + options . deprecation = true \n + } \n + compileTestJava { \n + options . fork = true \n + options . debug = true \n + options . warnings = true \n + options . deprecation = true \n src \ test \ java \ com \ lmax \ disruptor \ dsl \ ConsumerRepositoryTest . java \n + @ Deprecated \n
src \ main \ java \ com \ lmax \ disruptor \ AlertException . java \n - @ SuppressWarnings ( " serial " ) \n + @ SuppressWarnings ( { " serial " , " lgtm [ java / non - sync - override ] " } ) \n src \ main \ java \ com \ lmax \ disruptor \ InsufficientCapacityException . java \n - @ SuppressWarnings ( " serial " ) \n + @ SuppressWarnings ( { " serial " , " lgtm [ java / non - sync - override ] " } ) \n src \ main \ java \ com \ lmax \ disruptor \ TimeoutException . java \n - @ SuppressWarnings ( " serial " ) \n + @ SuppressWarnings ( { " serial " , " lgtm [ java / non - sync - override ] " } ) \n
okhttp \ src \ main \ kotlin \ okhttp3 \ Authenticator . kt \n - * challenge . The proxy authenticator may return either either an authenticated request , or null to \n + * challenge . The proxy authenticator may return either an authenticated request , or null to \n
appintro \ src \ main \ java \ com \ github \ appintro \ AppIntroBase . kt \n - * Called by [ ViewPager . OnPageChangeListener . onPageSelected ] to tell [ AppIntroViewPager ] \n - * to request permissions on swipe . \n - * This method notifies [ AppIntroViewPager ] that the currently selected slide \n + * Getter used to notify [ AppIntroViewPager ] if the currently selected slide \n - private fun setPermissionSlide ( ) { \n - if ( pager . getCurrentSlideNumber ( fragments . size ) in permissionsMap ) { \n - pager . isPermissionSlide = true \n - } else { \n - pager . isPermissionSlide = false \n - setSwipeLock ( false ) \n - } \n - } \n + private val isPermissionSlide : Boolean \n + get ( ) = pager . getCurrentSlideNumber ( fragments . size ) in permissionsMap \n - setPermissionSlide ( ) \n + pager . isPermissionSlide = this @ AppIntroBase . isPermissionSlide \n
src \ jvm \ clojure \ lang \ PersistentTreeMap . java \n + public boolean equals ( Object obj ) { \n + try { \n + return super . equals ( obj ) ; \n + } catch ( ClassCastException e ) { \n + return false ; \n + } \n + } \n + \n + public boolean equiv ( Object obj ) { \n + try { \n + return super . equiv ( obj ) ; \n + } catch ( ClassCastException e ) { \n + return false ; \n + } \n + } \n + \n src \ jvm \ clojure \ lang \ PersistentTreeSet . java \n + public boolean equals ( Object obj ) { \n + try { \n + return super . equals ( obj ) ; \n + } catch ( ClassCastException e ) { \n + return false ; \n + } \n + } \n + \n + public boolean equiv ( Object obj ) { \n + try { \n + return super . equiv ( obj ) ; \n + } catch ( ClassCastException e ) { \n + return false ; \n + } \n + } \n + \n test \ clojure \ test _ clojure \ data _ structures . clj \n + ( is ( not = ( sorted - set : a ) ( sorted - set 1 ) ) ) \n + \n
src \ clj \ clojure \ core \ specs . clj \n - : prepost ( s / ? map ? ) \n - : body ( s / * any ? ) ) ) \n + : body ( s / alt : prepost + body ( s / cat : prepost map ? \n + : body ( s / + any ? ) ) \n + : body ( s / * any ? ) ) ) ) \n
common \ src \ main \ java \ com \ example \ android \ uamp \ media \ MusicService . kt \n + import androidx . core . content . ContextCompat \n + notificationManager . notify ( NOW _ PLAYING _ NOTIFICATION , notification ) \n + \n - startService ( Intent ( applicationContext , this @ MusicService . javaClass ) ) \n + ContextCompat . startForegroundService ( \n + applicationContext , \n + Intent ( applicationContext , this @ MusicService . javaClass ) \n + ) \n - } else { \n - notificationManager . notify ( NOW _ PLAYING _ NOTIFICATION , notification ) \n
app \ src \ main \ java \ com \ example \ android \ uamp \ MediaItemAdapter . kt \n - ) : androidx . recyclerview . widget . RecyclerView . ViewHolder ( view ) { \n + ) : RecyclerView . ViewHolder ( view ) { \n app \ src \ main \ java \ com \ example \ android \ uamp \ MediaItemFragment . kt \n + import androidx . fragment . app . Fragment \n - class MediaItemFragment : androidx . fragment . app . Fragment ( ) { \n + class MediaItemFragment : Fragment ( ) { \n common \ src \ main \ java \ com \ example \ android \ uamp \ media \ MusicService . kt \n - class MusicService : androidx . media . MediaBrowserServiceCompat ( ) { \n + class MusicService : MediaBrowserServiceCompat ( ) { \n
lib - manipulation \ src \ main \ java \ com \ nhaarman \ listviewanimations \ itemmanipulation \ swipedismiss \ SwipeTouchListener . java \n - view . onTouchEvent ( event ) ; \n - result = handleDownEvent ( event ) ; \n + result = handleDownEvent ( view , event ) ; \n - private boolean handleDownEvent ( @ NonNull final MotionEvent motionEvent ) { \n + private boolean handleDownEvent ( @ NonNull final View view , @ NonNull final MotionEvent motionEvent ) { \n + view . onTouchEvent ( motionEvent ) ; \n + \n
gradle . properties \n - VERSION _ NAME = 3 . 0 . 0 \n + VERSION _ NAME = 3 . 0 . 1 \n
x - pack \ plugin \ runtime - fields \ src \ main \ java \ org \ elasticsearch \ xpack \ runtimefields \ mapper \ AbstractFieldScript . java \n - * In an ideal world we wouldn ' t need the script cache at all \n - * because we have a hard reference to the script . The trouble \n - * is that we compile the scripts a few times when performing \n - * a mapping update . This is unfortunate , but we rely on the \n - * cache to speed this up . \n + * We rely on the script cache in two ways : \n + * 1 . It caches the " heavy " part of mappings generated at runtime . \n + * 2 . Mapping updates tend to try to compile the script twice . Not \n + * for any good reason . They just do . \n + * Thus we use the default 100 . \n - * Disable compilation rate limits for scripted fields so we \n + * Disable compilation rate limits for runtime fields so we \n - * many recently . That ' d just be lame . \n + * many recently . That ' d just be lame . We also compile these \n + * scripts during search requests so this could totally be a \n + * source of runaway script compilations . We think folks will \n + * mostly reuse scripts though . \n
server \ src \ test \ java \ org \ elasticsearch \ common \ breaker \ PreallocatedCircuitBreakerServiceTests . java \n + import org . elasticsearch . common . unit . ByteSizeValue ; \n + import static org . hamcrest . Matchers . lessThanOrEqualTo ; \n + import static org . junit . Assume . assumeThat ; \n - long preallocatedBytes = randomLongBetween ( 1 , realBreaker . getLimit ( ) ) ; \n + long limit = ByteSizeValue . ofMb ( 100 ) . getBytes ( ) ; \n + assumeThat ( limit , lessThanOrEqualTo ( realBreaker . getLimit ( ) ) ) ; \n + long preallocatedBytes = randomLongBetween ( 1 , limit ) ; \n - long delta = randomLongBetween ( Math . max ( - current , - realBreaker . getLimit ( ) / 100 ) , 0 ) ; \n + long delta = randomLongBetween ( - Math . min ( current , limit / 100 ) , 0 ) ; \n - long delta = randomLongBetween ( 0 , realBreaker . getLimit ( ) / 100 ) ; \n + long delta = randomLongBetween ( 0 , limit / 100 ) ; \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveClientConfig . java \n + private boolean preferManifestToListFiles ; \n + \n + @ Config ( " hive . prefer - manifests - to - list - files " ) \n + @ ConfigDescription ( " Prefer to fetch the list of file names and sizes from manifests rather than storage " ) \n + public HiveClientConfig setPreferManifestsToListFiles ( boolean preferManifestToListFiles ) \n + { \n + this . preferManifestToListFiles = preferManifestToListFiles ; \n + return this ; \n + } \n + \n + public boolean isPreferManifestsToListFiles ( ) \n + { \n + return this . preferManifestToListFiles ; \n + } \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveSessionProperties . java \n + public static final String PREFER _ MANIFESTS _ TO _ LIST _ FILES = " prefer _ manifests _ to _ list _ files " ; \n + false ) , \n + booleanProperty ( \n + PREFER _ MANIFESTS _ TO _ LIST _ FILES , \n + " Prefer to fetch the list of file names and sizes from manifest " , \n + hiveClientConfig . isPreferManifestsToListFiles ( ) , \n + \n + public static boolean isPreferManifestsToListFiles ( ConnectorSession session ) \n + { \n + return session . getProperty ( PREFER _ MANIFESTS _ TO _ LIST _ FILES , Boolean . class ) ; \n + } \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveClientConfig . java \n - . setFileRenamingEnabled ( false ) ) ; \n + . setFileRenamingEnabled ( false ) \n + . setPreferManifestsToListFiles ( false ) ) ; \n + . put ( " hive . prefer - manifests - to - list - files " , " true " ) \n - . setFileRenamingEnabled ( true ) ; \n + . setFileRenamingEnabled ( true ) \n + . setPreferManifestsToListFiles ( true ) ; \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveFileWriter . java \n + \n + long getFileSizeInBytes ( ) ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ OrcFileWriter . java \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return orcWriter . getWrittenBytes ( ) ; \n + } \n + \n - return Optional . of ( createFileStatisticsPage ( getWrittenBytes ( ) , rowCount ) ) ; \n + return Optional . of ( createFileStatisticsPage ( getFileSizeInBytes ( ) , rowCount ) ) ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ RcFileFileWriter . java \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return getWrittenBytes ( ) ; \n + } \n + \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ RecordFileWriter . java \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return getWrittenBytes ( ) ; \n + } \n + \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ SortingFileWriter . java \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return getWrittenBytes ( ) ; \n + } \n + \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ pagefile \ PageFileWriter . java \n + \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return getWrittenBytes ( ) ; \n + } \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ parquet \ ParquetFileWriter . java \n + \n + @ Override \n + public long getFileSizeInBytes ( ) \n + { \n + return getWrittenBytes ( ) ; \n + } \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ AbstractTestHiveFileFormats . java \n - assertFileStatistics ( fileStatistics , hiveFileWriter . getWrittenBytes ( ) , storageFormat ) ; \n + assertFileStatistics ( fileStatistics , hiveFileWriter . getFileSizeInBytes ( ) , storageFormat ) ; \n
src \ main \ java \ io \ reactivex \ processors \ AsyncProcessor . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ processors \ BehaviorProcessor . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ processors \ PublishProcessor . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ processors \ ReplayProcessor . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ processors \ UnicastProcessor . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ subjects \ AsyncSubject . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ subjects \ BehaviorSubject . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ subjects \ PublishSubject . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ subjects \ ReplaySubject . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n src \ main \ java \ io \ reactivex \ subjects \ UnicastSubject . java \n + import io . reactivex . annotations . CheckReturnValue ; \n + @ CheckReturnValue \n + @ CheckReturnValue \n + @ CheckReturnValue \n
picasso \ src \ test \ java \ com \ squareup \ picasso \ LruCacheTest . java \n - import static junit . framework . Assert . assertEquals ; \n - assertEquals ( cache . size ( ) , 16 ) ; \n + assertThat ( cache . size ( ) ) . isEqualTo ( 16 ) ; \n - assertEquals ( cache . size ( ) , 4 ) ; \n + assertThat ( cache . size ( ) ) . isEqualTo ( 4 ) ; \n picasso \ src \ test \ java \ com \ squareup \ picasso \ NetworkRequestHandlerTest . java \n - import static org . junit . Assert . assertEquals ; \n - assertEquals ( " " , requests . takeFirst ( ) . cacheControl ( ) . toString ( ) ) ; \n + assertThat ( requests . takeFirst ( ) . cacheControl ( ) . toString ( ) ) . isEmpty ( ) ; \n - assertEquals ( CacheControl . FORCE _ CACHE . toString ( ) , requests . takeFirst ( ) . cacheControl ( ) . toString ( ) ) ; \n + assertThat ( requests . takeFirst ( ) . cacheControl ( ) . toString ( ) ) . isEqualTo ( CacheControl . FORCE _ CACHE . toString ( ) ) ; \n
buffer \ src \ main \ java \ io \ netty \ buffer \ AbstractByteBuf . java \n + ensureAccessible ( ) ; \n buffer \ src \ main \ java \ io \ netty \ buffer \ AbstractUnsafeSwappedByteBuf . java \n - wrapped . checkIndex0 ( index , 4 ) ; \n + wrapped . checkIndex ( index , 4 ) ; \n - wrapped . checkIndex0 ( index , 2 ) ; \n + wrapped . checkIndex ( index , 2 ) ; \n - wrapped . checkIndex0 ( index , 2 ) ; \n + wrapped . checkIndex ( index , 2 ) ; \n - wrapped . checkIndex0 ( index , 4 ) ; \n + wrapped . checkIndex ( index , 4 ) ; \n buffer \ src \ main \ java \ io \ netty \ buffer \ UnpooledHeapByteBuf . java \n + import io . netty . util . internal . EmptyArrays ; \n - ensureAccessible ( ) ; \n - array = null ; \n + array = EmptyArrays . EMPTY _ BYTES ; \n
buffer \ src \ main \ java \ io \ netty \ buffer \ ByteBufUtil . java \n - int hashCode = 1 ; \n + int hashCode = EmptyByteBuf . EMPTY _ BYTE _ BUF _ HASH _ CODE ; \n buffer \ src \ main \ java \ io \ netty \ buffer \ EmptyByteBuf . java \n + static final int EMPTY _ BYTE _ BUF _ HASH _ CODE = 1 ; \n - return 0 ; \n + return EMPTY _ BYTE _ BUF _ HASH _ CODE ; \n buffer \ src \ test \ java \ io \ netty \ buffer \ EmptyByteBufTest . java \n + \n + @ Test \n + public void consistentEqualsAndHashCodeWithAbstractBytebuf ( ) { \n + ByteBuf empty = new EmptyByteBuf ( UnpooledByteBufAllocator . DEFAULT ) ; \n + ByteBuf emptyAbstract = new UnpooledHeapByteBuf ( UnpooledByteBufAllocator . DEFAULT , 0 , 0 ) ; \n + assertEquals ( emptyAbstract , empty ) ; \n + assertEquals ( emptyAbstract . hashCode ( ) , empty . hashCode ( ) ) ; \n + assertEquals ( EmptyByteBuf . EMPTY _ BYTE _ BUF _ HASH _ CODE , empty . hashCode ( ) ) ; \n + assertTrue ( emptyAbstract . release ( ) ) ; \n + assertFalse ( empty . release ( ) ) ; \n + } \n
js \ js . frontend \ src \ org \ jetbrains \ kotlin \ js \ config \ JsConfig . java \n - VirtualFileSystem fileSystem = VirtualFileManager . getInstance ( ) . getFileSystem ( StandardFileSystems . FILE _ PROTOCOL ) ; \n - VirtualFileSystem jarFileSystem = VirtualFileManager . getInstance ( ) . getFileSystem ( StandardFileSystems . JAR _ PROTOCOL ) ; \n - \n - VirtualFile file ; \n - \n - if ( path . endsWith ( " . jar " ) | | path . endsWith ( " . zip " ) ) { \n - file = jarFileSystem . findFileByPath ( path + URLUtil . JAR _ SEPARATOR ) ; \n - } \n - else { \n - file = fileSystem . findFileByPath ( path ) ; \n - } \n - \n - if ( file = = null ) { \n - report . error ( " File ' " + path + " ' does not exist or could not be read " ) ; \n - return true ; \n - } \n - \n
jps - plugin \ jps - tests \ test \ org \ jetbrains \ kotlin \ jps \ build \ AbstractIncrementalJpsTest . kt \n - import org . jetbrains . kotlin . cli . common . KOTLIN _ COMPILER _ ENVIRONMENT _ KEEPALIVE _ PROPERTY \n - System . setProperty ( KOTLIN _ COMPILER _ ENVIRONMENT _ KEEPALIVE _ PROPERTY , " true " ) \n jps - plugin \ jps - tests \ test \ org \ jetbrains \ kotlin \ jps \ build \ AbstractIncrementalJpsTest . kt . 201 \n - import org . jetbrains . kotlin . cli . common . KOTLIN _ COMPILER _ ENVIRONMENT _ KEEPALIVE _ PROPERTY \n - System . setProperty ( KOTLIN _ COMPILER _ ENVIRONMENT _ KEEPALIVE _ PROPERTY , " true " ) \n
kotlin - native \ build - tools \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ CopySamples . kt \n - " https : / / dl . bintray . com / kotlin / ktor " to " https : / / cache - redirector . jetbrains . com / dl . bintray . com / kotlin / ktor " , \n kotlin - native \ samples \ html5Canvas \ build . gradle . kts \n - maven ( " https : / / dl . bintray . com / kotlin / ktor " ) \n + mavenCentral ( ) \n
kotlin - native \ performance \ ring \ src \ main \ kotlin \ org \ jetbrains \ ring \ PrimeListBenchmark . kt \n - * \n - * @ author Mikhail Glukhikh \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ NearbyBeaconsFragment . java \n - for ( PwPair pwPair : mPwCollection . getGroupedPwPairsSortedByRank ( ) ) { \n - String groupId = Utils . getGroupId ( pwPair . getPwsResult ( ) ) ; \n - Log . d ( TAG , " groupid to add " + groupId ) ; \n - if ( mNearbyDeviceAdapter . containsGroupId ( groupId ) ) { \n - mNearbyDeviceAdapter . updateItem ( pwPair ) ; \n - } else if ( ! mGroupIdQueue . contains ( groupId ) ) { \n - mGroupIdQueue . add ( groupId ) ; \n - if ( mSecondScanComplete ) { \n - / / If we ' ve already waited for the second scan timeout , go ahead and put the item in the \n - / / listview . \n - emptyGroupIdQueue ( ) ; \n + / / Since this callback is given on a background thread and we want \n + / / to update the list adapter ( which can only be done on the UI thread ) \n + / / we have to interact with the adapter on the UI thread . \n + new Handler ( Looper . getMainLooper ( ) ) . post ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + for ( PwPair pwPair : mPwCollection . getGroupedPwPairsSortedByRank ( ) ) { \n + String groupId = Utils . getGroupId ( pwPair . getPwsResult ( ) ) ; \n + Log . d ( TAG , " groupid to add " + groupId ) ; \n + if ( mNearbyDeviceAdapter . containsGroupId ( groupId ) ) { \n + mNearbyDeviceAdapter . updateItem ( pwPair ) ; \n + } else if ( ! mGroupIdQueue . contains ( groupId ) ) { \n + mGroupIdQueue . add ( groupId ) ; \n + if ( mSecondScanComplete ) { \n + / / If we ' ve already waited for the second scan timeout , \n + / / go ahead and put the item in the listview . \n + emptyGroupIdQueue ( ) ; \n + } \n + } \n + mNearbyDeviceAdapter . notifyDataSetChanged ( ) ; \n - } \n - notifyChangeOnUiThread ( ) ; \n + } ) ; \n - notifyChangeOnUiThread ( ) ; \n - } \n - \n - \n - / * * \n - * Notify the view on the UI thread that the underlying data has been changed . \n - * \n - * / \n - private void notifyChangeOnUiThread ( ) { \n - new Handler ( Looper . getMainLooper ( ) ) . post ( new Runnable ( ) { \n - @ Override \n - public void run ( ) { \n - mNearbyDeviceAdapter . notifyDataSetChanged ( ) ; \n - } \n - } ) ; \n + mNearbyDeviceAdapter . notifyDataSetChanged ( ) ; \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ NearbyBeaconsFragment . java \n - for ( PwPair pwPair : mPwCollection . getGroupedPwPairsSortedByRank ( ) ) { \n + for ( PwPair pwPair : mPwCollection . getGroupedPwPairsSortedByRank ( \n + Utils . newDistanceComparator ( ) ) ) { \n
src \ main \ java \ org \ junit \ runner \ FilterFactoryParams . java \n - this ( null ) ; \n + this ( " " ) ; \n + if ( args = = null ) { \n + throw new NullPointerException ( ) ; \n + } \n + \n
src \ main \ java \ org \ junit \ experimental \ categories \ CategoryFilterFactory . java \n - @ Override \n
library \ src \ main \ java \ com \ loopj \ android \ http \ JsonStreamerEntity . java \n + } else if ( value instanceof JsonValueInterface ) { \n + os . write ( ( ( JsonValueInterface ) value ) . getEscapedJsonValue ( ) ) ; \n new file \n library \ src \ main \ java \ com \ loopj \ android \ http \ JsonValueInterface . java \n + / * \n + Android Asynchronous Http Client \n + Copyright ( c ) 2011 James Smith < james @ loopj . com > \n + http : / / loopj . com \n + \n + Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + you may not use this file except in compliance with the License . \n + You may obtain a copy of the License at \n + \n + http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + \n + Unless required by applicable law or agreed to in writing , software \n + distributed under the License is distributed on an " AS IS " BASIS , \n + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + See the License for the specific language governing permissions and \n + limitations under the License . \n + * / \n + \n + package com . loopj . android . http ; \n + \n + / * * \n + * This interface is used to encapsulate JSON values that are handled entirely \n + * by the app . For example , apps could manage any type of JSON on their own ( and \n + * not rely on { @ link org . json . JSONArray } or { @ link org . json . JSONObject } to \n + * exchange data . \n + * \n + * @ author Noor Dawod < github @ fineswap . com > \n + * / \n + public interface JsonValueInterface { \n + \n + / * * \n + * Returns the escaped , ready - to - be used value of this encapsulated object . \n + * \n + * @ return byte array holding the data to be used ( as - is ) in a JSON object \n + * / \n + byte [ ] getEscapedJsonValue ( ) ; \n + } \n
library \ src \ main \ java \ com \ loopj \ android \ http \ JsonStreamerEntity . java \n + } else if ( value instanceof org . json . JSONObject ) { \n + os . write ( ( ( org . json . JSONObject ) value ) . toString ( ) . getBytes ( ) ) ; \n + } else if ( value instanceof org . json . JSONArray ) { \n + os . write ( ( ( org . json . JSONArray ) value ) . toString ( ) . getBytes ( ) ) ; \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ SslContext . java \n - KeyStore ks = KeyStore . getInstance ( " JKS " ) ; \n + KeyStore ks = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; \n - return KeyFactory . getInstance ( " EC " ) . generatePrivate ( encodedKeySpec ) ; \n + return KeyFactory . getInstance ( " EC " ) . generatePrivate ( encodedKeySpec ) ; \n - KeyStore ks = KeyStore . getInstance ( " JKS " ) ; \n + final KeyStore ks = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; \n - String algorithm = Security . getProperty ( " ssl . KeyManagerFactory . algorithm " ) ; \n - if ( algorithm = = null ) { \n - algorithm = " SunX509 " ; \n - } \n - return buildKeyManagerFactory ( certChain , algorithm , key , keyPassword , kmf ) ; \n + return buildKeyManagerFactory ( certChain , KeyManagerFactory . getDefaultAlgorithm ( ) , key , keyPassword , kmf ) ; \n
codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ Http2FrameCodec . java \n + } else if ( msg instanceof Http2UnknownFrame ) { \n + Http2UnknownFrame unknownFrame = ( Http2UnknownFrame ) msg ; \n + encoder ( ) . writeFrame ( ctx , unknownFrame . frameType ( ) , unknownFrame . stream ( ) . id ( ) , \n + unknownFrame . flags ( ) , unknownFrame . content ( ) , promise ) ; \n codec - http2 \ src \ test \ java \ io \ netty \ handler \ codec \ http2 \ Http2FrameCodecTest . java \n + @ Test \n + public void writeUnknownFrame ( ) { \n + final Http2FrameStream stream = frameCodec . newStream ( ) ; \n + \n + ByteBuf buffer = Unpooled . buffer ( ) . writeByte ( 1 ) ; \n + DefaultHttp2UnknownFrame unknownFrame = new DefaultHttp2UnknownFrame ( \n + ( byte ) 20 , new Http2Flags ( ) . ack ( true ) , buffer ) ; \n + unknownFrame . stream ( stream ) ; \n + channel . write ( unknownFrame ) ; \n + \n + verify ( frameWriter ) . writeFrame ( eq ( http2HandlerCtx ) , eq ( unknownFrame . frameType ( ) ) , \n + eq ( unknownFrame . stream ( ) . id ( ) ) , eq ( unknownFrame . flags ( ) ) , eq ( buffer ) , any ( ChannelPromise . class ) ) ; \n + } \n + \n
new file \n . github \ workflows \ ci - pr - reports . yml \n + name : PR Reports \n + on : \n + workflow _ run : \n + workflows : [ " Build PR " ] \n + types : \n + - completed \n + jobs : \n + tests : \n + runs - on : ubuntu - latest \n + strategy : \n + matrix : \n + include : \n + - setup : linux - x86 _ 64 - java8 \n + - setup : linux - x86 _ 64 - java11 \n + - setup : linux - x86 _ 64 - java15 \n + - setup : linux - x86 _ 64 - java11 - boringssl \n + steps : \n + - name : Download Artifacts \n + uses : dawidd6 / action - download - artifact @ v2 . 11 . 0 \n + with : \n + github _ token : $ { { secrets . GITHUB _ TOKEN } } \n + workflow : $ { { github . event . workflow _ run . workflow _ id } } \n + commit : $ { { github . event . workflow _ run . head _ commit . id } } \n + # File location set in ci - pr . yml and must be coordinated . \n + name : test - results - $ { { matrix . setup } } \n + - name : Publish Test Report \n + uses : scacap / action - surefire - report @ v1 . 0 . 7 \n + with : \n + github _ token : $ { { secrets . GITHUB _ TOKEN } } \n + report _ paths : ' * * / target / surefire - reports / TEST - * . xml ' \n + commit : $ { { github . event . workflow _ run . head _ commit . id } } \n + check _ name : test reports \n . github \ workflows \ ci - pr . yml \n - name : $ { { matrix . setup } } \n + name : $ { { matrix . setup } } build \n - uses : actions / checkout @ v2 \n - name : Checking for detected leak \n + - name : Upload Test Results \n + if : always ( ) \n + uses : actions / upload - artifact @ v2 \n + with : \n + name : test - results - $ { { matrix . setup } } \n + path : ' * * / target / surefire - reports / TEST - * . xml ' \n + \n - uses : actions / upload - artifact @ v2 \n
pom . xml \n - < osmaven . version > 1 . 6 . 2 < / osmaven . version > \n + < osmaven . version > 1 . 7 . 0 < / osmaven . version > \n
src \ test \ java \ io \ vertx \ test \ core \ VertxTest . java \n - import io . vertx . core . AsyncResult ; \n - import io . vertx . core . Closeable ; \n - import io . vertx . core . Future ; \n - import io . vertx . core . Handler ; \n - import io . vertx . core . Vertx ; \n + import io . vertx . core . * ; \n + import io . vertx . core . shareddata . AsyncMap ; \n + import io . vertx . core . shareddata . Counter ; \n + import io . vertx . core . shareddata . Lock ; \n + import io . vertx . core . spi . cluster . AsyncMultiMap ; \n + import io . vertx . core . spi . cluster . ClusterManager ; \n + import io . vertx . core . spi . cluster . NodeListener ; \n + import io . vertx . test . fakecluster . FakeClusterManager ; \n + \n + import java . util . List ; \n + import java . util . Map ; \n + \n + @ Test \n + public void testClusterManagerFailure ( ) throws Exception { \n + VertxOptions options = new VertxOptions ( ) . setClusterManager ( new FakeClusterManager ( ) { \n + @ Override \n + public void join ( Handler < AsyncResult < Void > > resultHandler ) { \n + resultHandler . handle ( Future . failedFuture ( new Exception ( ) ) ) ; \n + } \n + \n + } ) ; \n + Future < Vertx > f = Future . future ( ) ; \n + Vertx . clusteredVertx ( options , f . completer ( ) ) ; \n + assertFalse ( f . succeeded ( ) ) ; \n + } \n + \n
src \ test \ java \ io \ vertx \ test \ core \ VertxTest . java \n + import java . util . concurrent . TimeUnit ; \n - VertxOptions options = new VertxOptions ( ) . setClusterManager ( new FakeClusterManager ( ) { \n - @ Override \n - public void join ( Handler < AsyncResult < Void > > resultHandler ) { \n - resultHandler . handle ( Future . failedFuture ( new Exception ( ) ) ) ; \n - } \n - \n - } ) ; \n - Future < Vertx > f = Future . future ( ) ; \n - Vertx . clusteredVertx ( options , f . completer ( ) ) ; \n - assertFalse ( f . succeeded ( ) ) ; \n + VertxOptions options = new VertxOptions ( ) . setClusterManager ( new FakeClusterManager ( ) { \n + @ Override \n + public void join ( Handler < AsyncResult < Void > > resultHandler ) { \n + resultHandler . handle ( Future . failedFuture ( new Exception ( " joinfailure " ) ) ) ; \n + } \n + } ) ; \n + Vertx . clusteredVertx ( options , ar - > { \n + assertTrue ( ar . failed ( ) ) ; \n + assertEquals ( " joinfailure " , ar . cause ( ) . getMessage ( ) ) ; \n + testComplete ( ) ; \n + } ) ; \n + await ( ) ; \n
src \ main \ java \ com \ alibaba \ fastjson \ util \ TypeUtils . java \n + if ( " unixtime " . equals ( format ) ) { \n + longValue * = 1000 ; \n + } \n new file \n src \ test \ java \ com \ alibaba \ json \ bvt \ issue _ 2300 \ Issue2300 . java \n + package com . alibaba . json . bvt . issue _ 2300 ; \n + \n + import com . alibaba . fastjson . JSON ; \n + import com . alibaba . fastjson . JSONObject ; \n + import com . alibaba . fastjson . annotation . JSONField ; \n + import junit . framework . TestCase ; \n + \n + import java . util . Date ; \n + \n + public class Issue2300 extends TestCase { \n + public void test _ for _ issue ( ) throws Exception { \n + String text = " { \ " createTime \ " : 1548166745 } " ; \n + \n + Order o = JSON . parseObject ( text , Order . class ) ; \n + assertEquals ( 1548166745000L , o . createTime . getTime ( ) ) ; \n + \n + String json = JSON . toJSONString ( o ) ; \n + assertEquals ( " { \ " createTime \ " : 1548166745 } " , json ) ; \n + \n + / / 新增校验1 \n + JSONObject jsonObject = JSONObject . parseObject ( text ) ; \n + Order order1 = JSONObject . toJavaObject ( jsonObject , Order . class ) ; \n + / / 校验不通过 \n + assertEquals ( 1548166745000L , order1 . createTime . getTime ( ) ) ; \n + \n + / / 新增校验2 \n + Order order2 = jsonObject . toJavaObject ( Order . class ) ; \n + / / 校验不通过 \n + assertEquals ( 1548166745000L , order2 . createTime . getTime ( ) ) ; \n + } \n + \n + public static class Order { \n + @ JSONField ( format = " unixtime " ) \n + public Date createTime ; \n + } \n + } \n
src \ main \ java \ com \ alibaba \ fastjson \ util \ TypeUtils . java \n + } else if ( strVal . length ( ) = = 23 & & strVal . charAt ( 19 ) = = ' , ' ) { \n + format = " yyyy - MM - dd HH : mm : ss , SSS " ; \n - return ( T ) castToEnum ( obj , clazz , config ) ; \n + return castToEnum ( obj , clazz , config ) ; \n - return ( T ) cast ( obj , ( Class < T > ) type , mapping ) ; \n + return cast ( obj , ( Class < T > ) type , mapping ) ; \n - return ( T ) JSON . parseObject ( json , clazz ) ; \n + return JSON . parseObject ( json , clazz ) ; \n - if ( isJSONTypeIgnore ( clazz . getSuperclass ( ) , propertyName ) ) { \n - return true ; \n - } \n + return isJSONTypeIgnore ( clazz . getSuperclass ( ) , propertyName ) ; \n - char chars [ ] = name . toCharArray ( ) ; \n + char [ ] chars = name . toCharArray ( ) ; \n new file \n src \ test \ java \ com \ alibaba \ json \ bvt \ issue _ 2600 \ Issue2606 . java \n + package com . alibaba . json . bvt . issue _ 2600 ; \n + \n + import com . alibaba . fastjson . JSON ; \n + import com . alibaba . fastjson . util . TypeUtils ; \n + import junit . framework . TestCase ; \n + \n + import java . text . SimpleDateFormat ; \n + import java . util . Date ; \n + import java . util . Locale ; \n + import java . util . TimeZone ; \n + \n + public class Issue2606 extends TestCase { \n + @ Override \n + public void setUp ( ) throws Exception { \n + JSON . defaultTimeZone = TimeZone . getDefault ( ) ; \n + JSON . defaultLocale = Locale . CHINA ; \n + } \n + \n + public void test _ for _ issue ( ) throws Exception { \n + String str = " 2019 - 07 - 03 19 : 34 : 22 , 547 " ; \n + Date d = TypeUtils . castToDate ( str ) ; \n + SimpleDateFormat sdf = new SimpleDateFormat ( " yyyy - MM - dd HH : mm : ss , SSS " ) ; \n + sdf . setTimeZone ( TimeZone . getDefault ( ) ) ; \n + assertEquals ( str , sdf . format ( d ) ) ; \n + } \n + } \n
dubbo - filter \ dubbo - filter - cache \ src \ test \ java \ org \ apache \ dubbo \ cache \ support \ jcache \ JCacheFactoryTest . java \n - URL url = URL . valueOf ( " test : / / test : 11 / test ? cache = jacache & . cache . write . expire = 1 " ) ; \n + URL url = URL . valueOf ( " test : / / test : 12 / test ? cache = jacache & . cache . write . expire = 1 " ) ; \n
dubbo - serialization \ dubbo - serialization - test \ src \ test \ java \ org \ apache \ dubbo \ common \ serialize \ fst \ FstObjectOutputTest . java \n + import org . junit . After ; \n + @ After \n + public void tearDown ( ) throws IOException { \n + new FstObjectInput ( new ByteArrayInputStream ( new byte [ ] { 0 } ) ) ; \n + } \n + \n
library \ src \ main \ java \ com \ loopj \ android \ http \ RequestHandle . java \n - public class RequestHandle { \n + class RequestHandle { \n
library \ src \ main \ java \ com \ loopj \ android \ http \ AsyncHttpResponseHandler . java \n - import java . lang . ref . WeakReference ; \n - private Handler handler ; \n + private final Handler handler ; \n - * Avoid leaks by using a non - anonymous handler class with a weak reference \n + * Avoid leaks by using a non - anonymous handler class . \n - static class ResponderHandler extends Handler { \n - private final WeakReference < AsyncHttpResponseHandler > mResponder ; \n + private static class ResponderHandler extends Handler { \n + private final AsyncHttpResponseHandler mResponder ; \n - ResponderHandler ( AsyncHttpResponseHandler service ) { \n - mResponder = new WeakReference < AsyncHttpResponseHandler > ( service ) ; \n + ResponderHandler ( AsyncHttpResponseHandler mResponder ) { \n + this . mResponder = mResponder ; \n - AsyncHttpResponseHandler service = mResponder . get ( ) ; \n - if ( null ! = service ) { \n - service . handleMessage ( msg ) ; \n - } \n + mResponder . handleMessage ( msg ) ; \n - / / Init Looper by calling postRunnable without argument \n + / / There is always a handler ready for delivering messages . \n + handler = new ResponderHandler ( this ) ; \n + \n + / / Init Looper by calling postRunnable without an argument . \n - Log . d ( LOG _ TAG , String . format ( " Progress % d from % d ( % d % % ) " , bytesWritten , totalSize , ( totalSize > 0 ) ? ( bytesWritten / totalSize ) * 100 : - 1 ) ) ; \n + Log . v ( LOG _ TAG , String . format ( " Progress % d from % d ( % d % % ) " , bytesWritten , totalSize , ( totalSize > 0 ) ? ( bytesWritten / totalSize ) * 100 : - 1 ) ) ; \n - if ( getUseSynchronousMode ( ) | | handler = = null ) { \n + if ( getUseSynchronousMode ( ) ) { \n - if ( null = = handler ) { \n - handler = new ResponderHandler ( this ) ; \n - } \n - Message msg ; \n - if ( handler ! = null ) { \n - msg = handler . obtainMessage ( responseMessageId , responseMessageData ) ; \n - } else { \n - msg = Message . obtain ( ) ; \n - if ( msg ! = null ) { \n - msg . what = responseMessageId ; \n - msg . obj = responseMessageData ; \n - } \n - } \n - return msg ; \n + return handler . obtainMessage ( responseMessageId , responseMessageData ) ; \n
CHANGELOG . md \n - # # 0 . 9 . 0 - rc3 ( Unreleased ) \n + # # 0 . 9 . 0 - rc4 ( Unreleased ) \n + \n + # # 0 . 9 . 0 - rc3 \n + * Added configuration to limit ShellBolt internal _ pendingWrites queue length ( thanks xiaokang ) \n + * Fixed a a netty client issue where sleep times for reconnection could be negative ( thanks brndnmtthws ) \n + * Fixed a display issue with system stats in Storm UI ( thanks d2r ) \n + * Nimbus now does worker heartbeat timeout checks as soon as heartbeats are updated ( thanks d2r ) \n + * The logviewer now determines log file location by examining the logback configuration ( thanks strongh ) \n + * Allow tick tuples to work with the system bolt ( thanks xumingming ) \n + * Add default configuration values for the netty transport and the ability to configure the number of worker threads ( thanks revans2 ) \n + * Added timeout to unit tests to prevent a situation where tests would hang indefinitely ( thanks d2r ) \n + * Fixed and issue in the system bolt where local mode would not be detected accurately ( thanks miofthena ) \n
storm - netty \ test \ clj \ backtype \ storm \ messaging \ netty _ integration _ test . clj \n - STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 } ] \n + STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 \n + STORM - MESSAGING - NETTY - CLIENT - WORKER - THREADS 1 \n + STORM - MESSAGING - NETTY - SERVER - WORKER - THREADS 1 \n + } ] \n storm - netty \ test \ clj \ backtype \ storm \ messaging \ netty _ unit _ test . clj \n - STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 } \n + STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 \n + STORM - MESSAGING - NETTY - SERVER - WORKER - THREADS 1 \n + STORM - MESSAGING - NETTY - CLIENT - WORKER - THREADS 1 \n + } \n - STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 } \n + STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 \n + STORM - MESSAGING - NETTY - SERVER - WORKER - THREADS 1 \n + STORM - MESSAGING - NETTY - CLIENT - WORKER - THREADS 1 \n + } \n - STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 } \n + STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 \n + STORM - MESSAGING - NETTY - SERVER - WORKER - THREADS 1 \n + STORM - MESSAGING - NETTY - CLIENT - WORKER - THREADS 1 \n + } \n - STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 } \n + STORM - MESSAGING - NETTY - MAX - SLEEP - MS 5000 \n + STORM - MESSAGING - NETTY - SERVER - WORKER - THREADS 1 \n + STORM - MESSAGING - NETTY - CLIENT - WORKER - THREADS 1 \n + } \n
leakcanary - android - core \ src \ main \ java \ leakcanary \ internal \ activity \ screen \ HeapDumpScreen . kt \n - val signatures = heapAnalysis . allLeaks . map { it . signature } . toSet ( ) \n + val signatures = heapAnalysis . allLeaks . map { it . signature } \n + . toSet ( ) \n - val titleText = " " " \n - Explore < a href = " explore _ hprof " > Heap Dump < / a > < br > < br > \n - Share < a href = " share " > Heap Dump analysis < / a > < br > < br > \n - Share < a href = " share _ hprof " > Heap Dump file < / a > < br > < br > \n - " " " . trimIndent ( ) + \n + \n + val explore = \n + if ( heapDumpFileExist ) " " " Explore < a href = " explore _ hprof " > Heap Dump < / a > < br > < br > " " " else " " \n + val shareAnalysis = " " " Share < a href = " share " > Heap Dump analysis < / a > < br > < br > " " " \n + val shareFile = \n + if ( heapDumpFileExist ) " " " Share < a href = " share _ hprof " > Heap Dump file < / a > < br > < br > " " " else " " \n + \n + val titleText = explore + shareAnalysis + shareFile + \n
docs \ fundamentals - fixing - a - memory - leak . md \n - Once you find the reference causing the leak , you need to figure out what that reference is about , when it should have been cleared and why it hasn ' t been . Sometimes it ' s obvious , like in the previous example . Sometimes you need more information to figure it out . You can [ add labels ] ( recipes . md # identifying - leaking - objects - and - labeling - objects ) , or explore the hprof directly ( see [ How can I dig beyond the leak trace ? ] ( faq . md / # how - can - i - dig - beyond - the - leak - trace ) ) . \n + Once you find the reference causing the leak , you need to figure out what that reference is about , when it should have been cleared and why it hasn ' t been . Sometimes it ' s obvious , like in the previous example . Sometimes you need more information to figure it out . You can [ add labels ] ( recipes . md # identifying - leaking - objects - and - labeling - objects ) , or explore the hprof directly ( see [ How can I dig beyond the leak trace ? ] ( faq . md # how - can - i - dig - beyond - the - leak - trace ) ) . \n
ReactCommon \ react \ renderer \ components \ image \ ImageProps . cpp \n - convertRawProp ( rawProps , " tintColor " , sourceProps . tintColor , { } ) ) { } \n + convertRawProp ( rawProps , " tintColor " , sourceProps . tintColor , { } ) ) , \n + internal _ analyticTag ( convertRawProp ( \n + rawProps , \n + " internal _ analyticTag " , \n + sourceProps . internal _ analyticTag , \n + { } ) ) { } \n ReactCommon \ react \ renderer \ components \ image \ ImageProps . h \n + const std : : string internal _ analyticTag { } ; \n
ReactCommon \ react \ renderer \ imagemanager \ ImageTelemetry . cpp \n + void ImageTelemetry : : willRequestUrl ( ) { \n + assert ( willRequestUrlTime _ = = kTelemetryUndefinedTimePoint ) ; \n + willRequestUrlTime _ = telemetryTimePointNow ( ) ; \n + } \n + \n + TelemetryTimePoint ImageTelemetry : : getWillRequestUrlTime ( ) const { \n + assert ( willRequestUrlTime _ ! = kTelemetryUndefinedTimePoint ) ; \n + return willRequestUrlTime _ ; \n + } \n + \n ReactCommon \ react \ renderer \ imagemanager \ ImageTelemetry . h \n + # include < react / utils / Telemetry . h > \n + / * \n + * Signaling \n + * / \n + void willRequestUrl ( ) ; \n + \n + / * \n + * Reading \n + * / \n + TelemetryTimePoint getWillRequestUrlTime ( ) const ; \n + \n + TelemetryTimePoint willRequestUrlTime _ { kTelemetryUndefinedTimePoint } ; \n + \n ReactCommon \ react \ renderer \ imagemanager \ platform \ ios \ RCTImageManager . mm \n + telemetry - > willRequestUrl ( ) ; \n
README . md \n - compile ' com . github . apl - devs : appintro : v4 . 2 . 0 ' \n + compile ' com . github . apl - devs : appintro : v4 . 2 . 2 ' \n
example \ src \ main \ AndroidManifest . xml \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n - android : label = " @ string / app _ name " / > \n + android : label = " @ string / app _ name " \n + android : theme = " @ style / AppIntroTheme " / > \n example \ src \ main \ res \ values \ styles . xml \n + < style name = " AppIntroTheme " parent = " MaterialTheme . TranslucentStatus " > \n + < item name = " colorPrimary " > # 1976D2 < / item > \n + < item name = " colorPrimaryDark " > # 1565C0 < / item > \n + < item name = " colorAccent " > # E91E63 < / item > \n + < / style > \n + \n
new file \n data - bus \ src \ test \ java \ com \ iluwatar \ databus \ members \ StatusMemberTest . java \n + package com . iluwatar . databus . members ; \n + \n + import com . iluwatar . databus . DataBus ; \n + import com . iluwatar . databus . data . MessageData ; \n + import com . iluwatar . databus . data . StartingData ; \n + import com . iluwatar . databus . data . StoppingData ; \n + import org . junit . Assert ; \n + import org . junit . Test ; \n + \n + import java . time . LocalDateTime ; \n + import java . time . Month ; \n + \n + / * * \n + * Tests for { @ link StatusMember } . \n + * \n + * @ author Paul Campbell ( pcampbell @ kemitix . net ) \n + * / \n + public class StatusMemberTest { \n + \n + @ Test \n + public void statusRecordsTheStartTime ( ) { \n + / / given \n + final LocalDateTime startTime = LocalDateTime . of ( 2017 , Month . APRIL , 1 , 19 , 9 ) ; \n + final StartingData startingData = new StartingData ( startTime ) ; \n + final StatusMember statusMember = new StatusMember ( 1 ) ; \n + / / when \n + statusMember . accept ( startingData ) ; \n + / / then \n + Assert . assertEquals ( startTime , statusMember . getStarted ( ) ) ; \n + } \n + \n + @ Test \n + public void statusRecordsTheStopTime ( ) { \n + / / given \n + final LocalDateTime stop = LocalDateTime . of ( 2017 , Month . APRIL , 1 , 19 , 12 ) ; \n + final StoppingData stoppingData = new StoppingData ( stop ) ; \n + stoppingData . setDataBus ( DataBus . getInstance ( ) ) ; \n + final StatusMember statusMember = new StatusMember ( 1 ) ; \n + / / when \n + statusMember . accept ( stoppingData ) ; \n + / / then \n + Assert . assertEquals ( stop , statusMember . getStopped ( ) ) ; \n + } \n + \n + @ Test \n + public void statusIgnoresMessageData ( ) { \n + / / given \n + final MessageData messageData = new MessageData ( " message " ) ; \n + final StatusMember statusMember = new StatusMember ( 1 ) ; \n + / / when \n + statusMember . accept ( messageData ) ; \n + / / then \n + Assert . assertNull ( statusMember . getStarted ( ) ) ; \n + Assert . assertNull ( statusMember . getStopped ( ) ) ; \n + } \n + \n + } \n
data - bus \ src \ main \ java \ com \ iluwatar \ databus \ App . java \n + * < p > \n + * < p > The Data - Bus pattern provides a method where different parts of an application may \n + * pass messages between each other without needing to be aware of the other ' s existence . < / p > \n + * < p > Similar to the { @ code ObserverPattern } , members register themselves with the { @ link DataBus } \n + * and may then receive each piece of data that is published to the Data - Bus . The member \n + * may react to any given message or not . < / p > \n + * < p > It allows for Many - to - Many distribution of data , as there may be any number of \n + * publishers to a Data - Bus , and any number of members receiving the data . All members \n + * will receive the same data , the order each receives a given piece of data , is an \n + * implementation detail . < / p > \n + * < p > Members may unsubscribe from the Data - Bus to stop receiving data . < / p > \n
src \ test \ java \ org \ junit \ tests \ AllTests . java \n - import junit . samples . money . MoneyTest ; \n - import org . junit . runners . parameterized . BlockJUnit4ClassRunnerWithParametersTest ; \n + import org . junit . runners . parameterized . BlockJUnit4ClassRunnerWithParametersTest ; \n + import org . junit . samples . money . MoneyTest ; \n - import org . junit . tests . experimental . theories . internal . AllMembersSupplierTest ; \n - import org . junit . tests . experimental . theories . internal . ParameterizedAssertionErrorTest ; \n - import org . junit . tests . experimental . theories . internal . SpecificDataPointsSupplierTest ; \n - import org . junit . tests . experimental . theories . runner . WithAutoGeneratedDataPoints ; \n - import org . junit . tests . experimental . theories . runner . WithDataPointMethod ; \n - import org . junit . tests . experimental . theories . runner . WithNamedDataPoints ; \n - AllMembersSupplierTest . class , \n - SpecificDataPointsSupplierTest . class , \n - ParameterizedAssertionErrorTest . class , \n - WithDataPointMethod . class , \n - WithNamedDataPoints . class , \n - WithAutoGeneratedDataPoints . class , \n - TheoriesPerformanceTest . class , \n
new file \n boot \ Android . bp \n + / / Copyright ( C ) 2021 The Android Open Source Project \n + / / \n + / / Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + / / you may not use this file except in compliance with the License . \n + / / You may obtain a copy of the License at \n + / / \n + / / http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + / / \n + / / Unless required by applicable law or agreed to in writing , software \n + / / distributed under the License is distributed on an " AS IS " BASIS , \n + / / WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + / / See the License for the specific language governing permissions and \n + / / limitations under the License . \n + \n + boot _ image { \n + name : " framework - boot - image " , \n + image _ name : " boot " , \n + } \n
android \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ widget \ CustomRatingBar . java \n - this ( context , null , 0 , 0 ) ; \n + this ( context , null , 0 ) ; \n - this ( context , attrs , 0 , 0 ) ; \n + this ( context , attrs , 0 ) ; \n - this ( context , attrs , defStyleAttr , 0 ) ; \n - } \n - \n - public CustomRatingBar ( Context context , AttributeSet attrs , int defStyleAttr , int defStyleRes ) { \n - super ( context , attrs , defStyleAttr , defStyleRes ) ; \n + super ( context , attrs , defStyleAttr ) ; \n
android \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ explore \ ExploreSessionsFragment . java \n + if ( mSessionsAdapter = = null ) { \n + return 0 ; \n + } \n
build . xml \n - < delete dir = " $ { test - classes } " / > \n - < ! - - < javac srcdir = " $ { jtestsrc } " destdir = " $ { test - classes } " includeJavaRuntime = " yes " - - > \n - < ! - - debug = " true " source = " 1 . 5 " target = " 1 . 5 " includeantruntime = " no " / > - - > \n + < javac srcdir = " $ { jtestsrc } " destdir = " $ { test - classes } " includeJavaRuntime = " yes " \n + debug = " true " source = " 1 . 5 " target = " 1 . 5 " includeantruntime = " no " / > \n
rename from src \ jvm \ clojure \ test \ ReflectorTryCatchFixture . java \n rename to test \ java \ clojure \ test \ ReflectorTryCatchFixture . java \n
src \ main \ java \ io \ vertx \ core \ file \ impl \ FileResolver . java \n - import io . vertx . core . file . impl . FileSystemImpl ; \n + case " resource " : / / substratevm ( graal native image ) \n + if ( cl = = null ) { \n + cl = Object . class . getClassLoader ( ) ; \n + } \n
src \ main \ java \ io \ vertx \ core \ net \ impl \ KeyStoreHelper . java \n - KeyStore keyStore = KeyStore . getInstance ( " jks " ) ; \n + KeyStore keyStore = KeyStore . getInstance ( " PKCS12 " ) ; \n - KeyStore keyStore = KeyStore . getInstance ( " jks " ) ; \n + KeyStore keyStore = KeyStore . getInstance ( " PKCS12 " ) ; \n - KeyStore keyStore = KeyStore . getInstance ( " jks " ) ; \n + KeyStore keyStore = KeyStore . getInstance ( " PKCS12 " ) ; \n
src \ main \ java \ io \ vertx \ core \ http \ HttpHeaders . java \n + / * * \n + * Vary header name \n + * / \n + @ GenIgnore ( GenIgnore . PERMITTED _ TYPE ) \n + CharSequence VARY = createOptimized ( " vary " ) ; \n + \n
pom . xml \n - < log4j2 . version > 2 . 8 . 2 < / log4j2 . version > \n + < log4j2 . version > 2 . 13 . 3 < / log4j2 . version > \n
compiler \ testData \ codegen \ box \ inlineClasses \ result . kt \n + / / IGNORE _ BACKEND : NATIVE \n
compiler \ testData \ codegen \ box \ fakeOverride \ privateFakeOverrides0 . kt \n - / / WITH _ RUNTIME \n + / / WITH _ RUNTIME \n compiler \ testData \ codegen \ box \ fakeOverride \ privateFakeOverrides1 . kt \n - / / WITH _ RUNTIME \n + / / WITH _ RUNTIME \n
. travis . yml \n + dist : trusty \n - oraclejdk8 \n
deleted file \n changeset . txt \n - 2 . 9 . 3 \n - = = = = = = = = = = = \n - - Usage of deprecated SslContextFactory functions updated to new ones # 1194 \n - - Modify Base64 to use java . util . Base64 Encoder / Decoder rather than the sun . misc classes # 1193 \n - - Broken travis build fixed # 1192 \n - - Jetty version updated to latest # 1191 \n - - Add methods for removing routes at runtime # 1189 \n - - Ensuring closage of InputStreamSerializer streams # 1121 \n - - Getting all mapped routes # 1100 \n - - Expose get / set on Service . embeddedServerIdentifier # 1071 \n
React \ CoreModules \ RCTDevMenu . mm \n - if ( devSettings . isLiveReloadAvailable ) { \n - [ items addObject : [ RCTDevMenuItem \n - buttonItemWithTitleBlock : ^ NSString * { \n - return devSettings . isDebuggingRemotely ? @ " Systrace Unavailable " \n - : devSettings . isProfilingEnabled ? @ " Stop Systrace " \n - : @ " Start Systrace " ; \n - } \n - handler : ^ { \n - if ( devSettings . isDebuggingRemotely ) { \n - UIAlertController * alertController = \n - [ UIAlertController alertControllerWithTitle : @ " Systrace Unavailable " \n - message : @ " Stop debugging to enable Systrace . " \n - preferredStyle : UIAlertControllerStyleAlert ] ; \n - _ _ weak _ _ typeof _ _ ( alertController ) weakAlertController = alertController ; \n - [ alertController \n - addAction : [ UIAlertAction actionWithTitle : @ " OK " \n - style : UIAlertActionStyleDefault \n - handler : ^ ( _ _ unused UIAlertAction * action ) { \n - [ weakAlertController \n - dismissViewControllerAnimated : YES \n - completion : nil ] ; \n - } ] ] ; \n - [ RCTPresentedViewController ( ) presentViewController : alertController \n - animated : YES \n - completion : NULL ] ; \n - } else { \n - devSettings . isProfilingEnabled = ! devSettings . isProfilingEnabled ; \n - } \n - } ] ] ; \n - / / " Live reload " which refreshes on every edit was removed in favor of " Fast Refresh " . \n - / / While native code for " Live reload " is still there , please don ' t add the option back . \n - / / See D15958697 for more context . \n - } \n - \n React \ CoreModules \ RCTDevSettings . h \n - ( instancetype ) initWithDataSource : ( id < RCTDevSettingsDataSource > ) dataSource ; \n - @ property ( nonatomic , readonly ) BOOL isLiveReloadAvailable ; \n
React \ CoreModules \ RCTDevMenu . mm \n - \n - / / Reset the old debugger setting so no one gets stuck . \n - / / TODO : Remove in a few weeks . \n - if ( devSettings . isDebuggingRemotely ) { \n - devSettings . isDebuggingRemotely = false ; \n - } \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ charts \ Chart . java \n + mData = data ; \n + mOffsetsCalculated = false ; \n + \n - Log . e ( LOG _ TAG , \n - " Cannot set data for chart . Provided data object is null . " ) ; \n - / / LET THE CHART KNOW THERE IS DATA \n - mOffsetsCalculated = false ; \n - mData = data ; \n - \n + mOffsetsCalculated = false ; \n - * Removes all DataSets ( and thereby Entries ) from the chart . Does not \n - * remove the x - values . Also refreshes the chart by calling invalidate ( ) . \n + * Removes all DataSets ( and thereby Entries ) from the chart . Does not set the data object to null . Also refreshes the \n + * chart by calling invalidate ( ) . \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ utils \ Transformer . java \n - final int count = ( int ) Math . ceil ( to - from ) * 2 ; / / ( int ) Math . ceil ( ( to - from ) * phaseX ) * 2 ; \n + final int count = ( to - from + 1 ) * 2 ; / / ( int ) Math . ceil ( ( to - from ) * phaseX ) * 2 ; \n - final int count = ( int ) Math . ceil ( ( to - from ) * phaseX ) * 2 ; \n + final int count = ( int ) ( ( to - from ) * phaseX + 1 ) * 2 ; \n
ci \ pipeline . yml \n - tag : v0 . 21 . 0 \n + tag : v0 . 23 . 0 \n - name : github - status - resource \n
ci \ tasks \ build - ci - image . yml \n - REGISTRY _ MIRRORS : ( ( docker - hub - mirror ) ) \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ com \ googlecode \ androidannotations \ helper \ AndroidManifestFinder . java \n - private static final String ANDROID _ MANIFEST _ FILE = " androidManifestFile " ; \n + private static final String ANDROID _ MANIFEST _ FILE _ OPTION = " androidManifestFile " ; \n - if ( processingEnv . getOptions ( ) . containsKey ( ANDROID _ MANIFEST _ FILE ) ) { \n + if ( processingEnv . getOptions ( ) . containsKey ( ANDROID _ MANIFEST _ FILE _ OPTION ) ) { \n - String path = processingEnv . getOptions ( ) . get ( ANDROID _ MANIFEST _ FILE ) ; \n - File androidManifestFile = new File ( path , " AndroidManifest . xml " ) ; \n + String path = processingEnv . getOptions ( ) . get ( ANDROID _ MANIFEST _ FILE _ OPTION ) ; \n + File androidManifestFile = new File ( path ) ; \n AndroidAnnotations \ androidannotations \ src \ test \ java \ com \ googlecode \ androidannotations \ utils \ AAProcessorTestHelper . java \n - String manifestPackagePath = manifestPath . substring ( 0 , manifestPath . lastIndexOf ( " / " ) ) ; \n - addProcessorParameter ( " androidManifestFile " , manifestPackagePath ) ; \n + addProcessorParameter ( " androidManifestFile " , manifestPath ) ; \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ com \ googlecode \ androidannotations \ processing \ rest \ MethodProcessor . java \n + import java . util . Locale ; \n - import com . googlecode . androidannotations . processing . EBeanHolder ; \n + import com . googlecode . androidannotations . processing . EBeanHolder ; \n - String restMethodInCapitalLetters = getTarget ( ) . getSimpleName ( ) . toUpperCase ( ) ; \n + String restMethodInCapitalLetters = getTarget ( ) . getSimpleName ( ) . toUpperCase ( Locale . ENGLISH ) ; \n AndroidAnnotations \ androidannotations \ src \ main \ java \ com \ googlecode \ androidannotations \ rclass \ IRClass . java \n + import java . util . Locale ; \n + \n - return toString ( ) . toLowerCase ( ) ; \n + return toString ( ) . toLowerCase ( Locale . ENGLISH ) ; \n
new file \n leakcanary - android - release \ build . gradle \n + apply plugin : ' com . android . library ' \n + apply plugin : ' kotlin - android ' \n + \n + dependencies { \n + api project ( ' : shark - android ' ) \n + \n + implementation deps . kotlin . stdlib \n + } \n + \n + def gitSha ( ) { \n + return ' git rev - parse - - short HEAD ' . execute ( ) . text . trim ( ) \n + } \n + \n + android { \n + resourcePrefix ' leak _ canary _ ' \n + compileSdkVersion versions . compileSdk \n + defaultConfig { \n + minSdkVersion 16 \n + buildConfigField " String " , " LIBRARY _ VERSION " , " \ " $ { rootProject . ext . VERSION _ NAME } \ " " \n + buildConfigField " String " , " GIT _ SHA " , " \ " $ { gitSha ( ) } \ " " \n + consumerProguardFiles ' consumer - proguard - rules . pro ' \n + } \n + lintOptions { \n + disable ' GoogleAppIndexingWarning ' \n + error ' ObsoleteSdkInt ' \n + check ' Interoperability ' \n + } \n + } \n + \n + apply from : rootProject . file ( ' gradle / gradle - mvn - push . gradle ' ) \n new file \n leakcanary - android - release \ consumer - proguard - rules . pro \n new file \n leakcanary - android - release \ gradle . properties \n + POM _ ARTIFACT _ ID = leakcanary - android - release \n + POM _ NAME = LeakCanary for released Android apps \n + POM _ PACKAGING = aar \n new file \n leakcanary - android - release \ src \ main \ AndroidManifest . xml \n + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > \n + < manifest package = " com . squareup . leakcanary . release " / > \n leakcanary - android - sample \ build . gradle \n + releaseImplementation project ( ' : leakcanary - android - release ' ) \n settings . gradle \n + include ' : leakcanary - android - release ' \n
leakcanary - android - core \ src \ main \ java \ leakcanary \ internal \ AndroidHeapDumper . kt \n - val iconSize = resumedActivity . resources . getDimensionPixelSize ( \n + / / Resources from application context : https : / / github . com / square / leakcanary / issues / 2023 \n + val iconSize = context . resources . getDimensionPixelSize ( \n
core \ java \ android \ content \ pm \ OWNERS \n + per - file AppSearchPerson . java = file : / core / java / android / content / pm / SHORTCUT _ OWNERS \n core \ tests \ coretests \ src \ android \ content \ OWNERS \n + per - file AppSearchPersonTest . java = file : / core / java / android / content / pm / SHORTCUT _ OWNERS \n
core \ tests \ coretests \ src \ android \ content \ OWNERS \n - per - file AppSearchPersonTest . java = file : / core / java / android / content / pm / SHORTCUT _ OWNERS \n new file \n core \ tests \ coretests \ src \ android \ content \ pm \ OWNERS \n + per - file AppSearchPersonTest . java = file : / core / java / android / content / pm / SHORTCUT _ OWNERS \n + \n
presto - main \ src \ test \ java \ com \ facebook \ presto \ cost \ TestCostCalculator . java \n + Function < PlanNode , PlanNodeStatsEstimate > statsProvider = planNode - > stats . get ( planNode . getId ( ) . toString ( ) ) ; \n - planNode - > costs . get ( planNode . getId ( ) . toString ( ) ) , \n - planNode - > stats . get ( planNode . getId ( ) . toString ( ) ) , \n + sourceCostProvider ( costCalculator , costs , statsProvider , types ) , \n + statsProvider , \n + private Function < PlanNode , PlanNodeCostEstimate > sourceCostProvider ( \n + CostCalculator costCalculator , \n + Map < String , PlanNodeCostEstimate > costs , \n + Function < PlanNode , PlanNodeStatsEstimate > statsProvider , \n + Map < String , Type > types ) \n + { \n + return node - > { \n + PlanNodeCostEstimate providedCost = costs . get ( node . getId ( ) . toString ( ) ) ; \n + if ( providedCost ! = null ) { \n + return providedCost ; \n + } \n + return calculateCumulativeCost ( \n + costCalculator , \n + node , \n + sourceCostProvider ( costCalculator , costs , statsProvider , types ) , \n + statsProvider , \n + types ) ; \n + } ; \n + } \n + \n
presto - parquet \ src \ main \ java \ com \ facebook \ presto \ parquet \ predicate \ TupleDomainParquetPredicate . java \n - ImmutableMap . Builder < ColumnDescriptor , Domain > domains = ImmutableMap . builder ( ) ; \n + \n + if ( effectivePredicate . isNone ( ) ) { \n + return false ; \n + } \n + \n + Map < ColumnDescriptor , Domain > effectivePredicateDomains = effectivePredicate . getDomains ( ) \n + . orElseThrow ( ( ) - > new IllegalStateException ( " Effective predicate other than none should have domains " ) ) ; \n - Domain domain ; \n - domain = Domain . all ( type ) ; \n - domain = getDomain ( type , numberOfRows , columnStatistics , id , column . toString ( ) , failOnCorruptedParquetStatistics ) ; \n + Domain domain = getDomain ( type , numberOfRows , columnStatistics , id , column . toString ( ) , failOnCorruptedParquetStatistics ) ; \n + if ( domain . isNone ( ) ) { \n + return false ; \n + } \n + Domain effectivePredicateDomain = effectivePredicateDomains . get ( column ) ; \n + if ( effectivePredicateDomain ! = null ) { \n + if ( effectivePredicateDomain . intersect ( domain ) . isNone ( ) ) { \n + return false ; \n + } \n + } \n - domains . put ( column , domain ) ; \n - TupleDomain < ColumnDescriptor > stripeDomain = TupleDomain . withColumnDomains ( domains . build ( ) ) ; \n - \n - return effectivePredicate . overlaps ( stripeDomain ) ; \n + return true ; \n - ImmutableMap . Builder < ColumnDescriptor , Domain > domains = ImmutableMap . builder ( ) ; \n + if ( effectivePredicate . isNone ( ) ) { \n + return false ; \n + } \n + \n + Map < ColumnDescriptor , Domain > effectivePredicateDomains = effectivePredicate . getDomains ( ) \n + . orElseThrow ( ( ) - > new IllegalStateException ( " Effective predicate other than none should have domains " ) ) ; \n - domains . put ( column , domain ) ; \n + if ( domain . isNone ( ) ) { \n + return false ; \n + } \n + Domain effectivePredicateDomain = effectivePredicateDomains . get ( column ) ; \n + if ( effectivePredicateDomain ! = null ) { \n + if ( effectivePredicateDomain . intersect ( domain ) . isNone ( ) ) { \n + return false ; \n + } \n + } \n - TupleDomain < ColumnDescriptor > stripeDomain = TupleDomain . withColumnDomains ( domains . build ( ) ) ; \n - \n - return effectivePredicate . overlaps ( stripeDomain ) ; \n + return true ; \n
unit - of - work \ README . md \n - * The client is asking to optimize the time taken for database transactions . \n + * To optimize the time taken for database transactions . \n
unit - of - work \ README . md \n - * You want to reduce number of database calls . \n + * To reduce number of database calls . \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g2d \ GlyphLayout . java \n - this . height = fontData . capHeight - lines * fontData . down - blankLines * fontData . down * fontData . blankLineScale ; \n + if ( fontData . flipped ) \n + this . height = fontData . capHeight + lines * fontData . down + blankLines * fontData . down * fontData . blankLineScale ; \n + else \n + this . height = fontData . capHeight - lines * fontData . down - blankLines * fontData . down * fontData . blankLineScale ; \n
build . xml \n + < ! - - should we build natives in release mode - - > \n + < property name = " release " value = " true " / > \n + \n extensions \ gdx - jnigen \ src \ com \ badlogic \ gdx \ jnigen \ resources \ scripts \ build - target . xml . template \n + \n + < ! - - define stripper - - > \n + < property name = " stripper " value = " $ { compilerPrefix } strip $ { compilerSuffix } " / > \n + < condition property = " stripper - found " > \n + < or > \n + < ! - - Include both b / c Windows might be either - - > \n + < available file = " $ { stripper } " filepath = " $ { env . PATH } " / > \n + < available file = " $ { stripper } " filepath = " $ { env . Path } " / > \n + < / or > \n + < / condition > \n + < condition property = " should - strip " > \n + < and > \n + < equals arg1 = " $ { stripper - found } " arg2 = " true " / > \n + < equals arg1 = " $ { release } " arg2 = " true " / > \n + < ! - - Don ' t strip mac osx libs - - > \n + < not > \n + < contains string = " $ { libName } " substring = " dylib " / > \n + < / not > \n + < / and > \n + < / condition > \n + \n + < ! - - strips the shared library of debug symbols - - > \n + < target name = " strip " depends = " link " if = " should - strip " > \n + < exec executable = " $ { stripper } " failonerror = " true " dir = " $ { buildDir } " > \n + < arg value = " - - strip - unneeded " / > \n + < arg path = " $ { libsDir } / $ { libName } " / > \n + < / exec > \n + < / target > \n - < target name = " postcompile " depends = " link " > \n + < target name = " postcompile " depends = " strip " > \n
test \ framework \ src \ main \ java \ org \ elasticsearch \ test \ rest \ ESRestTestCase . java \n + case " ilm - history " : \n
modules \ ingest - geoip \ src \ internalClusterTest \ java \ org \ elasticsearch \ ingest \ geoip \ AbstractGeoIpIT . java \n + . put ( GeoIpDownloaderTaskExecutor . ENABLED _ SETTING . getKey ( ) , false ) \n modules \ ingest - geoip \ src \ internalClusterTest \ java \ org \ elasticsearch \ ingest \ geoip \ GeoIpDownloaderIT . java \n + import org . junit . After ; \n - Settings . Builder settings = Settings . builder ( ) \n - . put ( super . nodeSettings ( nodeOrdinal ) ) \n - . put ( GeoIpDownloaderTaskExecutor . ENABLED _ SETTING . getKey ( ) , false ) ; \n + Settings . Builder settings = Settings . builder ( ) . put ( super . nodeSettings ( nodeOrdinal ) ) ; \n + @ After \n + public void disableDownloader ( ) { \n + ClusterUpdateSettingsResponse settingsResponse = client ( ) . admin ( ) . cluster ( ) \n + . prepareUpdateSettings ( ) \n + . setPersistentSettings ( Settings . builder ( ) . put ( GeoIpDownloaderTaskExecutor . ENABLED _ SETTING . getKey ( ) , false ) ) \n + . get ( ) ; \n + assertTrue ( settingsResponse . isAcknowledged ( ) ) ; \n + } \n + \n
x - pack \ plugin \ core \ src \ main \ java \ org \ elasticsearch \ xpack \ core \ ml \ dataframe \ analyses \ Classification . java \n + if ( fieldCapabilitiesResponse = = null ) { \n + return additionalProperties ; \n + } \n x - pack \ plugin \ core \ src \ test \ java \ org \ elasticsearch \ xpack \ core \ ml \ dataframe \ analyses \ ClassificationTests . java \n + public void testGetExplicitlyMappedFields _ FieldCapabilitiesResponseIsNull ( ) { \n + Map < String , Object > explicitlyMappedFields = new Classification ( " foo " ) . getExplicitlyMappedFields ( " results " , null ) ; \n + assertThat ( explicitlyMappedFields , equalTo ( singletonMap ( " results . feature _ importance " , Classification . FEATURE _ IMPORTANCE _ MAPPING ) ) ) ; \n + } \n + \n
build . gradle \n - boolean bwc _ tests _ enabled = true \n - String bwc _ tests _ disabled _ issue = " " / * place a PR link here when committing bwc changes * / \n + boolean bwc _ tests _ enabled = false \n + String bwc _ tests _ disabled _ issue = " https : / / github . com / elastic / elasticsearch / pull / 67821 " / * place a PR link here when committing bwc changes * / \n
spring - core \ src \ main \ java \ org \ springframework \ core \ SimpleAliasRegistry . java \n + import org . springframework . util . ObjectUtils ; \n + * @ author Qimiao Chen \n - for ( Map . Entry < String , String > entry : this . aliasMap . entrySet ( ) ) { \n - String registeredName = entry . getValue ( ) ; \n - if ( registeredName . equals ( name ) ) { \n - String registeredAlias = entry . getKey ( ) ; \n - if ( registeredAlias . equals ( alias ) | | hasAlias ( registeredAlias , alias ) ) { \n - return true ; \n - } \n - } \n - } \n - return false ; \n + String registeredName = this . aliasMap . get ( alias ) ; \n + return ObjectUtils . nullSafeEquals ( registeredName , name ) | | ( registeredName ! = null \n + & & hasAlias ( name , registeredName ) ) ; \n
src \ docs \ asciidoc \ core \ core - aop - api . adoc \n - Class [ ] getInterfaces ( ) ; \n + Class < ? > [ ] getInterfaces ( ) ; \n - - - - \n
packages \ react - native - codegen \ DEFS . bzl \n + force _ static = True , \n
deleted file \n packages \ react - native - codegen \ e2e \ BUCK \n - load ( " @ fbsource / / xplat / js / RKJSModules / Libraries / NativeModules : defs . bzl " , " react _ native _ module _ flow _ types _ library " ) \n - \n - react _ native _ module _ flow _ types _ library ( \n - name = " RNCodegenModuleFixtures " , \n - android _ package _ name = " com . facebook . fbreact . specs " , \n - js _ srcs = glob ( \n - [ \n - " . / _ _ test _ fixtures _ _ / modules / * . js " , \n - ] , \n - ) , \n - ) \n
android - native \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n android \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n core \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n http \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n io \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n sample - android \ pom . xml \n - < version > 0 . 6 . 0 - SNAPSHOT < / version > \n + < version > 0 . 6 . 0 - rc3 < / version > \n
android - native \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n android \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n core \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n http \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n io \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n sample - android \ pom . xml \n - < version > 0 . 6 . 0 - rc3 < / version > \n + < version > 0 . 6 . 0 - SNAPSHOT < / version > \n
realm \ realm - library \ src \ syncIntegrationTest \ java \ io \ realm \ objectserver \ AuthTests . java \n + / / verify that multiple users can be logged in at the same time \n + @ Test \n + public void multipleUsersCanBeLoggedInSimultaneously ( ) { \n + final String password = " password " ; \n + final SyncUser [ ] users = new SyncUser [ 3 ] ; \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , password , \n + true ) ; \n + users [ i ] = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + assertTrue ( users [ i ] . isValid ( ) ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + users [ i ] . logout ( ) ; \n + } \n + \n + for ( int i = 0 ; i < users . length ; i + + ) { \n + assertFalse ( users [ i ] . isValid ( ) ) ; \n + } \n + } \n + \n + / / verify that a single user can be logged out and back in . \n + @ Test \n + public void singleUserCanBeLoggedInAndOutRepeatedly ( ) { \n + final String username = UUID . randomUUID ( ) . toString ( ) ; \n + final String password = " password " ; \n + \n + / / register the user the first time \n + SyncCredentials credentials = SyncCredentials . usernamePassword ( username , password , true ) ; \n + \n + SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + assertTrue ( user . isValid ( ) ) ; \n + user . logout ( ) ; \n + assertFalse ( user . isValid ( ) ) ; \n + \n + / / on subsequent logins , the user is already registered . \n + credentials = credentials = SyncCredentials . usernamePassword ( username , password , false ) ; \n + for ( int i = 0 ; i < 3 ; i + + ) { \n + user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; \n + assertTrue ( user . isValid ( ) ) ; \n + user . logout ( ) ; \n + assertFalse ( user . isValid ( ) ) ; \n + } \n + } \n + \n
CHANGELOG . md \n + # # 2 . 2 . 3 \n + \n + # # # Bug fixes \n + \n + * Fixed native memory leak setting the value of a primary key ( # 3993 ) . \n + \n realm \ realm - library \ src \ main \ cpp \ io _ realm _ internal _ Table . cpp \n - Row * row = new Row ( ( * pk _ table ) [ row _ index ] ) ; \n - StringData current _ primary _ key = row - > get _ string ( io _ realm _ internal _ Table _ PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX ) ; \n + StringData current _ primary _ key = pk _ table - > get _ string ( io _ realm _ internal _ Table _ PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX , row _ index ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ SystemSessionProperties . java \n - new PropertyMetadata < > ( \n + booleanProperty ( \n - " Experimental : Enable join spilling " , \n - BOOLEAN , \n - Boolean . class , \n + " Enable join spilling " , \n - false , \n - value - > { \n - boolean joinSpillEnabled = ( Boolean ) value ; \n - if ( joinSpillEnabled & & ! featuresConfig . isSpillEnabled ( ) ) { \n - throw new PrestoException ( \n - INVALID _ SESSION _ PROPERTY , \n - format ( " % s cannot be set to true ; spilling is not configured " , JOIN _ SPILL _ ENABLED ) ) ; \n - } \n - return joinSpillEnabled ; \n - } , \n - value - > value ) , \n + false ) , \n - return session . getSystemProperty ( JOIN _ SPILL _ ENABLED , Boolean . class ) ; \n + return session . getSystemProperty ( JOIN _ SPILL _ ENABLED , Boolean . class ) & & isSpillEnabled ( session ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ spiller \ TempStorageSingleStreamSpiller . java \n - import com . facebook . presto . spi . page . SerializedPage ; \n + import static com . facebook . presto . common . block . PageBuilderStatus . DEFAULT _ MAX _ PAGE _ SIZE _ IN _ BYTES ; \n + import static com . facebook . presto . execution . buffer . PageSplitterUtil . splitPage ; \n - SerializedPage serializedPage = serde . serialize ( page ) ; \n - long pageSize = serializedPage . getSizeInBytes ( ) ; \n - localSpillContext . updateBytes ( pageSize ) ; \n - spillerStats . addToTotalSpilledBytes ( pageSize ) ; \n - \n - PageDataOutput pageDataOutput = new PageDataOutput ( serializedPage ) ; \n - bufferedBytes + = pageDataOutput . size ( ) ; \n - bufferedPages . add ( pageDataOutput ) ; \n - if ( bufferedBytes > maxBufferSizeInBytes ) { \n - flushBufferedPages ( ) ; \n - } \n + / / page serialization requires page . getSizeInBytes ( ) + Integer . BYTES to fit in an integer \n + splitPage ( page , DEFAULT _ MAX _ PAGE _ SIZE _ IN _ BYTES ) . stream ( ) \n + . map ( serde : : serialize ) \n + . forEach ( serializedPage - > { \n + long pageSize = serializedPage . getSizeInBytes ( ) ; \n + localSpillContext . updateBytes ( pageSize ) ; \n + spillerStats . addToTotalSpilledBytes ( pageSize ) ; \n + PageDataOutput pageDataOutput = new PageDataOutput ( serializedPage ) ; \n + bufferedBytes + = pageDataOutput . size ( ) ; \n + bufferedPages . add ( pageDataOutput ) ; \n + if ( bufferedBytes > maxBufferSizeInBytes ) { \n + flushBufferedPages ( ) ; \n + } \n + } ) ; \n
packages \ Connectivity \ framework \ src \ android \ net \ NetworkUtils . java \n - @ UnsupportedAppUsage ( maxTargetSdk = Build . VERSION _ CODES . R , trackingBug = 170729553 ) \n + @ UnsupportedAppUsage ( maxTargetSdk = Build . VERSION _ CODES . R , trackingBug = 170729553 , \n + publicAlternatives = " Use { @ link android . net . VpnService # protect } instead . " ) \n
tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n + / / Broadcasts can take a long time to be delivered . The test will not wait for that long unless \n + / / there is a failure , so use a long timeout . \n + private static final int BROADCAST _ TIMEOUT _ MS = 30 _ 000 ; \n - return expectBroadcast ( TIMEOUT _ MS ) ; \n + return expectBroadcast ( BROADCAST _ TIMEOUT _ MS ) ; \n
mobile \ src \ main \ java \ com \ example \ android \ uamp \ MusicService . java \n - result . sendResult ( mMusicProvider . getChildren ( parentMediaId , getResources ( ) ) ) ; \n + if ( mMusicProvider . isInitialized ( ) ) { \n + / / if music library is ready , return immediately \n + result . sendResult ( mMusicProvider . getChildren ( parentMediaId , getResources ( ) ) ) ; \n + } else { \n + / / otherwise , only return results when the music library is retrieved \n + result . detach ( ) ; \n + mMusicProvider . retrieveMediaAsync ( new MusicProvider . Callback ( ) { \n + @ Override \n + public void onMusicCatalogReady ( boolean success ) { \n + result . sendResult ( mMusicProvider . getChildren ( parentMediaId , getResources ( ) ) ) ; \n + } \n + } ) ; \n + } \n mobile \ src \ main \ java \ com \ example \ android \ uamp \ model \ MusicProvider . java \n + public boolean isInitialized ( ) { \n + return mCurrentState = = State . INITIALIZED ; \n + } \n + \n
mobile \ build . gradle \n - compile ' com . android . support : support - v4 : 23 . 1 . 1 ' \n
buildSrc \ src \ main \ resources \ minimumGradleVersion \n - 6 . 8 . 2 \n + 6 . 8 . 3 \n gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 8 . 2 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 8 . 3 - all . zip \n - distributionSha256Sum = 1433372d903ffba27496f8d5af24265310d2da0d78bf6b4e5138831d4fe066e9 \n + distributionSha256Sum = 9af5c8e7e2cd1a3b0f694a4ac262b9f38c75262e74a9e8b5101af302a6beadd7 \n x - pack \ qa \ smoke - test - plugins - ssl \ build . gradle \n - tasks . named ( " processTestResources " ) . configure { \n - dependsOn ( copyKeyCerts ) \n - } \n - tasks . named ( " integTest " ) . configure { \n - dependsOn ( copyKeyCerts ) \n + \n + [ ' processTestResources ' , ' integTest ' , ' filepermissions ' , ' forbiddenPatterns ' ] . each { \n + tasks . named ( it ) . configure { \n + dependsOn ( copyKeyCerts ) \n + } \n
buildSrc \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n + gradlePluginPortal ( ) \n buildSrc \ src \ integTest \ groovy \ org \ elasticsearch \ gradle \ ElasticsearchTestBasePluginFuncTest . groovy \n - jcenter ( ) \n + mavenCentral ( ) \n buildSrc \ src \ main \ java \ org \ elasticsearch \ gradle \ RepositoriesSetupPlugin . java \n - repos . jcenter ( ) ; \n + repos . mavenCentral ( ) ; \n buildSrc \ src \ testKit \ elasticsearch . build \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n - jcenter ( ) \n + mavenCentral ( ) \n buildSrc \ src \ testKit \ testingConventions \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n buildSrc \ src \ testKit \ thirdPartyAudit \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n distribution \ docker \ transform - log4j - config \ build . gradle \n - jcenter ( ) \n + mavenCentral ( ) \n
core \ api \ current . txt \n - field public static final int GET _ INTENT _ FILTERS = 32 ; / / 0x20 \n + field @ Deprecated public static final int GET _ INTENT _ FILTERS = 32 ; / / 0x20 \n core \ java \ android \ content \ pm \ PackageManager . java \n + * \n + * @ deprecated The platform does not support getting { @ link IntentFilter } s for the package . \n + @ Deprecated \n
packages \ Shell \ src \ com \ android \ shell \ BugreportProgressService . java \n + if ( mInfo . bugreportFile . length ( ) = = 0 ) { \n + Log . e ( TAG , " Bugreport file empty . File path = " + mInfo . bugreportFile ) ; \n + onError ( BUGREPORT _ ERROR _ RUNTIME ) ; \n + return ; \n + } \n - if ( mInfo . bugreportFile . length ( ) = = 0 ) { \n - Log . e ( TAG , " Bugreport file empty . File path = " + bugreportFilePath ) ; \n - return ; \n - } \n packages \ Shell \ tests \ src \ com \ android \ shell \ BugreportReceiverTest . java \n + @ Test \n + public void testBugreportFinished _ withEmptyBugreportFile ( ) throws Exception { \n + sendBugreportStarted ( ) ; \n + \n + IoUtils . closeQuietly ( mBugreportFd ) ; \n + mBugreportFd = null ; \n + sendBugreportFinished ( ) ; \n + \n + assertServiceNotRunning ( ) ; \n + } \n + \n - writeZipFile ( mBugreportFd , BUGREPORT _ FILE , BUGREPORT _ CONTENT ) ; \n + if ( mBugreportFd ! = null ) { \n + writeZipFile ( mBugreportFd , BUGREPORT _ FILE , BUGREPORT _ CONTENT ) ; \n + } \n
src \ clj \ clojure \ core . clj \n + ( defmacro cond \n + " Takes a set of test / expr pairs . It evaluates each test one at a \n + time . If a test returns logical true , cond evaluates and returns \n + the value of the corresponding expr and doesn ' t evaluate any of the \n + other tests or exprs . ( cond ) returns nil . " \n + { : added " 1 . 0 " } \n + [ & clauses ] \n + ( when clauses \n + ( list ' if ( first clauses ) \n + ( if ( next clauses ) \n + ( second clauses ) \n + ( throw ( IllegalArgumentException . \n + " cond requires an even number of forms " ) ) ) \n + ( cons ' clojure . core / cond ( next ( next clauses ) ) ) ) ) ) \n + \n - " Returns a Symbol with the given namespace and name . " \n + " Returns a Symbol with the given namespace and name . Arity - 1 works \n + on strings , keywords , and vars . " \n - ( [ name ] ( if ( symbol ? name ) name ( clojure . lang . Symbol / intern name ) ) ) \n + ( [ name ] \n + ( cond \n + ( symbol ? name ) name \n + ( instance ? String name ) ( clojure . lang . Symbol / intern name ) \n + ( instance ? clojure . lang . Var name ) ( . toSymbol ^ clojure . lang . Var name ) \n + ( instance ? clojure . lang . Keyword name ) ( . sym ^ clojure . lang . Keyword name ) \n + : else ( throw ( IllegalArgumentException . " no conversion to symbol " ) ) ) ) \n - ( defmacro cond \n - " Takes a set of test / expr pairs . It evaluates each test one at a \n - time . If a test returns logical true , cond evaluates and returns \n - the value of the corresponding expr and doesn ' t evaluate any of the \n - other tests or exprs . ( cond ) returns nil . " \n - { : added " 1 . 0 " } \n - [ & clauses ] \n - ( when clauses \n - ( list ' if ( first clauses ) \n - ( if ( next clauses ) \n - ( second clauses ) \n - ( throw ( IllegalArgumentException . \n - " cond requires an even number of forms " ) ) ) \n - ( cons ' clojure . core / cond ( next ( next clauses ) ) ) ) ) ) \n
src \ jvm \ clojure \ lang \ Compiler . java \n + private static boolean isSpecError ( Throwable t ) { \n + return ( t instanceof IExceptionInfo ) & & RT . get ( ( ( IExceptionInfo ) t ) . getData ( ) , SPEC _ PROBLEMS ) ! = null ; \n + } \n + \n - if ( cause instanceof IExceptionInfo ) { \n - IPersistentMap data = ( IPersistentMap ) ( ( IExceptionInfo ) cause ) . getData ( ) ; \n - if ( PHASE _ MACRO _ SYNTAX _ CHECK . equals ( data . valAt ( ERR _ PHASE ) ) & & data . valAt ( SPEC _ PROBLEMS ) ! = null ) { \n - return String . format ( " % s " , getMessage ( ) ) ; \n - } else { \n - return String . format ( " % s % n % s " , getMessage ( ) , cause . getMessage ( ) ) ; \n - } \n + if ( RT . get ( data , ERR _ PHASE ) = = PHASE _ MACRO _ SYNTAX _ CHECK & & isSpecError ( cause ) ) { \n + return String . format ( " % s " , getMessage ( ) ) ; \n + } else { \n + return String . format ( " % s % n % s " , getMessage ( ) , cause . getMessage ( ) ) ; \n + } else { \n + return getMessage ( ) ; \n - return getMessage ( ) ; \n
singleton \ src \ test \ java \ com \ iluwatar \ singleton \ LazyLoadedSingletonThreadSafetyTest . java \n + for ( Field ff : f ) { \n + System . out . println ( ff . getDeclaringClass ( ) ) ; \n + } \n
new file \n lazy - loading \ src \ test \ java \ com \ iluwatar \ lazy \ loading \ HolderThreadSafeTest . java \n + package com . iluwatar . lazy . loading ; \n + \n + import org . junit . Test ; \n + \n + import java . lang . reflect . Field ; \n + \n + import static org . junit . Assert . assertEquals ; \n + import static org . junit . Assert . assertNotNull ; \n + import static org . junit . Assert . assertNull ; \n + \n + / * * \n + * Using reflection this test shows that the heavy field is not instantiated until the method getHeavy is called \n + * \n + * Created by jones on 11 / 10 / 2015 . \n + * / \n + public class HolderThreadSafeTest { \n + \n + @ Test \n + public void test ( ) throws IllegalAccessException { \n + HolderThreadSafe hts = new HolderThreadSafe ( ) ; \n + \n + { / / first call is null \n + Field [ ] f = HolderThreadSafe . class . getDeclaredFields ( ) ; \n + assertEquals ( " One field only in HolderThreadSafe " , 1 , f . length ) ; \n + f [ 0 ] . setAccessible ( true ) ; \n + \n + assertNull ( f [ 0 ] . get ( hts ) ) ; \n + } \n + \n + / / now it is lazily loaded \n + hts . getHeavy ( ) ; \n + \n + { / / now it is not null - call via reflection so that the test is the same before and after \n + Field [ ] f = HolderThreadSafe . class . getDeclaredFields ( ) ; \n + assertEquals ( " One field only in HolderThreadSafe " , 1 , f . length ) ; \n + f [ 0 ] . setAccessible ( true ) ; \n + \n + assertNotNull ( f [ 0 ] . get ( hts ) ) ; \n + } \n + } \n + } \n
extensions \ gdx - controllers \ gdx - controllers - desktop \ src \ com \ badlogic \ gdx \ controllers \ desktop \ OisControllers . java \n + OisController [ ] oldControllers = controllers ; \n + if ( controllers . length = = oldControllers . length & & oldControllers [ i ] . getName ( ) . equals ( controllers [ i ] . getName ( ) ) ) { \n + if ( oldControllers [ i ] . listeners . size ! = 0 ) { \n + controllers [ i ] . listeners . addAll ( oldControllers [ i ] . listeners ) ; \n + } \n + } \n + else { \n + for ( int j = 0 ; j < oldControllers . length ; j + + ) { \n + if ( oldControllers [ j ] . listeners . size ! = 0 & & oldControllers [ j ] . getName ( ) . equals ( controllers [ i ] . getName ( ) ) ) { \n + controllers [ i ] . listeners . addAll ( oldControllers [ j ] . listeners ) ; \n + break ; \n + } \n + } \n + } \n
extensions \ gdx - setup \ src \ com \ badlogic \ gdx \ setup \ resources \ android \ AndroidManifest . xml \n - android : configChanges = " keyboard | keyboardHidden | orientation | screenSize " > \n + android : configChanges = " keyboard | keyboardHidden | navigation | orientation | screenSize " > \n tests \ gdx - tests - android \ AndroidManifest . xml \n - android : configChanges = " keyboard | keyboardHidden | orientation " > \n + android : configChanges = " keyboard | keyboardHidden | navigation | orientation " > \n - android : configChanges = " keyboard | keyboardHidden | orientation " \n + android : configChanges = " keyboard | keyboardHidden | navigation | orientation " \n - android : configChanges = " keyboard | keyboardHidden | orientation " \n + android : configChanges = " keyboard | keyboardHidden | navigation | orientation " \n
stetho \ src \ main \ java \ com \ facebook \ stetho \ common \ android \ ViewUtil . java \n - View childResult = hitTest ( child , localPoint . x , localPoint . y , viewSelector ) ; \n + View childResult = hitTestImpl ( \n + child , \n + localPoint . x , \n + localPoint . y , \n + viewSelector , \n + allowViewGroupResult ) ; \n + \n
stetho \ src \ main \ java \ com \ facebook \ stetho \ json \ ObjectMapper . java \n + import javax . annotation . concurrent . GuardedBy ; \n + import java . util . IdentityHashMap ; \n + import java . util . Map ; \n + @ GuardedBy ( " mJsonValueMethodCache " ) \n + private final Map < Class < ? > , Method > mJsonValueMethodCache = new IdentityHashMap < > ( ) ; \n + \n - private static Method getJsonValueMethod ( Class < ? > clazz ) { \n + private Method getJsonValueMethod ( Class < ? > clazz ) { \n + synchronized ( mJsonValueMethodCache ) { \n + Method method = mJsonValueMethodCache . get ( clazz ) ; \n + if ( method = = null & & ! mJsonValueMethodCache . containsKey ( clazz ) ) { \n + method = getJsonValueMethodImpl ( clazz ) ; \n + mJsonValueMethodCache . put ( clazz , method ) ; \n + } \n + return method ; \n + } \n + } \n + \n + @ Nullable \n + private static Method getJsonValueMethodImpl ( Class < ? > clazz ) { \n
Libraries \ Modal \ _ _ tests _ _ \ Modal - test . js \n - it ( ' should shallow render as < Component > when mocked ' , ( ) = > { \n + it ( ' should shallow render as < Modal > when mocked ' , ( ) = > { \n Libraries \ Modal \ _ _ tests _ _ \ _ _ snapshots _ _ \ Modal - test . js . snap \n - exports [ ` < Modal / > should shallow render as < Component > when mocked 1 ` ] = ` \n - < Component \n + exports [ ` < Modal / > should shallow render as < Modal > when mocked 1 ` ] = ` \n + < Modal \n - < / Component > \n + < / Modal > \n jest \ mockComponent . js \n + const name = \n + RealComponent . displayName | | \n + RealComponent . name | | \n + ( RealComponent . render / / handle React . forwardRef \n + ? RealComponent . render . displayName | | RealComponent . render . name \n + : ' Unknown ' ) ; \n + \n + const nameWithoutPrefix = name . replace ( / ^ ( RCT | RK ) / , ' ' ) ; \n + \n - const name = \n - RealComponent . displayName | | \n - RealComponent . name | | \n - ( RealComponent . render / / handle React . forwardRef \n - ? RealComponent . render . displayName | | RealComponent . render . name \n - : ' Unknown ' ) ; \n - \n - return React . createElement ( \n - name . replace ( / ^ ( RCT | RK ) / , ' ' ) , \n - props , \n - this . props . children , \n - ) ; \n + return React . createElement ( nameWithoutPrefix , props , this . props . children ) ; \n + Component . displayName = nameWithoutPrefix ; \n + \n
Libraries \ Components \ TextInput \ TextInput . js \n - const { useEffect , useRef , useState } = React ; \n + const { useLayoutEffect , useRef , useState } = React ; \n - useEffect ( ( ) = > { \n + useLayoutEffect ( ( ) = > { \n - useEffect ( ( ) = > { \n + useLayoutEffect ( ( ) = > { \n + \n + if ( TextInputState . currentlyFocusedInput ( ) = = = inputRefValue ) { \n + nullthrows ( inputRefValue ) . blur ( ) ; \n + } \n - useEffect ( ( ) = > { \n - / / When unmounting we need to blur the input \n - return ( ) = > { \n - if ( isFocused ( ) ) { \n - nullthrows ( inputRef . current ) . blur ( ) ; \n - } \n - } ; \n - } , [ inputRef ] ) ; \n - \n
ReactCommon \ jsi \ jsi \ decorator . h \n - void collectGarbage ( ) override { \n - plain ( ) . instrumentation ( ) . collectGarbage ( ) ; \n + void collectGarbage ( std : : string cause ) override { \n + plain ( ) . instrumentation ( ) . collectGarbage ( std : : move ( cause ) ) ; \n ReactCommon \ jsi \ jsi \ instrumentation . h \n - / / / perform a full garbage collection \n - virtual void collectGarbage ( ) = 0 ; \n + / / / Perform a full garbage collection . \n + / / / \ param cause The cause of this collection , as it should be reported in \n + / / / logs . \n + virtual void collectGarbage ( std : : string cause ) = 0 ; \n ReactCommon \ jsi \ jsi \ jsi . cpp \n - void collectGarbage ( ) override { } \n + void collectGarbage ( std : : string ) override { } \n ReactCommon \ jsiexecutor \ jsireact \ JSIExecutor . cpp \n - runtime _ - > instrumentation ( ) . collectGarbage ( ) ; \n + runtime _ - > instrumentation ( ) . collectGarbage ( " memory warning " ) ; \n
ReactCommon \ hermes \ inspector \ tools \ msggen \ . babelrc \n - " plugins " : [ " idx " ] \n ReactCommon \ hermes \ inspector \ tools \ msggen \ package . json \n - " idx " : " ^ 2 . 1 . 0 " , \n ReactCommon \ hermes \ inspector \ tools \ msggen \ yarn . lock \n - idx @ ^ 2 . 1 . 0 : \n - version " 2 . 5 . 6 " \n - resolved " https : / / registry . yarnpkg . com / idx / - / idx - 2 . 5 . 6 . tgz # 1f824595070100ae9ad585c86db08dc74f83a59d " \n - integrity sha512 - WFXLF7JgPytbMgelpRY46nHz5tyDcedJ76pLV + RJWdb8h33bxFq4bdZau38DhNSzk5eVniBf1K3jwfK + Lb5nYA = = \n - \n
gradle . properties \n - ANDROID _ GRADLE _ VERSION = 1 . 0 . 0 \n + ANDROID _ GRADLE _ VERSION = 1 . 2 . 2 \n - ROBOLECTRIC _ GRADLE _ VERSION = 0 . 14 . 0 \n + ROBOLECTRIC _ GRADLE _ VERSION = 1 . 0 . 1 \n - JUNIT _ VERSION = 4 . 11 \n - MOCKITO _ VERSION = 1 . 9 . 5 \n + JUNIT _ VERSION = 4 . 12 \n + MOCKITO _ VERSION = 1 . 10 . 19 \n gradle \ wrapper \ gradle - wrapper . properties \n - # Sat Dec 20 22 : 55 : 19 PST 2014 \n + # Thu Apr 30 12 : 21 : 55 CEST 2015 \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 2 - bin . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 3 - all . zip \n integration \ volley \ build . gradle \n - apply plugin : ' robolectric ' \n + apply plugin : ' org . robolectric ' \n library \ build . gradle \n - apply plugin : ' robolectric ' \n + apply plugin : ' org . robolectric ' \n - findbugsTestDebug { \n - enabled = false \n - } \n - \n - check . dependsOn ( ' findbugs ' ) \n + tasks . check . dependsOn ( tasks . findbugs ) \n - pmdTestDebug { \n - enabled = false \n - } \n - \n - check . dependsOn ( ' pmd ' ) \n + tasks . check . dependsOn ( tasks . pmd ) \n third _ party \ gif _ decoder \ build . gradle \n - apply plugin : ' robolectric ' \n + apply plugin : ' org . robolectric ' \n
README . md \n - < type > aar < / type > \n - - - - - - - \n + - - - - - \n
pom . xml \n + < parent > \n + < groupId > org . sonatype . oss < / groupId > \n + < artifactId > oss - parent < / artifactId > \n + < version > 7 < / version > \n + < / parent > \n + < description > Implementation of the Pull - to - Refresh UI Pattern for Android . < / description > \n + < url > https : / / github . com / chrisbanes / Android - PullToRefresh < / url > \n + < licenses > \n + < license > \n + < name > Apache V2 < / name > \n + < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 < / url > \n + < distribution > repo < / distribution > \n + < / license > \n + < / licenses > \n + < scm > \n + < url > https : / / github . com / chrisbanes / Android - PullToRefresh < / url > \n + < connection > scm : git : git : / / github . com / chrisbanes / Android - PullToRefresh . git < / connection > \n + < developerConnection > scm : git : git @ github . com : chrisbanes / Android - PullToRefresh . git < / developerConnection > \n + < / scm > \n + < developers > \n + < developer > \n + < name > Chris Banes < / name > \n + < url > http : / / about . me / chrisbanes < / url > \n + < id > chrisbanes < / id > \n + < / developer > \n + < / developers > \n
library \ pom . xml \n - < version > 1 . 3 . 0 < / version > \n + < version > 1 . 3 . 0 - SNAPSHOT < / version > \n pom . xml \n - < version > 1 . 3 . 0 < / version > \n + < version > 1 . 3 . 0 - SNAPSHOT < / version > \n sample \ pom . xml \n - < version > 1 . 3 . 0 < / version > \n + < version > 1 . 3 . 0 - SNAPSHOT < / version > \n
new file \n src \ test \ java \ spark \ route \ SimpleRouteMatcherTest . java \n + package spark . route ; \n + \n + import java . util . List ; \n + \n + import org . junit . Test ; \n + import org . powermock . reflect . Whitebox ; \n + import static org . junit . Assert . * ; \n + \n + public class SimpleRouteMatcherTest { \n + \n + @ Test \n + public void testParseValidateAddRoute _ whenHttpMethodIsValid _ thenAddRoute ( ) { \n + String route = " get ' / hello ' " ; \n + String acceptType = " * / * " ; \n + Object target = new Object ( ) ; \n + \n + RouteEntry expectedRouteEntry = new RouteEntry ( ) ; \n + expectedRouteEntry . acceptedType = acceptType ; \n + expectedRouteEntry . httpMethod = HttpMethod . get ; \n + expectedRouteEntry . path = " / hello " ; \n + expectedRouteEntry . target = target ; \n + \n + SimpleRouteMatcher simpleRouteMatcher = new SimpleRouteMatcher ( ) ; \n + simpleRouteMatcher . parseValidateAddRoute ( route , acceptType , target ) ; \n + \n + List < RouteEntry > routes = Whitebox . getInternalState ( simpleRouteMatcher , " routes " ) ; \n + assertEquals ( routes . size ( ) , 1 ) ; \n + assertEquals ( routes . get ( 0 ) . acceptedType , expectedRouteEntry . acceptedType ) ; \n + assertEquals ( routes . get ( 0 ) . httpMethod , expectedRouteEntry . httpMethod ) ; \n + assertEquals ( routes . get ( 0 ) . path , expectedRouteEntry . path ) ; \n + assertEquals ( routes . get ( 0 ) . target , expectedRouteEntry . target ) ; \n + } \n + \n + @ Test \n + public void testParseValidateAddRoute _ whenHttpMethodIsInvalid _ thenDoNotAddRoute ( ) { \n + String route = " test ' / hello ' " ; \n + String acceptType = " * / * " ; \n + Object target = new Object ( ) ; \n + \n + SimpleRouteMatcher simpleRouteMatcher = new SimpleRouteMatcher ( ) ; \n + simpleRouteMatcher . parseValidateAddRoute ( route , acceptType , target ) ; \n + \n + List < RouteEntry > routes = Whitebox . getInternalState ( simpleRouteMatcher , " routes " ) ; \n + assertEquals ( routes . size ( ) , 0 ) ; \n + } \n + } \n
src \ test \ java \ spark \ resource \ ClassPathResourceHandlerTest . java \n - assertNull ( classPathResourceHandler . getResource ( " / folder " ) ) ; \n + assertNull ( " Should return null because the resource path doesn ' t point to a file " , classPathResourceHandler . getResource ( " / folder " ) ) ; \n - assertNull ( classPathResourceHandler . getResource ( " / folder " ) ) ; \n + assertNull ( " Should return null because the resource path doesn ' t exists " , classPathResourceHandler . getResource ( " / folder " ) ) ; \n src \ test \ java \ spark \ resource \ ExternalResourceHandlerTest . java \n + import org . junit . Rule ; \n + import org . junit . rules . ExpectedException ; \n - assertNull ( externalResourceHandler . getResource ( " / folder " ) ) ; \n + assertNull ( " Should return null because the resource path doesn ' t point to a file " , externalResourceHandler . getResource ( " / folder " ) ) ; \n - assertNull ( externalResourceHandler . getResource ( " / folder " ) ) ; \n + assertNull ( " Should return null because the resource path doesn ' t exists " , externalResourceHandler . getResource ( " / folder " ) ) ; \n src \ test \ java \ spark \ util \ ResourceUtilsTest . java \n + import org . junit . Rule ; \n + import org . junit . rules . ExpectedException ; \n - @ Test ( expected = FileNotFoundException . class ) \n + @ Rule \n + public ExpectedException thrown = ExpectedException . none ( ) ; \n + \n + @ Test \n + thrown . expect ( FileNotFoundException . class ) ; \n + thrown . expectMessage ( " My File Path cannot be resolved to absolute file path " + \n + " because it does not reside in the file system : http : / / example . com / " ) ; \n - ResourceUtils . getFile ( url , " Some description " ) ; \n + ResourceUtils . getFile ( url , " My File Path " ) ; \n
pom . xml \n - < dep . alluxio . version > 2 . 2 . 0 < / dep . alluxio . version > \n + < dep . alluxio . version > 2 . 2 . 2 < / dep . alluxio . version > \n
pom . xml \n - < version > 1 . 3 . 5 - 4 < / version > \n + < version > 1 . 4 . 5 - 4 < / version > \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ org \ androidannotations \ api \ BackgroundExecutor . java \n - / * no serial , no delay : execute now * / \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ org \ androidannotations \ api \ BackgroundExecutor . java \n - private long targetTime ; / * in milliseconds since epoch * / \n + private long targetTimeMillis ; / * since epoch * / \n - targetTime = System . currentTimeMillis ( ) + delay ; \n + targetTimeMillis = System . currentTimeMillis ( ) + delay ; \n - next . delay = Math . max ( 0 , ( int ) ( targetTime - System . currentTimeMillis ( ) ) ) ; \n + next . delay = Math . max ( 0 , ( int ) ( targetTimeMillis - System . currentTimeMillis ( ) ) ) ; \n
new file \n compiler \ ir \ ir . tree \ src \ org \ jetbrains \ kotlin \ ir \ linkage \ KotlinIrLinkerInternalException . kt \n + / * \n + * Copyright 2010 - 2021 JetBrains s . r . o . and Kotlin Programming Language contributors . \n + * Use of this source code is governed by the Apache 2 . 0 license that can be found in the license / LICENSE . txt file . \n + * / \n + \n + package org . jetbrains . kotlin . ir . linkage \n + \n + object KotlinIrLinkerInternalException : Exception ( " Kotlin IR Linker exception " ) \n compiler \ ir \ ir . tree \ src \ org \ jetbrains \ kotlin \ ir \ util \ ExternalDependenciesGenerator . kt \n + import org . jetbrains . kotlin . analyzer . AnalysisResult \n + import org . jetbrains . kotlin . ir . linkage . KotlinIrLinkerInternalException \n - do { \n - prevUnbound = unbound \n - unbound = symbolTable . allUnbound \n + try { \n + do { \n + prevUnbound = unbound \n + unbound = symbolTable . allUnbound \n - for ( symbol in unbound ) { \n - / / Symbol could get bound as a side effect of deserializing other symbols . \n - if ( ! symbol . isBound ) { \n - irProviders . getDeclaration ( symbol ) \n + for ( symbol in unbound ) { \n + / / Symbol could get bound as a side effect of deserializing other symbols . \n + if ( ! symbol . isBound ) { \n + irProviders . getDeclaration ( symbol ) \n + } \n - } \n - / / We wait for the unbound to stabilize on fake overrides . \n - } while ( unbound ! = prevUnbound ) \n + / / We wait for the unbound to stabilize on fake overrides . \n + } while ( unbound ! = prevUnbound ) \n + } catch ( ex : KotlinIrLinkerInternalException ) { \n + throw AnalysisResult . CompilationErrorException ( ) \n + } \n
compiler \ cli \ src \ org \ jetbrains \ kotlin \ cli \ common \ CLICompiler . kt \n + import org . jetbrains . kotlin . ir . util . IrMessageLogger \n - import java . util . ArrayList \n + import java . util . * \n + configuration . put ( IrMessageLogger . IR _ MESSAGE _ LOGGER , IrMessageCollector ( collector ) ) \n + \n new file \n compiler \ cli \ src \ org \ jetbrains \ kotlin \ cli \ common \ messages \ IrMessageCollector . kt \n + / * \n + * Copyright 2010 - 2021 JetBrains s . r . o . and Kotlin Programming Language contributors . \n + * Use of this source code is governed by the Apache 2 . 0 license that can be found in the license / LICENSE . txt file . \n + * / \n + \n + package org . jetbrains . kotlin . cli . common . messages \n + \n + import org . jetbrains . kotlin . ir . util . IrMessageLogger \n + \n + class IrMessageCollector ( private val messageCollector : MessageCollector ) : IrMessageLogger { \n + override fun report ( severity : IrMessageLogger . Severity , message : String , location : IrMessageLogger . Location ? ) { \n + messageCollector . report ( severityToCLISeverity ( severity ) , message , locationToCLILocation ( location ) ) \n + } \n + \n + companion object { \n + private fun severityToCLISeverity ( severity : IrMessageLogger . Severity ) : CompilerMessageSeverity { \n + return when ( severity ) { \n + IrMessageLogger . Severity . INFO - > CompilerMessageSeverity . INFO \n + IrMessageLogger . Severity . WARNING - > CompilerMessageSeverity . WARNING \n + IrMessageLogger . Severity . ERROR - > CompilerMessageSeverity . ERROR \n + } \n + } \n + \n + private fun locationToCLILocation ( location : IrMessageLogger . Location ? ) : CompilerMessageLocation ? { \n + return location ? . run { \n + CompilerMessageLocation . Companion . create ( filePath , line , column , null ) \n + } \n + } \n + } \n + } \n
idea \ idea - fir \ tests \ org \ jetbrains \ kotlin \ shortenRefs \ AbstractFirShortenRefsTest . kt \n + import com . intellij . openapi . util . TextRange \n - val ( startOffset , endOffset ) = runReadAction { selectionModel . selectionStart to selectionModel . selectionEnd } \n + val selection = runReadAction { TextRange ( selectionModel . selectionStart , selectionModel . selectionEnd ) } \n - collectPossibleReferenceShortenings ( file , startOffset , endOffset ) \n + collectPossibleReferenceShortenings ( file , selection ) \n idea \ idea - frontend - api \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ KtAnalysisSession . kt \n + import com . intellij . openapi . util . TextRange \n - fun collectPossibleReferenceShortenings ( file : KtFile , from : Int , to : Int ) = referenceShortener . collectShortenings ( file , from , to ) \n + fun collectPossibleReferenceShortenings ( file : KtFile , selection : TextRange ) : ShortenCommand = \n + referenceShortener . collectShortenings ( file , selection ) \n idea \ idea - frontend - api \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ components \ KtReferenceShortener . kt \n + import com . intellij . openapi . util . TextRange \n - abstract fun collectShortenings ( file : KtFile , from : Int , to : Int ) : ShortenCommand \n + abstract fun collectShortenings ( file : KtFile , selection : TextRange ) : ShortenCommand \n idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ fir \ components \ KtFirReferenceShortener . kt \n + import com . intellij . openapi . util . TextRange \n - override fun collectShortenings ( file : KtFile , from : Int , to : Int ) : ShortenCommand { \n + override fun collectShortenings ( file : KtFile , selection : TextRange ) : ShortenCommand { \n
idea \ idea - frontend - fir \ src \ org \ jetbrains \ kotlin \ idea \ frontend \ api \ fir \ components \ KtFirReferenceShortener . kt \n - addTypeToImportAndShorten ( mostTopLevelClassId . asSingleFqName ( ) , mostTopLevelTypeElement ) \n + addTypeToShorten ( mostTopLevelTypeElement , mostTopLevelClassId . asSingleFqName ( ) ) \n - private fun addTypeToShorten ( typeElement : KtUserType ) { \n - typesToShorten . add ( typeElement ) \n - } \n - \n - private fun addTypeToImportAndShorten ( classFqName : FqName , mostTopLevelTypeElement : KtUserType ) { \n - namesToImport . add ( classFqName ) \n + private fun addTypeToShorten ( mostTopLevelTypeElement : KtUserType , classFqName : FqName ? = null ) { \n + namesToImport . addIfNotNull ( classFqName ) \n - addElementToImportAndShorten ( mostTopLevelClassId . asSingleFqName ( ) , mostTopLevelQualifier ) \n + addElementToShorten ( mostTopLevelQualifier , mostTopLevelClassId . asSingleFqName ( ) ) \n - addElementToImportAndShorten ( additionalImport , qualifiedCallExpression ) \n + addElementToShorten ( qualifiedCallExpression , additionalImport ) \n - private fun addElementToShorten ( element : KtDotQualifiedExpression ) { \n - qualifiersToShorten . add ( element ) \n - } \n - \n - private fun addElementToImportAndShorten ( nameToImport : FqName , element : KtDotQualifiedExpression ) { \n - namesToImport . add ( nameToImport ) \n + private fun addElementToShorten ( element : KtDotQualifiedExpression , nameToImport : FqName ? = null ) { \n + namesToImport . addIfNotNull ( nameToImport ) \n
drawee \ src \ main \ java \ com \ facebook \ drawee \ controller \ AbstractDraweeControllerBuilder . java \n - public BUILDER setImageRequest ( REQUEST imageRequest ) { \n + public BUILDER setImageRequest ( @ Nullable REQUEST imageRequest ) { \n
packages \ react - native - codegen \ DEFS . bzl \n + autoglob = False , \n + autoglob = False , \n + autoglob = False , \n
presto - docs \ src \ main \ sphinx \ release . rst \n + release / release - 0 . 243 . 2 \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 238 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced in this release . For more details , go to : issue : ` 15424 ` . \n + \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 239 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced since 0 . 238 . For more details , go to : issue : ` 15424 ` . \n + \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 240 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced since 0 . 238 . For more details , go to : issue : ` 15424 ` . \n + \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 241 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced since 0 . 238 . For more details , go to : issue : ` 15424 ` . \n + \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 242 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced since 0 . 238 . For more details , go to : issue : ` 15424 ` . \n + \n new file \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 243 . 2 . rst \n + = = = = = = = = = = = = = = = \n + Release 0 . 243 . 2 \n + = = = = = = = = = = = = = = = \n + \n + General Changes \n + - - - - - - - - - - - - - - - \n + * Fix LambdaDefinitionExpression canonicalization to correctly canonicalize Block constant ( : issue : ` 15424 ` ) . \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 243 . rst \n + . . warning : : \n + There is a bug in LambdaDefinitionExpression canonicalization introduced since 0 . 238 . For more details , go to : issue : ` 15424 ` . \n + \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ metadata \ FunctionAndTypeManager . java \n - return QualifiedObjectName . valueOf ( name . getOriginalParts ( ) . get ( 0 ) , name . getOriginalParts ( ) . get ( 1 ) , name . getOriginalParts ( ) . get ( 2 ) ) ; \n + return QualifiedObjectName . valueOf ( name . getParts ( ) . get ( 0 ) , name . getParts ( ) . get ( 1 ) , name . getParts ( ) . get ( 2 ) ) ; \n presto - tests \ src \ test \ java \ com \ facebook \ presto \ tests \ TestSqlFunctions . java \n - assertQuerySucceeds ( " CREATE FUNCTION testing . test . tan ( x int ) RETURNS double RETURN sin ( x ) / cos ( x ) " ) ; \n + assertQuerySucceeds ( " CREATE FUNCTION TESTING . TEST . TAN ( x int ) RETURNS double RETURN sin ( x ) / cos ( x ) " ) ; \n
qa \ os \ src \ test \ java \ org \ elasticsearch \ packaging \ test \ ArchiveTests . java \n + import static org . elasticsearch . packaging . util . Archives . ARCHIVE _ OWNER ; \n - Result result = sh . run ( " echo y | " + installation . executables ( ) . nodeTool + " unsafe - bootstrap " ) ; \n + String nodeTool = installation . executables ( ) . nodeTool . toString ( ) ; \n + if ( Platforms . WINDOWS = = false ) { \n + nodeTool = " sudo - E - u " + ARCHIVE _ OWNER + " " + nodeTool ; \n + } \n + \n + Result result = sh . run ( " echo y | " + nodeTool + " unsafe - bootstrap " ) ; \n qa \ os \ src \ test \ java \ org \ elasticsearch \ packaging \ util \ Archives . java \n - Platforms . onLinux ( ( ) - > sh . run ( " kill - SIGTERM " + pid + " ; tail - - pid = " + pid + " - f / dev / null " ) ) ; \n + Platforms . onLinux ( ( ) - > sh . run ( " kill - SIGTERM " + pid + " & & tail - - pid = " + pid + " - f / dev / null " ) ) ; \n
plugins \ quota - aware - fs \ src \ test \ java \ org \ elasticsearch \ fs \ quotaaware \ QuotaAwareFileSystemProviderTests . java \n + @ SuppressForbidden ( reason = " Uses new File ( ) to work around test issue on Windows " ) \n - return cyclicReference . getFileSystem ( new URI ( " file : / / / " ) ) . getPath ( uri . getPath ( ) ) ; \n + / / This convoluted line is necessary in order to get a valid path on Windows . \n + final String uriPath = new File ( uri . getPath ( ) ) . toPath ( ) . toString ( ) ; \n + return cyclicReference . getFileSystem ( new URI ( " file : / / / " ) ) . getPath ( uriPath ) ; \n
buildSrc \ src \ main \ resources \ checkstyle _ ide _ fragment . xml \n + < property name = " allowedAnnotations " value = " Override , Before , BeforeClass , After , AfterClass " / > \n
buildSrc \ src \ main \ resources \ checkstyle _ ide _ fragment . xml \n - < property name = " allowedAnnotations " value = " Override , Before , BeforeClass , After , AfterClass " / > \n + < property name = " allowedAnnotations " value = " Override , Before , BeforeClass , After , AfterClass , Inject " / > \n
src \ docs \ asciidoc \ core \ core - validation . adoc \n - Setting and getting properties is done by using the ` setPropertyValue ` , \n - ` setPropertyValues ` , ` getPropertyValue ` , and ` getPropertyValues ` methods which come \n - with a couple of overloaded variants . Springs javadoc describes them in more detail . \n - The JavaBeans specification has conventions for indicating properties of an \n - object . The following table shows some examples of these conventions : \n + Setting and getting properties is done through the ` setPropertyValue ` and \n + ` getPropertyValue ` overloaded method variants of ` BeanWrapper ` . See their Javadoc for \n + details . The below table shows some examples of these conventions : \n
spring - webmvc \ src \ main \ java \ org \ springframework \ web \ servlet \ mvc \ method \ annotation \ RequestMappingHandlerMapping . java \n - * { @ link ContentNegotiationManager } ) . For further context , please read issue \n + * { @ link org . springframework . web . accept . ContentNegotiationManagerFactoryBean \n + * ContentNegotiationManagerFactoryBean } ) . For further context , please read issue \n spring - webmvc \ src \ main \ resources \ org \ springframework \ web \ servlet \ config \ spring - mvc . xsd \n - The default value is true . \n + \n + In 5 . 2 . 4 , suffix pattern matching was deprecated in order to discourage use of path \n + extensions for request mapping and for content negotiation ( see deprecation notes on \n + org . springframework . web . servlet . mvc . method . annotation . RequestMappingHandlerMapping and on \n + org . springframework . web . accept . ContentNegotiationManagerFactoryBean and \n + also see https : / / github . com / spring - projects / spring - framework / issues / 24179 . \n + \n + The default value is true but in 5 . 3 it changes to false . \n + \n + In 5 . 2 . 4 , suffix pattern matching was deprecated in order to discourage use of path \n + extensions for request mapping and for content negotiation ( see deprecation notes on \n + org . springframework . web . servlet . mvc . method . annotation . RequestMappingHandlerMapping and on \n + org . springframework . web . accept . ContentNegotiationManagerFactoryBean and \n + also see https : / / github . com / spring - projects / spring - framework / issues / 24179 . \n + \n
src \ docs \ asciidoc \ index . adoc \n - WebSocket . \n + WebSocket , RSocket . \n
build . gradle \n - mavenBom " io . projectreactor : reactor - bom : 2020 . 0 . 2 " \n + mavenBom " io . projectreactor : reactor - bom : 2020 . 0 . 3 - SNAPSHOT " \n + maven { url " https : / / repo . spring . io / snapshot " } / / Reactor \n
keystore \ java \ android \ security \ IKeyChainService . aidl \n + boolean containsKeyPair ( String alias ) ; \n
keystore \ java \ android \ security \ IKeyChainService . aidl \n + int [ ] getGrants ( String alias ) ; \n
Libraries \ Network \ _ _ tests _ _ \ XMLHttpRequest - test . js \n + import createPerformanceLogger from ' . . / . . / Utilities / createPerformanceLogger ' ; \n + \n - const createPerformanceLogger = require ( ' . . / . . / Utilities / createPerformanceLogger ' ) ; \n Libraries \ ReactNative \ AppRegistry . js \n - const createPerformanceLogger = require ( ' . . / Utilities / createPerformanceLogger ' ) ; \n + import createPerformanceLogger from ' . . / Utilities / createPerformanceLogger ' ; \n Libraries \ Utilities \ GlobalPerformanceLogger . js \n - const createPerformanceLogger = require ( ' . / createPerformanceLogger ' ) ; \n + import createPerformanceLogger from ' . / createPerformanceLogger ' ; \n Libraries \ Utilities \ createPerformanceLogger . js \n - const performanceNow : ( ) = > number = \n - global . nativeQPLTimestamp ? ? global . performance . now . bind ( global . performance ) ; \n + export const getCurrentTimestamp : ( ) = > number = \n + global . nativeQPLTimestamp ? ? global . performance . now . bind ( global . performance ) ; \n + \n - return performanceNow ( ) ; \n + return getCurrentTimestamp ( ) ; \n - this . _ points [ key ] = timestamp ? ? performanceNow ( ) ; \n + this . _ points [ key ] = timestamp ? ? getCurrentTimestamp ( ) ; \n - startTime : performanceNow ( ) , \n + startTime : getCurrentTimestamp ( ) , \n - timespan . endTime = performanceNow ( ) ; \n + timespan . endTime = getCurrentTimestamp ( ) ; \n - function createPerformanceLogger ( ) : IPerformanceLogger { \n + export default function createPerformanceLogger ( ) : IPerformanceLogger { \n - \n - module . exports = createPerformanceLogger ; \n
Libraries \ ReactNative \ renderApplication . js \n + performanceLogger . setExtra ( ' usedReactFabric ' , fabric ? ' 1 ' : ' 0 ' ) ; \n + \n
dropwizard - logging \ src \ test \ java \ io \ dropwizard \ logging \ FileAppenderFactoryTest . java \n - import static org . assertj . core . api . Assertions . assertThatThrownBy ; \n + import static org . assertj . core . api . Assertions . assertThatExceptionOfType ; \n - void isDiscoverable ( ) throws Exception { \n + void isDiscoverable ( ) { \n - void isRolling ( @ TempDir Path tempDir ) throws Exception { \n + void isRolling ( @ TempDir Path tempDir ) { \n - void testAppenderIsStarted ( @ TempDir Path tempDir ) throws Exception { \n - FileAppenderFactory < ILoggingEvent > fileAppenderFactory = new FileAppenderFactory < ILoggingEvent > ( ) ; \n - fileAppenderFactory . setCurrentLogFilename ( " application . log " ) ; \n + void testAppenderIsStarted ( @ TempDir Path tempDir ) { \n + FileAppenderFactory < ILoggingEvent > fileAppenderFactory = new FileAppenderFactory < > ( ) ; \n + fileAppenderFactory . setCurrentLogFilename ( tempDir . resolve ( " application . log " ) . toString ( ) ) ; \n - Appender appender = fileAppenderFactory . build ( new LoggerContext ( ) , \n + Appender < ILoggingEvent > appender = fileAppenderFactory . build ( new LoggerContext ( ) , \n + appender . stop ( ) ; \n + assertThat ( appender . isStarted ( ) ) . isFalse ( ) ; \n - void defaultIsNotNeverBlock ( ) throws Exception { \n + void defaultIsNotNeverBlock ( ) { \n - assertThatThrownBy ( ( ) - > \n - factory . build ( new File ( Resources . getResource ( " yaml / appender _ file _ cap _ invalid . yaml " ) . getFile ( ) ) ) \n - ) . isExactlyInstanceOf ( ConfigurationValidationException . class ) \n - . hasMessageContaining ( " totalSizeCap has no effect when using maxFileSize and an archivedLogFilenamePattern " + \n + \n + assertThatExceptionOfType ( ConfigurationValidationException . class ) \n + . isThrownBy ( ( ) - > factory . build ( new File ( Resources . getResource ( " yaml / appender _ file _ cap _ invalid . yaml " ) . getFile ( ) ) ) ) \n + . withMessageContaining ( " totalSizeCap has no effect when using maxFileSize and an archivedLogFilenamePattern " + \n
dropwizard - configuration \ src \ main \ java \ io \ dropwizard \ configuration \ BaseConfigurationFactory . java \n - final String remainingPath = parts . subList ( i , parts . size ( ) ) . stream ( ) \n - . collect ( Collectors . joining ( " . " ) ) ; \n + final String remainingPath = String . join ( " . " , parts . subList ( i , parts . size ( ) ) ) ; \n dropwizard - jetty \ src \ main \ java \ io \ dropwizard \ jetty \ ServerPushFilterFactory . java \n - final String hosts = refererHosts . stream ( ) \n - . collect ( Collectors . joining ( " , " ) ) ; \n - handler . setInitParameter ( " hosts " , hosts ) ; \n + handler . setInitParameter ( " hosts " , String . join ( " , " , refererHosts ) ) ; \n
buildSrc \ src \ main \ groovy \ org \ elasticsearch \ gradle \ plugin \ PluginBuildPlugin . groovy \n - from pluginMetadata / / metadata ( eg custom security policy ) \n + from ( pluginMetadata ) { \n + / / metadata ( eg custom security policy ) \n + / / the codebases properties file is only for tests and not needed in production \n + exclude ' plugin - security . codebases ' \n + } \n rename from modules \ systemd \ src \ test \ resources \ plugin - security . codebases \n rename to modules \ systemd \ src \ main \ plugin - metadata \ plugin - security . codebases \n new file \n plugins \ transport - nio \ src \ main \ plugin - metadata \ plugin - security . codebases \n + elasticsearch - nio : org . elasticsearch . nio . ChannelFactory \n + netty - common : io . netty . util . NettyRuntime \n
new file \n modules \ reindex \ src \ main \ plugin - metadata \ plugin - security . codebases \n + elasticsearch - rest - client : org . elasticsearch . client . RestClient \n + httpasyncclient : org . apache . http . nio . client . HttpAsyncClient \n new file \n modules \ transport - netty4 \ src \ main \ plugin - metadata \ plugin - security . codebases \n + netty - transport : io . netty . channel . Channel \n new file \n x - pack \ plugin \ core \ src \ main \ plugin - metadata \ plugin - security . codebases \n + netty - common : io . netty . util . NettyRuntime \n + netty - transport : io . netty . channel . Channel \n + httpasyncclient : org . apache . http . nio . client . HttpAsyncClient \n new file \n x - pack \ plugin \ monitoring \ src \ main \ plugin - metadata \ plugin - security . codebases \n + elasticsearch - rest - client : org . elasticsearch . client . RestClient \n
core \ tests \ overlaytests \ device \ Android . bp \n - static _ libs : [ " androidx . test . rules " ] , \n + certificate : " platform " , \n + static _ libs : [ \n + " androidx . test . rules " , \n + " testng " , \n + ] , \n core \ tests \ overlaytests \ device \ AndroidManifest . xml \n + < uses - permission android : name = " android . permission . CHANGE _ OVERLAY _ PACKAGES " / > \n + \n core \ tests \ overlaytests \ device \ AndroidTest . xml \n + < target _ preparer class = " com . android . compatibility . common . tradefed . targetprep . FilePusher " > \n + < option name = " cleanup " value = " true " / > \n + < option name = " remount - system " value = " true " / > \n + < option name = " push " value = " OverlayDeviceTests . apk - > / system / app / OverlayDeviceTests . apk " / > \n + < / target _ preparer > \n + \n + < ! - - Reboot to have the test APK scanned by PM and reboot after to remove the test APK . - - > \n + < target _ preparer class = " com . android . tradefed . targetprep . RebootTargetPreparer " > \n + < option name = " pre - reboot " value = " true " / > \n + < option name = " post - reboot " value = " true " / > \n + < / target _ preparer > \n + \n - < option name = " test - file - name " value = " OverlayDeviceTests . apk " / > \n core \ tests \ overlaytests \ device \ test - apps \ AppOverlayOne \ Android . bp \n - \n + certificate : " platform " , \n core \ tests \ overlaytests \ device \ test - apps \ AppOverlayTwo \ Android . bp \n - \n + certificate : " platform " , \n
core \ tests \ overlaytests \ device \ AndroidTest . xml \n + < target _ preparer class = " com . android . tradefed . targetprep . RootTargetPreparer " / > \n - \n - < ! - - Reboot to have the test APK scanned by PM and reboot after to remove the test APK . - - > \n - < target _ preparer class = " com . android . tradefed . targetprep . RebootTargetPreparer " > \n - < option name = " pre - reboot " value = " true " / > \n - < option name = " post - reboot " value = " true " / > \n - < / target _ preparer > \n + < target _ preparer class = " com . android . tradefed . targetprep . RebootTargetPreparer " / > \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ loader \ G3dModelLoader . java \n - private void parseMeshes ( ModelData model , JsonValue json ) { \n + protected void parseMeshes ( ModelData model , JsonValue json ) { \n - private int parseType ( String type ) { \n + protected int parseType ( String type ) { \n - private VertexAttribute [ ] parseAttributes ( JsonValue attributes ) { \n + protected VertexAttribute [ ] parseAttributes ( JsonValue attributes ) { \n - private void parseMaterials ( ModelData model , JsonValue json , String materialDir ) { \n + protected void parseMaterials ( ModelData model , JsonValue json , String materialDir ) { \n - private int parseTextureUsage ( final String value ) { \n + protected int parseTextureUsage ( final String value ) { \n - private Color parseColor ( JsonValue colorArray ) { \n + protected Color parseColor ( JsonValue colorArray ) { \n - private Vector2 readVector2 ( JsonValue vectorArray , float x , float y ) { \n + protected Vector2 readVector2 ( JsonValue vectorArray , float x , float y ) { \n - private Array < ModelNode > parseNodes ( ModelData model , JsonValue json ) { \n + protected Array < ModelNode > parseNodes ( ModelData model , JsonValue json ) { \n - private final Quaternion tempQ = new Quaternion ( ) ; \n + protected final Quaternion tempQ = new Quaternion ( ) ; \n - private ModelNode parseNodesRecursively ( JsonValue json ) { \n + protected ModelNode parseNodesRecursively ( JsonValue json ) { \n - private void parseAnimations ( ModelData model , JsonValue json ) { \n + protected void parseAnimations ( ModelData model , JsonValue json ) { \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ particles \ influencers \ RegionInfluencer . java \n - SaveData data = resources . createSaveData ( " atlasAssetData " ) ; \n + SaveData data = resources . getSaveData ( " atlasAssetData " ) ; \n + if ( data = = null ) { \n + data = resources . createSaveData ( " atlasAssetData " ) ; \n + } \n
presto - main \ src \ test \ java \ com \ facebook \ presto \ operator \ OperatorAssertion . java \n - handleMemoryRevoking ( operator ) ; \n + \n + \n + / / revoke memory when output pages have started being produced \n + handleMemoryRevoking ( operator ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ operator \ aggregation \ GenericAccumulatorFactory . java \n + private long rawInputsSizeInBytes ; \n + private long blockBuildersSizeInBytes ; \n - ( rawInputs = = null ? 0 : rawInputs . sizeOf ( ) ) + \n - ( blockBuilders = = null ? 0 : blockBuilders . sizeOf ( ) ) ; \n + ( rawInputs = = null ? 0 : rawInputsSizeInBytes + rawInputs . sizeOf ( ) ) + \n + ( blockBuilders = = null ? 0 : blockBuildersSizeInBytes + blockBuilders . sizeOf ( ) ) ; \n - rawInputs . set ( rawInputsLength , new GroupIdPage ( groupIdsBlock , page ) ) ; \n + GroupIdPage groupIdPage = new GroupIdPage ( groupIdsBlock , page ) ; \n + rawInputsSizeInBytes + = groupIdPage . getRetainedSizeInBytes ( ) ; \n + rawInputs . set ( rawInputsLength , groupIdPage ) ; \n - rawInputs . set ( rawInputsLength , new GroupIdPage ( squashedGroupIds , page ) ) ; \n + GroupIdPage groupIdPage = new GroupIdPage ( squashedGroupIds , page ) ; \n + rawInputsSizeInBytes + = groupIdPage . getRetainedSizeInBytes ( ) ; \n + rawInputs . set ( rawInputsLength , groupIdPage ) ; \n + \n + long currentRowBlockSizeInBytes = 0 ; \n + else { \n + currentRowBlockSizeInBytes = rowBlockBuilder . getRetainedSizeInBytes ( ) ; \n + } \n + blockBuildersSizeInBytes + = ( rowBlockBuilder . getRetainedSizeInBytes ( ) - currentRowBlockSizeInBytes ) ; \n + rawInputsSizeInBytes = 0 ; \n + rawInputsSizeInBytes = 0 ; \n + private static final int INSTANCE _ SIZE = ClassLayout . parseClass ( GroupIdPage . class ) . instanceSize ( ) ; \n + \n + \n + public long getRetainedSizeInBytes ( ) \n + { \n + return INSTANCE _ SIZE + groupByIdBlock . getRetainedSizeInBytes ( ) + page . getRetainedSizeInBytes ( ) ; \n + } \n
gradle \ custom - java - home . gradle \n - options . compilerArgs - = " - Werror " \n + / / Ignore warnings about missing classpath elements - - for example , those picked up \n + / / via Class - Path entries in MANIFEST . MF files in artifacts like xalan - 2 . 7 . 2 . jar . \n + options . compilerArgs - = " - Xlint : path " \n
spring - context \ src \ main \ java \ org \ springframework \ context \ annotation \ AnnotationConfigApplicationContext . java \n - * Copyright 2002 - 2019 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n - * < p > Default is { @ link org . springframework . context . annotation . AnnotationBeanNameGenerator } . \n + * < p > Default is { @ link AnnotationBeanNameGenerator } . \n + * @ see AnnotationBeanNameGenerator \n + * @ see FullyQualifiedAnnotationBeanNameGenerator \n spring - context \ src \ main \ java \ org \ springframework \ context \ annotation \ ComponentScan . java \n - * Copyright 2002 - 2016 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n + * @ see AnnotationBeanNameGenerator \n + * @ see FullyQualifiedAnnotationBeanNameGenerator \n spring - context \ src \ main \ java \ org \ springframework \ context \ annotation \ FullyQualifiedAnnotationBeanNameGenerator . java \n + * < p > Favor this bean naming strategy over { @ code AnnotationBeanNameGenerator } if \n + * you run into naming conflicts due to multiple autodetected components having the \n + * same non - qualified class name ( i . e . , classes with identical names but residing in \n + * different packages ) . \n + * \n src \ docs \ asciidoc \ core \ core - beans . adoc \n - - - - \n - NOTE : If you do not want to rely on the default bean - naming strategy , you can provide a \n - custom bean - naming strategy . First , implement the \n + If you do not want to rely on the default bean - naming strategy , you can provide a custom \n + bean - naming strategy . First , implement the \n - and bean definition show : \n + and bean definition show . \n + \n + TIP : If you run into naming conflicts due to multiple autodetected components having the \n + same non - qualified class name ( i . e . , classes with identical names but residing in \n + different packages ) , you may need to configure a ` BeanNameGenerator ` that defaults to the \n + fully qualified class name for the generated bean name . As of Spring Framework 5 . 2 . 3 , the \n + ` FullyQualifiedAnnotationBeanNameGenerator ` located in package \n + ` org . springframework . context . annotation ` can be used for such purposes . \n
build . gradle \n - mavenBom " org . junit : junit - bom : 5 . 7 . 0 " \n + mavenBom " org . junit : junit - bom : 5 . 7 . 1 " \n - " https : / / junit . org / junit5 / docs / 5 . 7 . 0 / api / " \n + " https : / / junit . org / junit5 / docs / 5 . 7 . 1 / api / " \n
spring - test \ src \ test \ java \ org \ springframework \ test \ context \ junit \ jupiter \ event \ ParallelApplicationEventsIntegrationTests . java \n - / / Skip the following assertion entirely if the thread count is too low . \n - if ( ManagementFactory . getThreadMXBean ( ) . getThreadCount ( ) > = 4 ) { \n + / / Skip the following assertion entirely if too few processors are available \n + / / to the current JVM . \n + if ( Runtime . getRuntime ( ) . availableProcessors ( ) > = 4 ) { \n
library \ src \ main \ java \ com \ bumptech \ glide \ load \ resource \ bitmap \ RecyclableBufferedInputStream . java \n - return read + localIn . skip ( byteCount - read ) ; \n + \n + / / We can ' t skip over the remaining bytes without exceeding the mark limit so there will be no \n + / / way to reset to a proper position in the stream . \n + long skipped = localIn . skip ( byteCount - read ) ; \n + if ( skipped > 0 ) { \n + markpos = - 1 ; \n + } \n + return read + skipped ; \n
gradle . properties \n - VERSION _ NAME = 4 . 12 . 0 \n + VERSION _ NAME = 4 . 13 . 0 - SNAPSHOT \n - VERSION _ MINOR = 12 \n + VERSION _ MINOR = 13 \n
library \ src \ com \ bumptech \ glide \ resize \ RecyclableBufferedInputStream . java \n + \n + public static class InvalidMarkException extends RuntimeException { \n + public InvalidMarkException ( String detailMessage ) { \n + super ( detailMessage ) ; \n + } \n + } \n + \n - throw new IOException ( " Mark has been invalidated . " ) ; \n + throw new InvalidMarkException ( " Mark has been invalidated " ) ; \n
samples \ flickr \ src \ com \ bumptech \ flickr \ api \ Api . java \n + import java . util . Collections ; \n - put ( 500 , " - " ) ; \n - put ( Integer . MAX _ VALUE , " o " ) ; \n + \n + private static final List < Integer > SORTED _ SIZE _ KEYS = new ArrayList < Integer > ( EDGE _ TO _ SIZE _ KEY . size ( ) ) ; \n + static { \n + SORTED _ SIZE _ KEYS . addAll ( EDGE _ TO _ SIZE _ KEY . keySet ( ) ) ; \n + Collections . sort ( SORTED _ SIZE _ KEYS ) ; \n + } \n - final int largestEdge = width > height ? width : height ; \n + final int largestEdge = Math . max ( width , height ) ; \n - final String result = EDGE _ TO _ SIZE _ KEY . get ( Integer . MAX _ VALUE ) ; \n - for ( int edge : EDGE _ TO _ SIZE _ KEY . keySet ( ) ) { \n + String result = EDGE _ TO _ SIZE _ KEY . get ( SORTED _ SIZE _ KEYS . get ( SORTED _ SIZE _ KEYS . size ( ) - 1 ) ) ; \n + for ( int edge : SORTED _ SIZE _ KEYS ) { \n - return EDGE _ TO _ SIZE _ KEY . get ( edge ) ; \n + result = EDGE _ TO _ SIZE _ KEY . get ( edge ) ; \n + break ; \n
src \ test \ java \ io \ vertx \ test \ core \ LocalSharedDataTest . java \n - assertNull ( map . get ( " hello " ) ) ; \n + assertFalse ( map . containsKey ( " hello " ) ) ; \n - assertNull ( map . get ( " hello " ) ) ; \n + assertFalse ( map . containsKey ( " hello " ) ) ; \n - assertNull ( map . get ( " hello " ) ) ; \n + assertFalse ( map . containsKey ( " hello " ) ) ; \n - assertNull ( map . get ( " hello " ) ) ; \n + assertFalse ( map . containsKey ( " hello " ) ) ; \n
src \ main \ java \ io \ vertx \ core \ net \ impl \ VertxSniHandler . java \n + import io . netty . channel . ChannelInboundHandlerAdapter ; \n + import io . netty . handler . ssl . SniCompletionEvent ; \n + ctx . pipeline ( ) . addFirst ( new ChannelInboundHandlerAdapter ( ) { \n + @ Override \n + public void userEventTriggered ( ChannelHandlerContext ctx , Object evt ) { \n + if ( evt instanceof SniCompletionEvent ) { \n + SniCompletionEvent sniCompletionEvent = ( SniCompletionEvent ) evt ; \n + if ( sniCompletionEvent . isSuccess ( ) ) { \n + Attribute < String > val = ctx . channel ( ) . attr ( SERVER _ NAME _ ATTR ) ; \n + val . set ( sniCompletionEvent . hostname ( ) ) ; \n + handshakeFuture . setSuccess ( ctx . channel ( ) ) ; \n + } else { \n + handshakeFuture . setFailure ( sniCompletionEvent . cause ( ) ) ; \n + } \n + } else { \n + ctx . fireUserEventTriggered ( evt ) ; \n + } \n + } \n + } ) ; \n
React \ Fabric \ Mounting \ ComponentViews \ Text \ RCTParagraphComponentView . mm \n + - ( NSString * ) accessibilityLabel \n + { \n + return self . attributedText . string ; \n + } \n + \n - ( BOOL ) isAccessibilityElement \n
React \ Fabric \ Mounting \ ComponentViews \ Modal \ RCTModalHostViewComponentView . mm \n + \n + # ifdef _ _ cplusplus \n + extern " C " { \n + # endif \n + \n + / / Can ' t the import generated Plugin . h because plugins are not in this BUCK target \n + Class < RCTComponentViewProtocol > RCTModalHostViewCls ( void ) ; \n + \n + # ifdef _ _ cplusplus \n + } \n + # endif \n + \n + Class < RCTComponentViewProtocol > RCTModalHostViewCls ( void ) \n + { \n + return RCTModalHostViewComponentView . class ; \n + } \n
core \ api \ current . txt \n + ctor public SignalStrength ( @ NonNull android . telephony . SignalStrength ) ; \n core \ api \ system - current . txt \n - public class SignalStrength implements android . os . Parcelable { \n - ctor public SignalStrength ( @ NonNull android . telephony . SignalStrength ) ; \n - } \n - \n telephony \ java \ android \ telephony \ SignalStrength . java \n - import android . annotation . SystemApi ; \n - * @ hide \n - @ SystemApi \n
core \ api \ system - current . txt \n - method @ RequiresPermission ( android . Manifest . permission . READ _ PRIVILEGED _ PHONE _ STATE ) public int getCdmaEnhancedRoamingIndicatorIconIndex ( ) ; \n + method @ RequiresPermission ( android . Manifest . permission . READ _ PRIVILEGED _ PHONE _ STATE ) public int getCdmaEnhancedRoamingIndicatorDisplayNumber ( ) ; \n packages \ SystemUI \ src \ com \ android \ systemui \ statusbar \ policy \ MobileSignalController . java \n - return mPhone . getCdmaEnhancedRoamingIndicatorIconIndex ( ) ! = TelephonyManager . ERI _ OFF ; \n + return mPhone . getCdmaEnhancedRoamingIndicatorDisplayNumber ( ) \n + ! = TelephonyManager . ERI _ OFF ; \n packages \ SystemUI \ tests \ src \ com \ android \ systemui \ statusbar \ policy \ NetworkControllerBaseTest . java \n - when ( mMockTm . getCdmaEnhancedRoamingIndicatorIconIndex ( ) ) . thenReturn ( \n + when ( mMockTm . getCdmaEnhancedRoamingIndicatorDisplayNumber ( ) ) . thenReturn ( \n telephony \ java \ android \ telephony \ TelephonyManager . java \n - * Returns the CDMA ERI icon index to display . The number is assigned by \n - * 3GPP2 C . R1001 - H v1 . 0 Table 8 . 1 - 1 . Additionally carriers define their own ERI icon index . \n + * Returns the CDMA ERI icon display number . The number is assigned by \n + * 3GPP2 C . R1001 - H v1 . 0 Table 8 . 1 - 1 . Additionally carriers define their own ERI display numbers . \n - public @ EriIconIndex int getCdmaEnhancedRoamingIndicatorIconIndex ( ) { \n + public @ EriIconIndex int getCdmaEnhancedRoamingIndicatorDisplayNumber ( ) { \n
ci \ config \ changelog - generator . yml \n - " type : dependency - upgrade " \n + issues : \n + ports : \n + - label : " status : forward - port " \n + bodyExpression : ' Forward port of issue # ( \ d + ) . * ' \n + - label : " status : back - port " \n + bodyExpression : ' Back port of issue # ( \ d + ) . * ' \n ci \ tasks \ generate - changelog . yml \n - tag : ' 0 . 0 . 4 ' \n + tag : ' 0 . 0 . 5 ' \n - name : git - repo \n - name : version \n
spring - boot - project \ spring - boot - tools \ spring - boot - maven - plugin \ src \ intTest \ java \ org \ springframework \ boot \ maven \ JarIntegrationTests . java \n + index . put ( layer , new ArrayList < > ( ) ) ; \n
transport - native - kqueue \ src \ main \ java \ io \ netty \ channel \ kqueue \ AbstractKQueueChannel . java \n + import java . net . ConnectException ; \n - this ( parent , fd , active , false ) ; \n - } \n - \n - AbstractKQueueChannel ( Channel parent , BsdSocket fd , boolean active , boolean writeFilterEnabled ) { \n - this . writeFilterEnabled = writeFilterEnabled ; \n + final boolean failConnectPromise ( Throwable cause ) { \n + if ( connectPromise ! = null ) { \n + / / SO _ ERROR has been shown to return 0 on macOS if detect an error via read ( ) and the write filter was \n + / / not set before calling connect . This means finishConnect will not detect any error and would \n + / / successfully complete the connectPromise and update the channel state to active ( which is incorrect ) . \n + ChannelPromise connectPromise = AbstractKQueueChannel . this . connectPromise ; \n + AbstractKQueueChannel . this . connectPromise = null ; \n + if ( connectPromise . tryFailure ( ( cause instanceof ConnectException ) ? cause \n + : new ConnectException ( " failed to connect " ) . initCause ( cause ) ) ) { \n + closeIfClosed ( ) ; \n + return true ; \n + } \n + } \n + return false ; \n + } \n + \n transport - native - kqueue \ src \ main \ java \ io \ netty \ channel \ kqueue \ AbstractKQueueStreamChannel . java \n - super ( parent , fd , active , true ) ; \n + super ( parent , fd , active ) ; \n - allocHandle . readComplete ( ) ; \n - pipeline . fireChannelReadComplete ( ) ; \n - pipeline . fireExceptionCaught ( cause ) ; \n - if ( close | | cause instanceof IOException ) { \n - shutdownInput ( false ) ; \n + if ( ! failConnectPromise ( cause ) ) { \n + allocHandle . readComplete ( ) ; \n + pipeline . fireChannelReadComplete ( ) ; \n + pipeline . fireExceptionCaught ( cause ) ; \n + if ( close | | cause instanceof IOException ) { \n + shutdownInput ( false ) ; \n + } \n
transport \ src \ main \ java \ io \ netty \ channel \ socket \ nio \ NioDatagramChannel . java \n - final ByteBuffer nioData = data . internalNioBuffer ( data . readerIndex ( ) , dataLen ) ; \n + final ByteBuffer nioData = data . nioBufferCount ( ) = = 1 ? data . internalNioBuffer ( data . readerIndex ( ) , dataLen ) \n + : data . nioBuffer ( data . readerIndex ( ) , dataLen ) ; \n
common \ src \ main \ java \ io \ netty \ util \ Recycler . java \n - private static final int DEFAULT _ INITIAL _ MAX _ CAPACITY _ PER _ THREAD = 32768 ; / / Use 32k instances as default . \n + private static final int DEFAULT _ INITIAL _ MAX _ CAPACITY _ PER _ THREAD = 4 * 1024 ; / / Use 4k instances as default . \n
codec - smtp \ src \ test \ java \ io \ netty \ handler \ codec \ smtp \ SmtpRequestEncoderTest . java \n - import static org . junit . Assert . * ; \n + import static org . junit . Assert . assertEquals ; \n + import static org . junit . Assert . assertNull ; \n + import static org . junit . Assert . assertTrue ; \n - assertTrue ( channel . writeOutbound ( SmtpRequests . data ( ) ) ) ; \n - channel . writeOutbound ( SmtpRequests . noop ( ) ) ; \n + try { \n + assertTrue ( channel . writeOutbound ( SmtpRequests . data ( ) ) ) ; \n + channel . writeOutbound ( SmtpRequests . noop ( ) ) ; \n + } finally { \n + channel . finishAndReleaseAll ( ) ; \n + } \n
core \ src \ main \ java \ com \ google \ zxing \ datamatrix \ encoder \ Base256Encoder . java \n - context . signalEncoderChange ( newMode ) ; \n + / / Return to ASCII encodation , which will actually handle latch to new mode \n + context . signalEncoderChange ( HighLevelEncoder . ASCII _ ENCODATION ) ; \n core \ src \ main \ java \ com \ google \ zxing \ datamatrix \ encoder \ C40Encoder . java \n - context . signalEncoderChange ( newMode ) ; \n + / / Return to ASCII encodation , which will actually handle latch to new mode \n + context . signalEncoderChange ( HighLevelEncoder . ASCII _ ENCODATION ) ; \n core \ src \ main \ java \ com \ google \ zxing \ datamatrix \ encoder \ EdifactEncoder . java \n + / / Return to ASCII encodation , which will actually handle latch to new mode \n core \ src \ main \ java \ com \ google \ zxing \ datamatrix \ encoder \ X12Encoder . java \n - context . signalEncoderChange ( newMode ) ; \n + / / Return to ASCII encodation , which will actually handle latch to new mode \n + context . signalEncoderChange ( HighLevelEncoder . ASCII _ ENCODATION ) ; \n core \ src \ test \ java \ com \ google \ zxing \ datamatrix \ encoder \ HighLevelEncodeTestCase . java \n + @ Test \n + public void testEncodingWithStartAsX12AndLatchToEDIFACTInTheMiddle ( ) { \n + \n + String visualized = encodeHighLevel ( " * MEMANT - 1F - MESTECH " ) ; \n + assertEquals ( " 238 10 99 164 204 254 240 82 220 70 180 209 83 80 80 200 " , visualized ) ; \n + } \n + \n
core \ src \ main \ java \ com \ google \ zxing \ pdf417 \ decoder \ PDF417CodewordDecoder . java \n - for ( int i = 0 ; i < bitCountRatios . length ; i + + ) { \n - bitCountRatios [ i ] = moduleBitCount [ i ] / ( float ) bitCountSum ; \n + if ( bitCountSum > 1 ) { \n + for ( int i = 0 ; i < bitCountRatios . length ; i + + ) { \n + bitCountRatios [ i ] = moduleBitCount [ i ] / ( float ) bitCountSum ; \n + } \n javase \ src \ main \ java \ com \ google \ zxing \ client \ j2se \ Java8Base64Decoder . java \n - return ( byte [ ] ) Class . forName ( " java . util . Base64 . Decoder " ) \n + return ( byte [ ] ) Class . forName ( " java . util . Base64 $ Decoder " ) \n pom . xml \n - < proguard . version > 5 . 3 . 2 < / proguard . version > \n + < proguard . version > 5 . 3 . 3 < / proguard . version > \n - < slf4j . version > 1 . 7 . 24 < / slf4j . version > \n + < slf4j . version > 1 . 7 . 25 < / slf4j . version > \n zxingorg \ pom . xml \n - < version > 9 . 4 . 2 . v20170220 < / version > \n + < version > 9 . 4 . 3 . v20170317 < / version > \n
core \ pom . xml \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n javase \ pom . xml \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n pom . xml \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n - < zxing . version > 3 . 4 . 1 - SNAPSHOT < / zxing . version > \n + < zxing . version > 3 . 4 . 1 < / zxing . version > \n - < tag > HEAD < / tag > \n + < tag > zxing - 3 . 4 . 1 < / tag > \n zxing . appspot . com \ pom . xml \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n zxingorg \ pom . xml \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n - < version > 3 . 4 . 1 - SNAPSHOT < / version > \n + < version > 3 . 4 . 1 < / version > \n
core \ pom . xml \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n javase \ pom . xml \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n pom . xml \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n - < zxing . version > 3 . 4 . 1 < / zxing . version > \n + < zxing . version > 3 . 4 . 1 - SNAPSHOT < / zxing . version > \n - < tag > zxing - 3 . 4 . 1 < / tag > \n + < tag > HEAD < / tag > \n zxing . appspot . com \ pom . xml \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n zxingorg \ pom . xml \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n - < version > 3 . 4 . 1 < / version > \n + < version > 3 . 4 . 1 - SNAPSHOT < / version > \n
realm \ realm - library \ src \ androidTest \ java \ io \ realm \ internal \ JNITransactions . java \n + \n + / / Test if toString ( ) returns a correct PrimaryKey field description from a Table \n + public void testTableToStringWithPrimaryKey ( ) { \n + Table t = getTableWithStringPrimaryKey ( ) ; \n + t . addColumn ( RealmFieldType . INTEGER , " intCol " ) ; \n + t . addColumn ( RealmFieldType . BOOLEAN , " boolCol " ) ; \n + \n + t . add ( " s1 " , 1 , true ) ; \n + t . add ( " s2 " , 2 , false ) ; \n + \n + String expected = " The Table has ' colName ' field as a PrimaryKey , and contains 3 columns : colName , intCol , boolCol . And 2 rows . " ; \n + assertEquals ( expected , t . toString ( ) ) ; \n + } \n realm \ realm - library \ src \ main \ java \ io \ realm \ internal \ Table . java \n + if ( hasPrimaryKey ( ) ) { \n + String pkFieldName = getColumnName ( getPrimaryKey ( ) ) ; \n + stringBuilder . append ( " has \ ' " + pkFieldName + " \ ' field as a PrimaryKey , and " ) ; \n + } \n
CHANGELOG . md \n - * Fixed a crash when calling Table . toString ( ) in debugger ( # 2429 ) . \n + * Fixed a crash when calling ` Table . toString ( ) ` in debugger ( # 2429 ) . \n + # # # Enhancements \n + \n + * Enhanced ` Table . toString ( ) ` to show a PrimaryKey field details ( # 2903 ) . \n + \n
kotlin - native \ build . gradle \n - if ( project . hasProperty ( " anotherDistro " ) ) { \n - targetList . each { targetName - > \n - task " $ { targetName } CheckPlatformAbiCompatibility " ( type : CompareDistributionSignatures ) { \n - dependsOn " $ { targetName } PlatformLibs " \n + targetList . each { targetName - > \n + task " $ { targetName } CheckPlatformAbiCompatibility " ( type : CompareDistributionSignatures ) { \n + dependsOn " $ { targetName } PlatformLibs " \n - libraries = new CompareDistributionSignatures . Libraries . Platform ( targetName ) \n + libraries = new CompareDistributionSignatures . Libraries . Platform ( targetName ) \n + if ( project . hasProperty ( " anotherDistro " ) ) { \n - onMismatchMode = CompareDistributionSignatures . OnMismatchMode . FAIL \n + onMismatchMode = CompareDistributionSignatures . OnMismatchMode . FAIL \n + } \n - task " checkStdlibAbiCompatibility " ( type : CompareDistributionSignatures ) { \n - dependsOn " distRuntime " \n + task " checkStdlibAbiCompatibility " ( type : CompareDistributionSignatures ) { \n + dependsOn " distRuntime " \n - libraries = CompareDistributionSignatures . Libraries . Standard . INSTANCE \n + libraries = CompareDistributionSignatures . Libraries . Standard . INSTANCE \n + if ( project . hasProperty ( " anotherDistro " ) ) { \n - onMismatchMode = CompareDistributionSignatures . OnMismatchMode . FAIL \n + onMismatchMode = CompareDistributionSignatures . OnMismatchMode . FAIL \n
kotlin - native \ build - tools \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ CompareDistributionSignatures . kt \n + import java . nio . file . Files \n + import java . nio . file . LinkOption \n + import java . nio . file . Path \n + import java . nio . file . Paths \n + check ( looksLikeKotlinNativeDistribution ( Paths . get ( oldDistribution ) ) ) { \n + " " " \n + ` $ oldDistribution ` doesn ' t look like Kotlin / Native distribution . \n + Make sure to provide an absolute path to it . \n + " " " . trimIndent ( ) \n + } \n - File ( " $ this / klib / common / stdlib " ) \n + File ( " $ this / klib / common / stdlib " ) . also { \n + check ( it . exists ( ) ) { \n + " " " \n + ` $ { it . absolutePath } ` doesn ' t exists . \n + If $ oldDistribution has a different directory layout then it is time to update this comparator . \n + " " " . trimIndent ( ) \n + } \n + } \n - File ( " $ this / klib / platform / $ target " ) \n + File ( " $ this / klib / platform / $ target " ) . also { \n + check ( it . exists ( ) ) { \n + " " " \n + ` $ { it . absolutePath } ` doesn ' t exists . \n + Make sure that given distribution actually supports $ target . \n + " " " . trimIndent ( ) \n + } \n + } \n + \n + private fun looksLikeKotlinNativeDistribution ( directory : Path ) : Boolean { \n + val distributionComponents = directory . run { \n + val konanDir = resolve ( " konan " ) \n + setOf ( resolve ( " bin " ) , resolve ( " klib " ) , konanDir , konanDir . resolve ( " konan . properties " ) ) \n + } \n + return distributionComponents . all { Files . exists ( it , LinkOption . NOFOLLOW _ LINKS ) } \n + } \n
kotlin - native \ backend . native \ tests \ build . gradle \n + createInterop ( " kt43502 " ) { \n + it . defFile ' interop / kt43502 / kt43502 . def ' \n + it . headers " $ projectDir / interop / kt43502 / kt43502 . h " \n + / / Note : also hardcoded in def file . \n + final String libDir = " $ buildDir / kt43502 / " \n + / / Construct library that contains actual symbol definition . \n + it . getByTarget ( target . name ) . doFirst { \n + UtilsKt . buildStaticLibrary ( \n + project , \n + [ file ( " $ projectDir / interop / kt43502 / kt43502 . c " ) ] , \n + file ( " $ libDir / kt43502 . a " ) , \n + file ( " $ libDir / kt43502 . objs " ) , \n + ) \n + } \n + } \n + \n + dynamicTest ( " interop _ kt43502 " ) { \n + disabled = ( project . testTarget = = ' wasm32 ' ) / / No interop for wasm yet . \n + interop = " kt43502 " \n + source = " interop / kt43502 / main . kt " \n + cSource = " $ projectDir / interop / kt43502 / main . c " \n + goldValue = " null \ n " \n + } \n + \n new file \n kotlin - native \ backend . native \ tests \ interop \ kt43502 \ kt43502 . c \n + char * * externPtr = 0 ; \n new file \n kotlin - native \ backend . native \ tests \ interop \ kt43502 \ kt43502 . def \n + libraryPaths = backend . native / tests / build / kt43502 \n + staticLibraries = kt43502 . a \n new file \n kotlin - native \ backend . native \ tests \ interop \ kt43502 \ kt43502 . h \n + extern char * * externPtr ; \n new file \n kotlin - native \ backend . native \ tests \ interop \ kt43502 \ main . c \n + # include " libinterop _ kt43502 _ api . h " \n + \n + int main ( ) { \n + libinterop _ kt43502 _ symbols ( ) - > kotlin . root . printExternPtr ( ) ; \n + } \n new file \n kotlin - native \ backend . native \ tests \ interop \ kt43502 \ main . kt \n + import kt43502 . * \n + \n + fun printExternPtr ( ) { \n + println ( externPtr ) \n + } \n
kotlin - native \ shared \ src \ main \ kotlin \ org \ jetbrains \ kotlin \ konan \ target \ ClangArgs . kt \n + / / PIC is not required on Windows ( and Clang will fail with ` error : unsupported option ' - fPIC ' ` ) \n + if ( configurables ! is MingwConfigurables ) { \n + / / ` - fPIC ` allows us to avoid some problems when producing dynamic library . \n + / / See KT - 43502 . \n + add ( listOf ( " - fPIC " ) ) \n + } \n
UniversalImageLoaderExample \ src \ com \ nostra13 \ example \ universalimageloader \ ImageGridActivity . java \n - import com . nostra13 . universalimageloader . core . assist . OnScrollSmartOptions ; \n + import com . nostra13 . universalimageloader . core . assist . PauseOnScrollListener ; \n - OnScrollSmartOptions smartOptions ; \n + DisplayImageOptions options ; \n - DisplayImageOptions options = new DisplayImageOptions . Builder ( ) \n + options = new DisplayImageOptions . Builder ( ) \n - smartOptions = new OnScrollSmartOptions ( options ) ; \n - gridView . setOnScrollListener ( smartOptions ) ; \n + gridView . setOnScrollListener ( new PauseOnScrollListener ( true , true ) ) ; \n - imageLoader . displayImage ( imageUrls [ position ] , imageView , smartOptions . getOptions ( ) ) ; \n + imageLoader . displayImage ( imageUrls [ position ] , imageView , options ) ; \n UniversalImageLoaderExample \ src \ com \ nostra13 \ example \ universalimageloader \ ImageListActivity . java \n - import com . nostra13 . universalimageloader . core . assist . OnScrollSmartOptions ; \n + import com . nostra13 . universalimageloader . core . assist . PauseOnScrollListener ; \n - String [ ] imageUrls ; \n + DisplayImageOptions options ; \n - OnScrollSmartOptions smartOptions ; \n + String [ ] imageUrls ; \n - DisplayImageOptions options = new DisplayImageOptions . Builder ( ) \n + options = new DisplayImageOptions . Builder ( ) \n - smartOptions = new OnScrollSmartOptions ( options ) ; \n - \n - listView . setOnScrollListener ( smartOptions ) ; \n + \n + listView . setOnScrollListener ( new PauseOnScrollListener ( false , true ) ) ; \n - imageLoader . displayImage ( imageUrls [ position ] , holder . image , smartOptions . getOptions ( ) ) ; \n + imageLoader . displayImage ( imageUrls [ position ] , holder . image , options ) ; \n UniversalImageLoaderExample \ src \ com \ nostra13 \ example \ universalimageloader \ ImagePagerActivity . java \n + . resetViewBeforeLoading ( ) \n
README . md \n - < a href = ' http : / / www . pledgie . com / campaigns / 19144 ' > < img alt = ' Click here to lend your support to : Universal Image Loader for Android and make a donation at www . pledgie . com ! ' src = ' http : / / www . pledgie . com / campaigns / 19144 . png ? skin _ name = chrome ' border = ' 0 ' / > < / a > < a href = " http : / / flattr . com / thing / 1110177 / nostra13Android - Universal - Image - Loader - on - GitHub " target = " _ blank " > < img src = " http : / / api . flattr . com / button / flattr - badge - large . png " alt = " Flattr this " title = " Flattr this " border = " 0 " / > < / a > \n + < a href = ' https : / / pledgie . com / campaigns / 19144 ' > < img alt = ' Click here to lend your support to : Universal Image Loader for Android and make a donation at pledgie . com ! ' src = ' https : / / pledgie . com / campaigns / 19144 . png ? skin _ name = chrome ' border = ' 0 ' > < / a > < a href = " http : / / flattr . com / thing / 1110177 / nostra13Android - Universal - Image - Loader - on - GitHub " target = " _ blank " > < img src = " http : / / api . flattr . com / button / flattr - badge - large . png " alt = " Flattr this " title = " Flattr this " border = " 0 " / > < / a > \n - limitations under the License . \n + limitations under the License . \n
demo \ build . gradle \n - compileSdkVersion 21 \n + compileSdkVersion 23 \n - targetSdkVersion 21 \n + targetSdkVersion 23 \n - compile ' com . android . support : support - v4 : 21 . 0 . 0 ' \n - compile ' com . android . support : appcompat - v7 : 21 . 0 . 0 ' \n + compile ' com . android . support : support - v4 : 23 . 1 . 1 ' \n + compile ' com . android . support : appcompat - v7 : 23 . 1 . 1 ' \n library \ build . gradle \n - compile ' com . android . support : support - v4 : 22 . 2 . 1 ' \n - compile ' com . android . support : support - annotations : 22 . 2 . 1 ' \n - compile ' com . android . support : recyclerview - v7 : 22 . 2 . 1 ' \n + compile ' com . android . support : support - v4 : 23 . 1 . 1 ' \n + compile ' com . android . support : support - annotations : 23 . 1 . 1 ' \n + compile ' com . android . support : recyclerview - v7 : 23 . 1 . 1 ' \n - compileSdkVersion 21 \n + compileSdkVersion 23 \n
build . gradle \n - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' \n + classpath ' com . android . tools . build : gradle : 2 . 1 . 2 ' \n
services \ core \ java \ com \ android \ server \ connectivity \ NetworkDiagnostics . java \n - + TextUtils . emptyIfNull ( mHostname ) + " } " ; \n + + ( mHostname = = null ? " " : mHostname ) + " } " ; \n
services \ core \ java \ com \ android \ server \ ConnectivityService . java \n - import com . google . android . collect . Lists ; \n - \n - final ArrayList < NetworkInfo > result = Lists . newArrayList ( ) ; \n + final ArrayList < NetworkInfo > result = new ArrayList < > ( ) ; \n - final ArrayList < NetworkState > result = Lists . newArrayList ( ) ; \n + final ArrayList < NetworkState > result = new ArrayList < > ( ) ; \n
compiler \ ir \ backend . js \ src \ org \ jetbrains \ kotlin \ ir \ backend \ js \ transformers \ irToJs \ jsAstUtils . kt \n - if ( arraysForConcat . isNotEmpty ( ) | | concatElements . isEmpty ( ) ) { \n + if ( arraysForConcat . isNotEmpty ( ) ) { \n - return concatElements . singleOrNull ( ) \n - ? : JsInvocation ( \n + return when ( concatElements . size ) { \n + 0 - > JsArrayLiteral ( ) \n + 1 - > concatElements [ 0 ] \n + else - > JsInvocation ( \n + } \n
compiler \ ir \ backend . js \ src \ org \ jetbrains \ kotlin \ ir \ backend \ js \ transformers \ irToJs \ jsAstUtils . kt \n - JsInvocation ( \n - / / Create scope for temporary variable holding dispatch receiver \n - / / It is used both during method reference and passing ` this ` value to ` apply ` function . \n - JsNameRef ( \n - " call " , \n - JsFunction ( \n - emptyScope , \n - JsBlock ( \n - JsVars ( JsVars . JsVar ( receiverName , jsDispatchReceiver ) ) , \n - JsReturn ( \n - JsInvocation ( \n - JsNameRef ( " apply " , JsNameRef ( symbolName , receiverRef ) ) , \n - listOf ( \n - receiverRef , \n - argumentsAsSingleArray \n - ) \n - ) \n + val iifeFun = JsFunction ( \n + emptyScope , \n + JsBlock ( \n + JsVars ( JsVars . JsVar ( receiverName , jsDispatchReceiver ) ) , \n + JsReturn ( \n + JsInvocation ( \n + JsNameRef ( " apply " , JsNameRef ( symbolName , receiverRef ) ) , \n + listOf ( \n + receiverRef , \n + argumentsAsSingleArray \n - ) , \n - " VarargIIFE " \n + ) \n - JsThisRef ( ) \n + " VarargIIFE " \n + \n + val iifeFunHasContext = ( jsDispatchReceiver as ? JsNameRef ) ? . qualifier is JsThisRef \n + if ( iifeFunHasContext ) { \n + JsInvocation ( \n + / / Create scope for temporary variable holding dispatch receiver \n + / / It is used both during method reference and passing ` this ` value to ` apply ` function . \n + JsNameRef ( \n + " call " , \n + iifeFun \n + ) , \n + JsThisRef ( ) \n + ) \n + } else { \n + JsInvocation ( iifeFun ) \n + } \n
lib \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ BaseActivity . java \n - / / Check to ensure a Google Account is active for the app . Placing the check here ensures \n - / / it is run again in the case where a Google Account wasn ' t present on the device and a \n - / / picker had to be started . \n - if ( ! AccountUtils . enforceActiveGoogleAccount ( this , SELECT _ GOOGLE _ ACCOUNT _ RESULT ) ) { \n - LOGD ( TAG , " EnforceActiveGoogleAccount returned false " ) ; \n - return ; \n - } \n - \n - \n - startLoginProcess ( ) ; \n
gradle . properties \n - appVersionCode = 510 \n - appVersionName = 5 . 1 . 0 \n + appVersionCode = 511 \n + appVersionName = 5 . 1 . 1 \n
build . xml \n - value = " * * / * . jar , $ { testfiles } , doc / * * , README . html , . classpath , . project , cpl - v10 . html " / > \n + value = " * * / * . jar , $ { testfiles } , doc / * * , README . md , . classpath , . project , cpl - v10 . html " / > \n - < copy file = " README . html " tofile = " $ { dist } / README . html " / > \n + < copy file = " README . md " tofile = " $ { dist } / README . md " / > \n
README . md \n + \n + ! [ Built on DEV @ cloud ] ( http : / / www . cloudbees . com / sites / default / files / Button - Built - on - CB - 1 . png ) \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ EffectivePredicateExtractor . java \n + import com . facebook . presto . sql . planner . plan . EnforceSingleRowNode ; \n + @ Override \n + public Expression visitEnforceSingleRow ( EnforceSingleRowNode node , Void context ) \n + { \n + if ( node . getSource ( ) instanceof ProjectNode ) { \n + return node . getSource ( ) . accept ( this , context ) ; \n + } \n + return TRUE _ LITERAL ; \n + } \n + \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ RowExpressionPredicateExtractor . java \n + import com . facebook . presto . sql . planner . plan . EnforceSingleRowNode ; \n + @ Override \n + public RowExpression visitEnforceSingleRow ( EnforceSingleRowNode node , Void context ) \n + { \n + if ( node . getSource ( ) instanceof ProjectNode ) { \n + return node . getSource ( ) . accept ( this , context ) ; \n + } \n + return TRUE _ CONSTANT ; \n + } \n + \n presto - main \ src \ test \ java \ com \ facebook \ presto \ sql \ planner \ TestLogicalPlanner . java \n + @ Test \n + public void testScalarSubqueryJoinFilterPushdown ( ) \n + { \n + assertPlan ( \n + " SELECT * FROM orders WHERE orderkey = ( SELECT 1 ) " , \n + anyTree ( \n + join ( INNER , ImmutableList . of ( ) , \n + filter ( " orderkey = BIGINT ' 1 ' " , \n + tableScan ( " orders " , ImmutableMap . of ( " orderkey " , " orderkey " ) ) ) , \n + anyTree ( \n + project ( ImmutableMap . of ( " orderkey " , expression ( " 1 " ) ) , any ( ) ) ) ) ) ) ; \n + } \n + \n - tableScan ( \n - " nation " , \n - ImmutableMap . of ( " NATION _ REGIONKEY " , " regionkey " ) ) ) , \n + tableScan ( \n + " nation " , \n + ImmutableMap . of ( " NATION _ REGIONKEY " , " regionkey " ) ) ) , \n - " REGION _ REGIONKEY " , " regionkey " ) ) ) ) ) ) ; \n + " REGION _ REGIONKEY " , " regionkey " ) ) ) ) ) ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ operator \ scalar \ StringFunctions . java \n - leftPosition + = codePointLeft > 0 ? lengthOfCodePoint ( codePointLeft ) : - codePointLeft ; \n - rightPosition + = codePointRight > 0 ? lengthOfCodePoint ( codePointRight ) : - codePointRight ; \n + leftPosition + = codePointLeft > = 0 ? lengthOfCodePoint ( codePointLeft ) : - codePointLeft ; \n + rightPosition + = codePointRight > = 0 ? lengthOfCodePoint ( codePointRight ) : - codePointRight ; \n presto - main \ src \ test \ java \ com \ facebook \ presto \ operator \ scalar \ TestStringFunctions . java \n + assertFunction ( " HAMMING _ DISTANCE ( ' \ u0000 ' , ' \ u0001 ' ) " , BIGINT , 1L ) ; \n
services \ core \ java \ com \ android \ server \ hdmi \ HdmiCecMessageValidator . java \n + addValidationInfo ( \n + Constants . MESSAGE _ SELECT _ ANALOG _ SERVICE , \n + new SelectAnalogueServiceValidator ( ) , \n + DEST _ DIRECT ) ; \n + \n + / * * \n + * Check if the given select analogue service parameter is valid . A valid parameter should lie \n + * within the range description defined in CEC 1 . 4 Specification : Operand Descriptions \n + * ( Section 17 ) \n + * / \n + private class SelectAnalogueServiceValidator implements ParameterValidator { \n + @ Override \n + public int isValid ( byte [ ] params ) { \n + if ( params . length < 4 ) { \n + return ERROR _ PARAMETER _ SHORT ; \n + } \n + return toErrorCode ( isValidAnalogueBroadcastType ( params [ 0 ] ) \n + & & isValidAnalogueFrequency ( HdmiUtils . twoBytesToInt ( params , 1 ) ) \n + & & isValidBroadcastSystem ( params [ 3 ] ) ) ; \n + } \n + } \n services \ tests \ servicestests \ src \ com \ android \ server \ hdmi \ HdmiCecMessageValidatorTest . java \n + @ Test \n + public void isValid _ selectAnalogueService ( ) { \n + assertMessageValidity ( " 40 : 92 : 00 : 13 : 0F : 00 : 96 " ) . isEqualTo ( OK ) ; \n + assertMessageValidity ( " 40 : 92 : 02 : EA : 60 : 1F " ) . isEqualTo ( OK ) ; \n + \n + assertMessageValidity ( " 4F : 92 : 00 : 13 : 0F : 00 " ) . isEqualTo ( ERROR _ DESTINATION ) ; \n + assertMessageValidity ( " F0 : 92 : 02 : EA : 60 : 1F " ) . isEqualTo ( ERROR _ SOURCE ) ; \n + assertMessageValidity ( " 40 : 92 : 00 : 13 : 0F " ) . isEqualTo ( ERROR _ PARAMETER _ SHORT ) ; \n + / / Invalid Analogue Broadcast type \n + assertMessageValidity ( " 40 : 92 : 03 : EA : 60 : 1F " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + / / Invalid Analogue Frequency \n + assertMessageValidity ( " 40 : 92 : 00 : FF : FF : 00 " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + / / Invalid Broadcast system \n + assertMessageValidity ( " 40 : 92 : 02 : EA : 60 : 20 " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + } \n + \n
services \ tests \ servicestests \ src \ com \ android \ server \ hdmi \ HdmiCecMessageValidatorTest . java \n + @ Test \n + public void isValid _ recordStatus ( ) { \n + assertMessageValidity ( " 40 : 0A : 01 " ) . isEqualTo ( OK ) ; \n + assertMessageValidity ( " 40 : 0A : 13 " ) . isEqualTo ( OK ) ; \n + assertMessageValidity ( " 40 : 0A : 1F : 04 : 01 " ) . isEqualTo ( OK ) ; \n + \n + assertMessageValidity ( " 0F : 0A : 01 " ) . isEqualTo ( ERROR _ DESTINATION ) ; \n + assertMessageValidity ( " F0 : 0A : 01 " ) . isEqualTo ( ERROR _ SOURCE ) ; \n + assertMessageValidity ( " 40 : 0A " ) . isEqualTo ( ERROR _ PARAMETER _ SHORT ) ; \n + assertMessageValidity ( " 40 : 0A : 00 " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + assertMessageValidity ( " 40 : 0A : 0F " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + assertMessageValidity ( " 40 : 0A : 1D " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + assertMessageValidity ( " 40 : 0A : 30 " ) . isEqualTo ( ERROR _ PARAMETER ) ; \n + } \n + \n
telephony \ java \ android \ telephony \ TelephonyManager . java \n - Map < Integer , List < EmergencyNumber > > emergencyNumberList = new HashMap < > ( ) ; \n + Map < Integer , List < EmergencyNumber > > emergencyNumberListForCategories = new HashMap < > ( ) ; \n - emergencyNumberList = telephony . getEmergencyNumberList ( \n - mContext . getOpPackageName ( ) , mContext . getAttributionTag ( ) ) ; \n - if ( emergencyNumberList ! = null ) { \n - for ( Integer subscriptionId : emergencyNumberList . keySet ( ) ) { \n - List < EmergencyNumber > numberList = emergencyNumberList . get ( subscriptionId ) ; \n - for ( EmergencyNumber number : numberList ) { \n - if ( ! number . isInEmergencyServiceCategories ( categories ) ) { \n - numberList . remove ( number ) ; \n - } \n - } \n - } \n - } \n - return emergencyNumberList ; \n + Map < Integer , List < EmergencyNumber > > emergencyNumberList = \n + telephony . getEmergencyNumberList ( mContext . getOpPackageName ( ) , \n + mContext . getAttributionTag ( ) ) ; \n + emergencyNumberListForCategories = \n + filterEmergencyNumbersByCategories ( emergencyNumberList , categories ) ; \n - return emergencyNumberList ; \n + return emergencyNumberListForCategories ; \n + } \n + \n + / * * \n + * Filter emergency numbers with categories . \n + * \n + * @ hide \n + * / \n + @ VisibleForTesting \n + public Map < Integer , List < EmergencyNumber > > filterEmergencyNumbersByCategories ( \n + Map < Integer , List < EmergencyNumber > > emergencyNumberList , \n + @ EmergencyServiceCategories int categories ) { \n + Map < Integer , List < EmergencyNumber > > emergencyNumberListForCategories = new HashMap < > ( ) ; \n + if ( emergencyNumberList ! = null ) { \n + for ( Integer subscriptionId : emergencyNumberList . keySet ( ) ) { \n + List < EmergencyNumber > allNumbersForSub = emergencyNumberList . get ( \n + subscriptionId ) ; \n + List < EmergencyNumber > numbersForCategoriesPerSub = new ArrayList < > ( ) ; \n + for ( EmergencyNumber number : allNumbersForSub ) { \n + if ( number . isInEmergencyServiceCategories ( categories ) ) { \n + numbersForCategoriesPerSub . add ( number ) ; \n + } \n + } \n + emergencyNumberListForCategories . put ( \n + subscriptionId , numbersForCategoriesPerSub ) ; \n + } \n + } \n + return emergencyNumberListForCategories ; \n
core \ api \ current . txt \n + field public static final int CAPABILITY _ CALL _ COMPOSER = 32768 ; / / 0x8000 \n telecomm \ java \ android \ telecom \ PhoneAccount . java \n - / * NEXT CAPABILITY : 0x8000 * / \n + / * * \n + * Flag indicating whether this { @ link PhoneAccount } is capable of supporting the call composer \n + * functionality for enriched calls . \n + * / \n + public static final int CAPABILITY _ CALL _ COMPOSER = 0x8000 ; \n + \n + / * NEXT CAPABILITY : 0x10000 * / \n + if ( hasCapabilities ( CAPABILITY _ CALL _ COMPOSER ) ) { \n + sb . append ( " CallComposer " ) ; \n + } \n
compiler \ fir \ modularized - tests \ build . gradle . kts \n + minHeapSize = " 8g " \n
compiler \ fir \ modularized - tests \ build . gradle . kts \n - jvmArgs ! ! . removeIf { it . contains ( " - Xmx " ) } \n + jvmArgs ! ! . removeIf { it . contains ( " - Xmx " ) | | it . contains ( " - Xms " ) | | it . contains ( " ReservedCodeCacheSize " ) } \n + jvmArgs ( " - XX : ReservedCodeCacheSize = 512m " ) \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ FPSLogger . java \n - if ( nanoTime - startTime > 1 _ 000 _ 000 _ 000 ) / * 1 , 000 , 000 , 000ns = = one second * / { \n + if ( nanoTime - startTime > 1000000000 ) / * 1 , 000 , 000 , 000ns = = one second * / { \n
backends \ gdx - backends - gwt \ src \ com \ badlogic \ gdx \ backends \ gwt \ GwtGL20 . java \n - final WebGLRenderingContext gl ; \n + public final WebGLRenderingContext gl ; \n
library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ GridViewActivityTest . java \n + import android . view . View ; \n + import android . widget . FrameLayout ; \n + \n + public void testCannotAddHeaderOrFooterWhenAdapterIsAlreadySet ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + try { \n + View view = new View ( activity ) ; \n + final int flexibleSpaceImageHeight = activity . getResources ( ) . getDimensionPixelSize ( R . dimen . flexible _ space _ image _ height ) ; \n + FrameLayout . LayoutParams lp = new FrameLayout . LayoutParams ( FrameLayout . LayoutParams . MATCH _ PARENT , flexibleSpaceImageHeight ) ; \n + view . setLayoutParams ( lp ) ; \n + view . setClickable ( true ) ; \n + scrollable . addHeaderView ( view ) ; \n + fail ( ) ; \n + } catch ( IllegalStateException ignore ) { \n + } \n + \n + try { \n + View view = new View ( activity ) ; \n + final int flexibleSpaceImageHeight = activity . getResources ( ) . getDimensionPixelSize ( R . dimen . flexible _ space _ image _ height ) ; \n + FrameLayout . LayoutParams lpf = new FrameLayout . LayoutParams ( FrameLayout . LayoutParams . MATCH _ PARENT , flexibleSpaceImageHeight ) ; \n + view . setLayoutParams ( lpf ) ; \n + scrollable . addFooterView ( view ) ; \n + fail ( ) ; \n + } catch ( IllegalStateException ignore ) { \n + } \n + } \n + } ) ; \n + } \n
library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ GridViewActivityTest . java \n + public void testNoCallbacks ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + scrollable = ( ObservableGridView ) activity . findViewById ( R . id . scrollable ) ; \n + scrollable . setScrollViewCallbacks ( null ) ; \n + } \n + } ) ; \n + testScroll ( ) ; \n + } \n + \n library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ ListViewActivityTest . java \n + public void testNoCallbacks ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + scrollable = ( ObservableListView ) activity . findViewById ( R . id . scrollable ) ; \n + scrollable . setScrollViewCallbacks ( null ) ; \n + } \n + } ) ; \n + testScroll ( ) ; \n + } \n + \n library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ RecyclerViewActivityTest . java \n + public void testNoCallbacks ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + scrollable = ( ObservableRecyclerView ) activity . findViewById ( R . id . scrollable ) ; \n + scrollable . setScrollViewCallbacks ( null ) ; \n + } \n + } ) ; \n + testScroll ( ) ; \n + } \n + \n library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ ScrollViewActivityTest . java \n + public void testNoCallbacks ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + scrollable = ( ObservableScrollView ) activity . findViewById ( R . id . scrollable ) ; \n + scrollable . setScrollViewCallbacks ( null ) ; \n + } \n + } ) ; \n + testScroll ( ) ; \n + } \n + \n library \ src \ androidTest \ java \ com \ github \ ksoichiro \ android \ observablescrollview \ test \ WebViewActivityTest . java \n + public void testNoCallbacks ( ) throws Throwable { \n + runTestOnUiThread ( new Runnable ( ) { \n + @ Override \n + public void run ( ) { \n + scrollable = ( ObservableWebView ) activity . findViewById ( R . id . scrollable ) ; \n + scrollable . setScrollViewCallbacks ( null ) ; \n + } \n + } ) ; \n + testScroll ( ) ; \n + } \n + \n
gradle . properties \n - version = 2 . 4 . 2 - SNAPSHOT \n + version = 2 . 4 . 3 - SNAPSHOT \n
gradle . properties \n - version = 5 . 3 . 4 - SNAPSHOT \n + version = 5 . 3 . 5 - SNAPSHOT \n
doc \ ReleaseNotes4 . 13 . md \n + # # # [ Pull request # 1150 : ] ( https : / / github . com / junit - team / junit4 / pull / 1150 ) Deprecate ` Assert # assertThat ` \n + \n + The method ` assertThat ` is used for writing assertions with Hamcrest . Hamcrest is an independent assertion library and contains an own ` assertThat ` method in the class ` org . hamcrest . MatcherAssert ` . It is available both in the old Hamcrest 1 . 3 release and in the current Hamcrest 2 . 1 . Therefore the JUnit team recommends to use Hamcrest ' s own ` assertThat ` directly . \n + \n
. travis . settings . xml \n + < mirrors xmlns = " http : / / maven . apache . org / SETTINGS / 1 . 1 . 0 " > \n + < mirror > \n + < mirrorOf > central < / mirrorOf > \n + < name > GCS Maven Central mirror < / name > \n + < url > https : / / maven - central . storage - download . googleapis . com / maven2 / < / url > \n + < id > google - maven - central < / id > \n + < / mirror > \n + < / mirrors > \n
src \ main \ asciidoc \ dataobjects . adoc \n - and latency on resource serving due to CPU overload , and homehower - as the comptational work is required also client side \n + and latency on resource serving due to CPU overload , and , however - as the comptational work is required also client side \n
src \ main \ java \ io \ vertx \ core \ http \ package - info . java \n + * \n + * To address this latter issue Vert . x allows you to tune the ' compression level ' parameter that is native of the gzip / deflate compression algorithms . \n + * \n + * Compression level allows to configure gizp / deflate algorithms in terms of the compression ratio of the resulting data and the computational cost of the compress / decompress operation . \n + * \n + * The compression level is an integer value ranged from ' 1 ' to ' 9 ' , where ' 1 ' means lower compression ratio but fastest algorithm and ' 9 ' means maximum compression ratio available but a slower algorithm . \n + * \n + * Using compression levels higher that 1 - 2 usually allows to save just some bytes in size - the gain is not linear , and depends on the specific data to be compressed \n + * - but it comports a non - trascurable cost in term of CPU cycles required to the server while generating the compressed response data \n + * ( Note that at moment Vert . x doesn ' t support any form caching of compressed response data , even for static files , so the compression is done on - the - fly \n + * at every request body generation ) and in the same way it affects client ( s ) while decoding ( inflating ) received responses , operation that becomes more CPU - intensive \n + * the more the level increases . \n + * \n + * By default - if compression is enabled via { @ link io . vertx . core . http . HttpServerOptions # setCompressionSupported } - Vert . x will use ' 1 ' as compression level , \n + * but the parameter can be configured to address any case with { @ link io . vertx . core . http . HttpServerOptions # setCompressionLevel } . \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ SslUtils . java \n + defaultCiphers . add ( " TLS _ ECDHE _ RSA _ WITH _ AES _ 256 _ GCM _ SHA384 " ) ; \n
codec - http \ src \ main \ java \ io \ netty \ handler \ codec \ http \ HttpHeaderNames . java \n + / * * \n + * { @ code " dnt " } \n + * / \n + public static final AsciiString DNT = AsciiString . cached ( " dnt " ) ; \n + / * * \n + * { @ code " upgrade - insecure - requests " } \n + * / \n + public static final AsciiString UPGRADE _ INSECURE _ REQUESTS = AsciiString . cached ( " upgrade - insecure - requests " ) ; \n + / * * \n + * { @ code " x - requested - with " } \n + * / \n + public static final AsciiString X _ REQUESTED _ WITH = AsciiString . cached ( " x - requested - with " ) ; \n codec - http \ src \ main \ java \ io \ netty \ handler \ codec \ http \ HttpHeaderValues . java \n + / * * \n + * { @ code " application / xhtml + xml " } \n + * / \n + public static final AsciiString APPLICATION _ XHTML = AsciiString . cached ( " application / xhtml + xml " ) ; \n + / * * \n + * { @ code " application / xml " } \n + * / \n + public static final AsciiString APPLICATION _ XML = AsciiString . cached ( " application / xml " ) ; \n + / * * \n + * { @ code " text / css " } \n + * / \n + public static final AsciiString TEXT _ CSS = AsciiString . cached ( " text / css " ) ; \n + / * * \n + * { @ code " text / html " } \n + * / \n + public static final AsciiString TEXT _ HTML = AsciiString . cached ( " text / html " ) ; \n + / * * \n + * { @ code " text / event - stream " } \n + * / \n + public static final AsciiString TEXT _ EVENT _ STREAM = AsciiString . cached ( " text / event - stream " ) ; \n + / * * \n + * { @ code " websocket " } \n + * / \n + public static final AsciiString XML _ HTTP _ REQUEST = AsciiString . cached ( " XmlHttpRequest " ) ; \n
spring - boot - project \ spring - boot - dependencies \ build . gradle \n - library ( " Neo4j OGM " , " 3 . 2 . 17 " ) { \n + library ( " Neo4j OGM " , " 3 . 2 . 18 " ) { \n
spring - boot - project \ spring - boot - dependencies \ build . gradle \n - library ( " AssertJ " , " 3 . 18 . 0 " ) { \n + library ( " AssertJ " , " 3 . 18 . 1 " ) { \n
spring - boot - project \ spring - boot - dependencies \ pom . xml \n - < hibernate - validator . version > 6 . 0 . 21 . Final < / hibernate - validator . version > \n + < hibernate - validator . version > 6 . 0 . 22 . Final < / hibernate - validator . version > \n
spring - boot - project \ spring - boot - dependencies \ pom . xml \n - < neo4j - ogm . version > 3 . 2 . 18 < / neo4j - ogm . version > \n + < neo4j - ogm . version > 3 . 2 . 19 < / neo4j - ogm . version > \n
src \ site \ xdoc \ index . xml \n - < a class = " btn btn - primary btn - large " href = " javascript : hopscotch . startTour ( tour ) ; " > Let ' s take a tour » < / a > \n + < a class = " btn btn - primary btn - large " href = " javascript : startSiteTour ( ) " > Let ' s take a tour » < / a > \n + window . startSiteTour = function ( ) { \n + hopscotch . startTour ( tour ) ; \n + return undefined ; \n + } ; \n
src \ site \ xdoc \ index . xml \n - < author > Stephen Connolly < / author > \n
ion \ src \ com \ koushikdutta \ ion \ conscrypt \ ConscryptMiddleware . java \n - if ( Security . getProvider ( GMS _ PROVIDER ) ! = null ) \n + if ( Security . getProvider ( GMS _ PROVIDER ) ! = null ) { \n + success = true ; \n + } \n
ion \ src \ com \ koushikdutta \ ion \ conscrypt \ ConscryptMiddleware . java \n + import java . lang . reflect . Method ; \n - Context gms = context . createPackageContext ( " com . google . android . gms " , Context . CONTEXT _ INCLUDE _ CODE | Context . CONTEXT _ IGNORE _ SECURITY ) ; \n - gms \n - . getClassLoader ( ) \n - . loadClass ( " com . google . android . gms . common . security . ProviderInstallerImpl " ) \n - . getMethod ( " insertProvider " , Context . class ) \n - . invoke ( null , context ) ; \n + try { \n + Class < ? > providerInstaller = Class . forName ( " com . google . android . gms . security . ProviderInstaller " ) ; \n + Method mInsertProvider = providerInstaller . getDeclaredMethod ( " installIfNeeded " , Context . class ) ; \n + mInsertProvider . invoke ( null , context ) ; \n + \n + } catch ( Throwable ignored ) { \n + Context gms = context . createPackageContext ( " com . google . android . gms " , Context . CONTEXT _ INCLUDE _ CODE | Context . CONTEXT _ IGNORE _ SECURITY ) ; \n + gms \n + . getClassLoader ( ) \n + . loadClass ( " com . google . android . gms . common . security . ProviderInstallerImpl " ) \n + . getMethod ( " insertProvider " , Context . class ) \n + . invoke ( null , context ) ; \n + } \n
okhttp - protocols \ src \ main \ java \ com \ squareup \ okhttp \ internal \ spdy \ Spdy3 . java \n - if ( numberOfPairs < 0 ) { \n + if ( ( numberOfPairs * 2 ) < 0 ) { \n
okhttp - protocols \ src \ main \ java \ com \ squareup \ okhttp \ internal \ spdy \ Spdy3 . java \n + } catch ( OutOfMemoryError e ) { \n + throw new IOException ( e . getMessage ( ) ) ; \n
src \ clj \ clojure \ genclass . clj \n - It ' s return value is ignored . \n + Its return value is ignored . \n
src \ clj \ clojure \ core _ print . clj \n + ( defn print - simple [ o , ^ Writer w ] \n + ( print - meta o w ) \n + ( . write w ( str o ) ) ) \n + \n - ( print - method ( vary - meta o # ( dissoc % : type ) ) w ) ) \n + ( if ( instance ? clojure . lang . IObj o ) \n + ( print - method ( vary - meta o # ( dissoc % : type ) ) w ) \n + ( print - simple o w ) ) ) \n - ( defn print - simple [ o , ^ Writer w ] \n - ( print - meta o w ) \n - ( . write w ( str o ) ) ) \n - \n test \ clojure \ test _ clojure \ printer . clj \n - " hi " ) ) \n + " hi " ) ) \n + \n + ( def ^ { : foo : anything } var - with - meta 42 ) \n + ( def ^ { : type : anything } var - with - type 666 ) \n + \n + ( deftest print - var \n + ( are [ x s ] ( = s ( pr - str x ) ) \n + # ' pr - str " # ' clojure . core / pr - str " \n + # ' var - with - meta " # ' clojure . test - clojure . printer / var - with - meta " \n + # ' var - with - type " # ' clojure . test - clojure . printer / var - with - type " ) ) \n + \n + ( deftest print - meta \n + ( are [ x s ] ( binding [ * print - meta * true ] \n + ( let [ pstr ( pr - str x ) ] \n + ( and ( . endsWith pstr s ) \n + ( . startsWith pstr " ^ " ) \n + ( . contains pstr ( pr - str ( meta x ) ) ) ) ) ) \n + # ' pr - str " # ' clojure . core / pr - str " \n + # ' var - with - meta " # ' clojure . test - clojure . printer / var - with - meta " \n + # ' var - with - type " # ' clojure . test - clojure . printer / var - with - type " ) ) \n + \n
core \ java \ android \ os \ IBinder . java \n + / * * \n + * Flag to { @ link # transact } : request binder driver to clear transaction data . \n + * \n + * Be very careful when using this flag in Java , since Java objects read from a Java \n + * Parcel may be non - trivial to clear . \n + * @ hide \n + * / \n + int FLAG _ CLEAR _ BUF = 0x00000020 ; \n + \n core \ java \ android \ os \ Parcel . java \n + @ CriticalNative \n + private static native void nativeMarkSensitive ( long nativePtr ) ; \n + / * * \n + * Parcel data should be zero ' d before realloc ' d or deleted . \n + * @ hide \n + * / \n + public final void markSensitive ( ) { \n + nativeMarkSensitive ( mNativePtr ) ; \n + } \n + \n core \ jni \ android _ os _ Parcel . cpp \n + static void android _ os _ Parcel _ markSensitive ( jlong nativePtr ) \n + { \n + Parcel * parcel = reinterpret _ cast < Parcel * > ( nativePtr ) ; \n + if ( parcel ) { \n + parcel - > markSensitive ( ) ; \n + } \n + } \n + \n + / / @ CriticalNative \n + { " nativeMarkSensitive " , " ( J ) V " , ( void * ) android _ os _ Parcel _ markSensitive } , \n
core \ java \ android \ os \ TransactionTooLargeException . java \n - * then the call will fail and { @ link TransactionTooLargeException } will be thrown . \n + * then the call will fail . { @ link TransactionTooLargeException } is thrown as a \n + * heuristic when a transaction is large , and it fails , since these are the transactions \n + * which are most likely to overfill the transaction buffer . \n - * The Binder transaction buffer has a limited fixed size , currently 1Mb , which \n + * The Binder transaction buffer has a limited fixed size , currently 1MB , which \n
src \ main \ java \ net \ starlark \ java \ eval \ Printer . java \n + / * * Appends an integer to the printer ' s buffer * / \n + public final Printer append ( int i ) { \n + buffer . append ( i ) ; \n + return this ; \n + } \n + \n + / * * Appends a long integer to the printer ' s buffer * / \n + public final Printer append ( long l ) { \n + buffer . append ( l ) ; \n + return this ; \n + } \n + \n src \ main \ java \ net \ starlark \ java \ eval \ StarlarkInt . java \n + @ Override \n + public void repr ( Printer printer ) { \n + printer . append ( v ) ; \n + } \n + \n + @ Override \n + public void repr ( Printer printer ) { \n + printer . append ( v ) ; \n + } \n + \n + @ Override \n + public void repr ( Printer printer ) { \n + printer . append ( v . toString ( ) ) ; \n + } \n + \n - public void repr ( Printer printer ) { \n - printer . append ( toString ( ) ) ; \n - } \n + public abstract void repr ( Printer printer ) ; \n
src \ main \ java \ net \ starlark \ java \ eval \ Tuple . java \n - / / TODO ( adonovan ) : opt : exploit x + ( ) = = x ; y + ( ) = = y . \n - return wrap ( ObjectArrays . concat ( x . elems , y . elems , Object . class ) ) ; \n + if ( x . isEmpty ( ) ) { \n + return y ; \n + } else if ( y . isEmpty ( ) ) { \n + return x ; \n + } else { \n + return wrap ( ObjectArrays . concat ( x . elems , y . elems , Object . class ) ) ; \n + } \n new file \n src \ test \ java \ net \ starlark \ java \ eval \ testdata \ tuple . star \n + # tests of tuples \n + \n + assert _ eq ( ( ) + ( 1 , " a " ) , ( 1 , " a " ) ) \n + assert _ eq ( ( 1 , " a " ) + ( ) , ( 1 , " a " ) ) \n + assert _ eq ( ( 1 , ) + ( " a " , ) , ( 1 , " a " ) ) \n
src \ jvm \ clojure \ lang \ Compiler . java \n - catch ( IllegalArgumentException e ) \n + catch ( Exception e ) \n
src \ clj \ clojure \ reflect \ java . clj \n - ( require ' [ clojure . set : as set ] \n + ( require ' [ clojure . datafy : refer ( datafy ) ] \n + ' [ clojure . set : as set ] \n - ( - > ( typename t ) \n - ( str / replace " [ ] " " < > " ) \n - ( symbol ) ) ) \n + ( cond - > \n + ( - > ( typename t ) \n + ( str / replace " [ ] " " < > " ) \n + ( symbol ) ) \n + ( class ? t ) ( with - meta { ' clojure . core . protocols / datafy \n + ( fn [ _ ] ( datafy t ) ) } ) ) ) \n + ( defn - typeref - > class \n + [ typeref classloader ] \n + ( if ( class ? typeref ) \n + typeref \n + ( clojure . lang . RT / classForName ( typename typeref ) false classloader ) ) ) \n + \n - ( let [ cls ( clojure . lang . RT / classForName ( typename typeref ) false classloader ) ] \n + ( let [ cls ( typeref - > class typeref classloader ) ] \n
test \ clojure \ test _ clojure \ agents . clj \n - ( deftest fail - handler \n + \n + ; ; TODO : make these tests deterministic ( i . e . not sleep and hope ) \n + \n + # _ ( deftest fail - handler \n - ( deftest restart - no - clear \n + # _ ( deftest restart - no - clear \n - ( deftest restart - clear \n + # _ ( deftest restart - clear \n - ( deftest invalid - restart \n + # _ ( deftest invalid - restart \n
pom . xml \n - < version > 0 . 2 . 0 < / version > \n + < version > 0 . 4 . 0 < / version > \n test \ clojure \ test _ clojure \ numbers . clj \n - ( : require [ clojure . test . generative . generators : as gen ] ) ) \n + ( : require [ clojure . data . generators : as gen ] ) ) \n
pom . xml \n + < configuration > \n + < excludes > \n + < exclude > clojure / version . properties < / exclude > \n + < / excludes > \n + < / configuration > \n
pom . xml \n - < version > 5 < / version > \n + < version > 7 < / version > \n
. gitignore \n - # Package Files # \n + \n + # # # Package Files # # # \n - / bin / \n - / bin / \n + \n + # # # Checkstyle # # # \n + . checkstyle \n
dao \ src \ main \ java \ com \ iluwatar \ dao \ DbCustomerDao . java \n - var statement = connection . prepareStatement ( " SELECT * FROM CUSTOMERS " ) ; \n + var statement = connection . prepareStatement ( " SELECT * FROM CUSTOMERS " ) ; / / NOSONAR \n special - case \ src \ main \ java \ com \ iluwatar \ specialcase \ Db . java \n - public static Db getInstance ( ) { \n + public static synchronized Db getInstance ( ) { \n - synchronized ( Db . class ) { \n - if ( instance = = null ) { \n - instance = new Db ( ) ; \n - instance . userName2User = new HashMap < > ( ) ; \n - instance . user2Account = new HashMap < > ( ) ; \n - instance . itemName2Product = new HashMap < > ( ) ; \n - } \n - } \n + Db newInstance = new Db ( ) ; \n + newInstance . userName2User = new HashMap < > ( ) ; \n + newInstance . user2Account = new HashMap < > ( ) ; \n + newInstance . itemName2Product = new HashMap < > ( ) ; \n + instance = newInstance ; \n special - case \ src \ main \ java \ com \ iluwatar \ specialcase \ MaintenanceLock . java \n - public static MaintenanceLock getInstance ( ) { \n + public static synchronized MaintenanceLock getInstance ( ) { \n - synchronized ( MaintenanceLock . class ) { \n - if ( instance = = null ) { \n - instance = new MaintenanceLock ( ) ; \n - } \n - } \n + instance = new MaintenanceLock ( ) ; \n - LOGGER . info ( " Maintenance lock is set to : " + lock ) ; \n + LOGGER . info ( " Maintenance lock is set to : " , lock ) ; \n transaction - script \ src \ main \ java \ com \ iluwatar \ transactionscript \ HotelDaoImpl . java \n - var statement = connection . prepareStatement ( " SELECT * FROM ROOMS " ) ; \n + var statement = connection . prepareStatement ( " SELECT * FROM ROOMS " ) ; / / NOSONAR \n
. travis . yml \n - TEST _ SPECIFIC _ MODULES = presto - main \n - TEST _ SPECIFIC _ MODULES = presto - mongodb TEST _ FLAGS = " - P test - mongo - distributed - queries " \n - TEST _ SPECIFIC _ MODULES = presto - redis TEST _ FLAGS = " - P test - redis - integration - smoke - test " \n - - TEST _ OTHER _ MODULES = ! presto - tests , ! presto - raptor , ! presto - accumulo , ! presto - cassandra , ! presto - hive , ! presto - kudu , ! presto - docs , ! presto - server , ! presto - server - rpm , ! presto - main , ! presto - mongodb , ! presto - spark - package , ! presto - spark - launcher , ! presto - spark - testing , ! presto - redis \n + - TEST _ SPECIFIC _ MODULES = presto - elasticsearch \n + - TEST _ SPECIFIC _ MODULES = presto - orc \n + - TEST _ SPECIFIC _ MODULES = presto - thrift - connector \n + - TEST _ OTHER _ MODULES = ! presto - tests , ! presto - raptor , ! presto - accumulo , ! presto - cassandra , ! presto - hive , ! presto - kudu , ! presto - docs , ! presto - server , ! presto - server - rpm , ! presto - main , ! presto - mongodb , ! presto - spark - package , ! presto - spark - launcher , ! presto - spark - testing , ! presto - redis , ! presto - elasticsearch , ! presto - orc , ! presto - thrift - connector \n - PRODUCT _ TESTS _ BASIC _ ENVIRONMENT = true \n - PRODUCT _ TESTS _ SPECIFIC _ ENVIRONMENT = true \n - PRODUCT _ TESTS _ SPECIFIC _ ENVIRONMENT _ 2 = true \n
pom . xml \n - < version > 1 . 30 < / version > \n + < version > 1 . 31 < / version > \n
compiler \ ir \ backend . wasm \ build . gradle . kts \n + compile ( project ( " : compiler : ir . tree . impl " ) ) \n compiler \ ir \ backend . wasm \ src \ org \ jetbrains \ kotlin \ backend \ wasm \ WasmBackendContext . kt \n + import org . jetbrains . kotlin . ir . declarations . impl . IrFactoryImpl \n - import org . jetbrains . kotlin . ir . declarations . persistent . PersistentIrFactory \n - override val irFactory : IrFactory = PersistentIrFactory \n + override val irFactory : IrFactory = IrFactoryImpl \n compiler \ ir \ backend . wasm \ src \ org \ jetbrains \ kotlin \ backend \ wasm \ compiler . kt \n - import org . jetbrains . kotlin . backend . wasm . ir2wasm . WasmModuleFragmentGenerator \n + import org . jetbrains . kotlin . backend . wasm . ir2wasm . WasmModuleFragmentGenerator \n - import org . jetbrains . kotlin . ir . declarations . persistent . PersistentIrFactory \n + import org . jetbrains . kotlin . ir . declarations . impl . IrFactoryImpl \n - import org . jetbrains . kotlin . psi . KtFile \n - PersistentIrFactory \n + IrFactoryImpl \n
compiler \ ir \ backend . js \ src \ org \ jetbrains \ kotlin \ ir \ backend \ js \ lower \ JsCodeOutliningLowering . kt \n + import org . jetbrains . kotlin . ir . IrElement \n + import org . jetbrains . kotlin . ir . symbols . IrFunctionSymbol \n + import org . jetbrains . kotlin . ir . visitors . IrElementVisitorVoid \n + import org . jetbrains . kotlin . ir . visitors . acceptChildrenVoid \n + / / Fast path to avoid tracking locals scopes for bodies without js ( ) calls \n + if ( ! irBody . containsCallsTo ( backendContext . intrinsics . jsCode ) ) \n + return \n + \n + private fun IrElement . containsCallsTo ( symbol : IrFunctionSymbol ) : Boolean { \n + var result = false \n + acceptChildrenVoid ( object : IrElementVisitorVoid { \n + override fun visitElement ( element : IrElement ) { \n + element . acceptChildrenVoid ( this ) \n + } \n + \n + override fun visitCall ( expression : IrCall ) { \n + if ( expression . symbol = = symbol ) { \n + result = true \n + } \n + super . visitCall ( expression ) \n + } \n + } ) \n + \n + return result \n + } \n + \n
kotlin - native \ backend . native \ compiler \ ir \ backend . native \ src \ org \ jetbrains \ kotlin \ backend \ konan \ llvm \ objcexport \ ObjCExportCodeGenerator . kt \n + is ObjCGetterForObjectInstance - > { \n + classAdapters + = if ( irClass . isUnit ( ) ) { \n + createUnitInstanceAdapter ( it . selector ) \n + } else { \n + createObjectInstanceAdapter ( irClass , it . selector ) \n + } \n + } \n - when ( irClass . kind ) { \n - ClassKind . OBJECT - > { \n - classAdapters + = if ( irClass . isUnit ( ) ) { \n - createUnitInstanceAdapter ( ) \n - } else { \n - createObjectInstanceAdapter ( irClass ) \n - } \n - } \n - else - > { \n - / / Nothing special . \n - } \n - } \n - \n - private fun ObjCExportCodeGenerator . createUnitInstanceAdapter ( ) = \n - generateObjCToKotlinSyntheticGetter ( \n - namer . getObjectInstanceSelector ( context . builtIns . unit ) \n - ) { \n + private fun ObjCExportCodeGenerator . createUnitInstanceAdapter ( selector : String ) = \n + generateObjCToKotlinSyntheticGetter ( selector ) { \n - irClass : IrClass \n + irClass : IrClass , \n + selector : String \n - val selector = namer . getObjectInstanceSelector ( irClass . descriptor ) \n - \n kotlin - native \ backend . native \ compiler \ ir \ backend . native \ src \ org \ jetbrains \ kotlin \ backend \ konan \ objcexport \ ObjCExportCodeSpec . kt \n + if ( descriptor . kind = = ClassKind . OBJECT ) { \n + methods + = ObjCGetterForObjectInstance ( namer . getObjectInstanceSelector ( descriptor ) ) \n + } \n + \n + internal class ObjCGetterForObjectInstance ( val selector : String ) : ObjCMethodSpec ( ) \n + \n
kotlin - native \ backend . native \ compiler \ ir \ backend . native \ src \ org \ jetbrains \ kotlin \ backend \ konan \ llvm \ objcexport \ ObjCExportCodeGenerator . kt \n - classAdapters + = createEnumEntryAdapter ( it . irEnumEntrySymbol . owner ) \n + classAdapters + = createEnumEntryAdapter ( it . irEnumEntrySymbol . owner , it . selector ) \n - irEnumEntry : IrEnumEntry \n + irEnumEntry : IrEnumEntry , \n + selector : String \n - val selector = namer . getEnumEntrySelector ( irEnumEntry . descriptor ) \n - \n kotlin - native \ backend . native \ compiler \ ir \ backend . native \ src \ org \ jetbrains \ kotlin \ backend \ konan \ objcexport \ ObjCExportCodeSpec . kt \n - ObjCGetterForKotlinEnumEntry ( symbolTable . referenceEnumEntry ( it ) ) \n + ObjCGetterForKotlinEnumEntry ( symbolTable . referenceEnumEntry ( it ) , namer . getEnumEntrySelector ( it ) ) \n - internal class ObjCGetterForKotlinEnumEntry ( val irEnumEntrySymbol : IrEnumEntrySymbol ) : ObjCMethodSpec ( ) \n + internal class ObjCGetterForKotlinEnumEntry ( \n + val irEnumEntrySymbol : IrEnumEntrySymbol , \n + val selector : String \n + ) : ObjCMethodSpec ( ) \n
kotlin - native \ backend . native \ tests \ produce _ dynamic \ simple \ main . c \n + _ _ DisposeStablePointer ( data . pinned ) ; \n + _ _ DisposeStablePointer ( nullableUnit . pinned ) ; \n
kotlin - native \ samples \ androidNativeActivity \ build . gradle . kts \n + android ( ) \n + \n
src \ docs \ asciidoc \ languages \ kotlin . adoc \n + NOTE : The Kotlin code samples in Spring Framework documentation do not specify explicitly ` open ` on these classes and \n + their member functions , they are written for projects using the ` kotlin - allopen ` plugin since this is the most commonly \n + used setup . \n + \n
spring - webmvc \ src \ main \ java \ org \ springframework \ web \ servlet \ handler \ AbstractHandlerMethodMapping . java \n - if ( KotlinDetector . isKotlinType ( method . getDeclaringClass ( ) ) & & KotlinDelegate . isSuspend ( method ) ) { \n - throw new IllegalStateException ( " Unsupported suspending handler method detected : " + method ) ; \n + if ( KotlinDetector . isKotlinType ( method . getDeclaringClass ( ) ) ) { \n + Class < ? > [ ] parameterTypes = method . getParameterTypes ( ) ; \n + if ( ( parameterTypes . length > 0 ) & & " kotlin . coroutines . Continuation " . equals ( parameterTypes [ parameterTypes . length - 1 ] . getName ( ) ) ) { \n + throw new IllegalStateException ( " Unsupported suspending handler method detected : " + method ) ; \n + } \n
src \ docs \ asciidoc \ languages \ kotlin . adoc \n - - - - \n - Version ` 1 . 4 . 0 - M1 ` and above are supported . \n + Version ` 1 . 4 . 0 ` and above are supported . \n
build . gradle \n - id ' org . jetbrains . kotlin . jvm ' version ' 1 . 4 . 10 ' apply false \n + id ' org . jetbrains . kotlin . jvm ' version ' 1 . 4 . 20 ' apply false \n - id " org . jetbrains . kotlin . plugin . serialization " version " 1 . 4 . 10 " apply false \n + id " org . jetbrains . kotlin . plugin . serialization " version " 1 . 4 . 20 " apply false \n - mavenBom " org . jetbrains . kotlin : kotlin - bom : 1 . 4 . 10 " \n + mavenBom " org . jetbrains . kotlin : kotlin - bom : 1 . 4 . 20 " \n
flexbox \ src \ main \ java \ com \ google \ android \ flexbox \ FlexboxLayoutManager . java \n - return computeScrollOffset ( state ) ; \n + return scrollOffset ; \n
README . md \n - implementation ' com . google . android : flexbox : 1 . 0 . 0 ' \n + implementation ' com . google . android : flexbox : 1 . 1 . 0 - beta1 ' \n - There are two ways of using Flexbox in your layout . \n + There are two ways of using Flexbox in your layout . \n - # # FlexboxLayout \n + # # FlexboxLayout \n flexbox \ constants . gradle \n - mavenVersion = ' 1 . 0 . 0 ' \n + mavenVersion = ' 1 . 1 . 0 - beta1 ' \n
kokoro \ build . sh \n - echo y | $ { ANDROID _ SDK _ HOME } / tools / bin / sdkmanager " build - tools ; 29 . 0 . 2 " \n + echo " Installing build - tools . . . " \n + echo y | $ { ANDROID _ SDK _ HOME } / tools / bin / sdkmanager " build - tools ; 29 . 0 . 2 " > / dev / null \n - echo y | $ { ANDROID _ SDK _ HOME } / tools / bin / sdkmanager " ndk ; 20 . 0 . 5594570 " \n + echo " Installing NDK that matches the current version of AGP . . . " \n + echo y | $ { ANDROID _ SDK _ HOME } / tools / bin / sdkmanager " ndk ; 20 . 0 . 5594570 " > / dev / null \n
. circleci \ config . yml \n - gcloud firebase test android run - - type instrumentation - - app demo - playground / build / outputs / apk / debug / demo - playground - debug . apk - - test flexbox / build / outputs / apk / androidTest / debug / flexbox - debug - androidTest . apk - - device - ids hammerhead , sailfish - - os - version - ids 19 , 21 , 23 , 24 , 25 , 26 - - locales en - - orientations portrait , landscape - - results - bucket $ { GCLOUD _ TEST _ BUCKET _ LIBRARY } - - timeout 180s ; \n + gcloud firebase test android run \ \n + - - type instrumentation \ \n + - - app demo - playground / build / outputs / apk / debug / demo - playground - debug . apk \ \n + - - test flexbox / build / outputs / apk / androidTest / debug / flexbox - debug - androidTest . apk \ \n + - - device - ids hammerhead , sailfish \ \n + - - os - version - ids 19 , 21 , 23 , 24 , 25 , 26 \ \n + - - locales en - - orientations portrait , landscape \ \n + - - results - bucket android - devrel - ci - flexbox \ \n + - - timeout 180s ; \n
x - pack \ plugin \ spatial \ src \ test \ java \ org \ elasticsearch \ xpack \ spatial \ search \ aggregations \ GeoLineAggregatorTests . java \n - IndexSearcher indexSearcher = newSearcher ( indexReader , true , true ) ; \n + IndexSearcher indexSearcher = newIndexSearcher ( indexReader ) ; \n
x - pack \ plugin \ core \ src \ main \ java \ org \ elasticsearch \ xpack \ core \ rollup \ v2 \ RollupAction . java \n - public static final String NAME = " cluster : admin / xpack / rollupV2 " ; \n + public static final String NAME = " cluster : admin / xpack / rollup / action " ; \n
x - pack \ plugin \ repository - encrypted \ src \ test \ java \ org \ elasticsearch \ repositories \ encrypted \ ChainingInputStreamTests . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67086 " ) \n
qa \ os \ src \ test \ java \ org \ elasticsearch \ packaging \ test \ DockerTests . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67097 " ) \n
dubbo - cluster \ src \ main \ java \ org \ apache \ dubbo \ rpc \ cluster \ RouterChain . java \n - CollectionUtils . sort ( routers ) ; \n + CollectionUtils . sort ( newRouters ) ; \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractInterfaceConfig . java \n - DynamicConfigurationFactory factories = ExtensionLoader \n + DynamicConfigurationFactory factory = ExtensionLoader \n - DynamicConfiguration configuration = factories . getDynamicConfiguration ( url ) ; \n + DynamicConfiguration configuration = factory . getDynamicConfiguration ( url ) ; \n
src \ clj \ clojure \ test . clj \n - ` ( temp / do - template ~ argv ( is ~ expr ) ~ @ args ) ) \n + ( if ( or \n + ; ; ( are [ ] true ) is meaningless but ok \n + ( and ( empty ? argv ) ( empty ? args ) ) \n + ; ; Catch wrong number of args \n + ( and ( pos ? ( count argv ) ) \n + ( pos ? ( count args ) ) \n + ( zero ? ( mod ( count args ) ( count argv ) ) ) ) ) \n + ` ( temp / do - template ~ argv ( is ~ expr ) ~ @ args ) \n + ( throw ( IllegalArgumentException . " The number of args doesn ' t match are ' s argv . " ) ) ) ) \n test \ clojure \ test _ clojure \ java _ interop . clj \n - ( are [ x y ] ( = x y ) \n - ( let [ p ( java . awt . Point . 1 2 ) ] \n - 1 ( . - x p ) \n - 2 ( . - y p ) \n - 1 ( . p - x ) \n - 2 ( . p - y ) \n - 1 ( . ( java . awt . Point . 1 2 ) - x ) \n - 2 ( . ( java . awt . Point . 1 2 ) - y ) ) ) \n + ( let [ p ( java . awt . Point . 1 2 ) ] \n + ( are [ x y ] ( = x y ) \n + 1 ( . - x p ) \n + 2 ( . - y p ) \n + 1 ( . p - x ) \n + 2 ( . p - y ) \n + 1 ( . ( java . awt . Point . 1 2 ) - x ) \n + 2 ( . ( java . awt . Point . 1 2 ) - y ) ) ) \n
src \ clj \ clojure \ core . clj \n - a first - class fn . " \n + a first - class fn . name may be type - hinted with the method receiver ' s \n + type in order to avoid reflective calls . " \n - ` ( fn [ target # ~ @ args ] \n - ( . target # ( ~ name ~ @ args ) ) ) ) \n + ( let [ t ( with - meta ( gensym " target " ) \n + ( meta name ) ) ] \n + ` ( fn [ ~ t ~ @ args ] \n + ( . ~ t ( ~ name ~ @ args ) ) ) ) ) \n
library \ src \ com \ slidingmenu \ lib \ CustomViewAbove . java \n - import android . graphics . Bitmap ; \n - import android . graphics . Canvas ; \n - import android . graphics . Color ; \n - import android . graphics . Paint ; \n + import android . graphics . * ; \n + / * * \n + * Pads our content window so that it fits within the system windows . \n + * @ param insets The insets by which we need to offset our view . \n + * @ return True since we handled the padding change . \n + * / \n + @ Override \n + protected boolean fitSystemWindows ( Rect insets ) { \n + \n + if ( mContent ! = null ) { \n + int leftPadding = mContent . getPaddingLeft ( ) + insets . left ; \n + int rightPadding = mContent . getPaddingRight ( ) + insets . right ; \n + int topPadding = mContent . getPaddingTop ( ) + insets . top ; \n + int bottomPadding = mContent . getPaddingBottom ( ) + insets . bottom ; \n + mContent . setPadding ( leftPadding , topPadding , rightPadding , bottomPadding ) ; \n + return true ; \n + } \n + \n + return super . fitSystemWindows ( insets ) ; \n + } \n + \n library \ src \ com \ slidingmenu \ lib \ SlidingMenu . java \n + private boolean mSlidingEnabled ; \n + \n - RelativeLayout . LayoutParams params = ( ( RelativeLayout . LayoutParams ) mViewBehind . getLayoutParams ( ) ) ; \n - int bottom = params . bottomMargin ; \n - int left = params . leftMargin ; \n - int right = params . rightMargin ; \n - params . setMargins ( left , insets . top , right , bottom ) ; \n + \n + int leftPadding = getPaddingLeft ( ) + insets . left ; \n + int rightPadding = getPaddingRight ( ) + insets . right ; \n + int topPadding = getPaddingTop ( ) + insets . top ; \n + int bottomPadding = getPaddingBottom ( ) + insets . bottom ; \n + this . setPadding ( leftPadding , topPadding , rightPadding , bottomPadding ) ; \n + \n
library \ src \ com \ slidingmenu \ lib \ SlidingMenu . java \n - if ( b ) { \n + boolean isTablet = getResources ( ) . getBoolean ( R . bool . isTablet ) ; \n + if ( b & & ! isTablet ) { \n
core \ src \ main \ java \ dagger \ internal \ codegen \ InjectProcessor . java \n - writeInjectAdapter ( injectedClass . type , injectedClass . constructor , injectedClass . fields ) ; \n + if ( injectedClass . constructor ! = null | | ! injectedClass . fields . isEmpty ( ) ) { \n + writeInjectAdapter ( injectedClass . type , injectedClass . constructor , injectedClass . fields ) ; \n + } \n
compiler \ src \ main \ java \ dagger \ internal \ codegen \ FullGraphProcessor . java \n - import javax . annotation . processing . SupportedSourceVersion ; \n - @ SupportedSourceVersion ( SourceVersion . RELEASE _ 6 ) \n + @ Override public SourceVersion getSupportedSourceVersion ( ) { \n + return SourceVersion . latestSupported ( ) ; \n + } \n + \n compiler \ src \ main \ java \ dagger \ internal \ codegen \ InjectProcessor . java \n - import javax . annotation . processing . SupportedSourceVersion ; \n - @ SupportedSourceVersion ( SourceVersion . RELEASE _ 6 ) \n + @ Override public SourceVersion getSupportedSourceVersion ( ) { \n + return SourceVersion . latestSupported ( ) ; \n + } \n + \n compiler \ src \ main \ java \ dagger \ internal \ codegen \ ProvidesProcessor . java \n - import javax . annotation . processing . SupportedSourceVersion ; \n - @ SupportedSourceVersion ( SourceVersion . RELEASE _ 6 ) \n + @ Override public SourceVersion getSupportedSourceVersion ( ) { \n + return SourceVersion . latestSupported ( ) ; \n + } \n + \n
extensions \ gdx - setup \ src \ com \ badlogic \ gdx \ setup \ data \ extensions . xml \n - < version > 1 . 1 . 0 < / version > \n - < compatibility > 1 . 9 . 3 < / compatibility > \n + < version > 1 . 2 . 0 < / version > \n + < compatibility > 1 . 9 . 5 < / compatibility > \n - < html > null < / html > \n + < html > \n + < dependency > de . tomgrill . gdxdialogs : gdx - dialogs - html < / dependency > \n + < dependency > de . tomgrill . gdxdialogs : gdx - dialogs - html : sources < / dependency > \n + < dependency > de . tomgrill . gdxdialogs : gdx - dialogs - core : sources < / dependency > \n + < / html > \n
extensions \ gdx - setup \ src \ com \ badlogic \ gdx \ setup \ data \ extensions . xml \n - < version > 1 . 2 . 2 < / version > \n - < compatibility > 1 . 9 . 3 < / compatibility > \n + < version > 1 . 3 . 0 < / version > \n + < compatibility > 1 . 9 . 6 < / compatibility > \n
src \ main \ java \ io \ vertx \ core \ eventbus \ impl \ OutboundDeliveryContext . java \n - if ( tracingPolicy = = null ) tracingPolicy = TracingPolicy . PROPAGATE ; \n + if ( tracingPolicy = = null ) { \n + tracingPolicy = TracingPolicy . PROPAGATE ; \n + } \n
src \ main \ java \ io \ vertx \ core \ eventbus \ impl \ MessageTagExtractor . java \n - return " peer . service " ; \n + return " message _ bus . destination " ; \n src \ test \ java \ io \ vertx \ core \ spi \ tracing \ EventBusTracerTestBase . java \n - if ( extractor . name ( obj , idx ) . equals ( " peer . service " ) ) { \n + if ( extractor . name ( obj , idx ) . equals ( " message _ bus . destination " ) ) { \n
pom . xml \n - < version > 1 . 14 . 0 - SNAPSHOT < / version > \n + < version > 1 . 15 . 0 - SNAPSHOT < / version > \n - < module > builder < / module > \n + < module > tls < / module > \n + < module > builder < / module > \n - < / project > \n + < / project > \n + \n + Contact GitHub API Training Shop Blog About \n + \n + © 2017 GitHub , Inc . Terms Privacy Security Status Help \n + \n
pom . xml \n - < module > builder < / module > \n + < module > builder < / module > \n - \n - Contact GitHub API Training Shop Blog About \n - \n - © 2017 GitHub , Inc . Terms Privacy Security Status Help \n - \n
services \ core \ java \ com \ android \ server \ locksettings \ OWNERS \n + xunchang @ google . com \n
services \ core \ java \ com \ android \ server \ locksettings \ RebootEscrowProviderServerBasedImpl . java \n - private static final long DEFAULT _ SERVER _ BLOB _ LIFETIME _ IN _ MILLIS = 600 _ 1000 ; \n + private static final long DEFAULT _ SERVER _ BLOB _ LIFETIME _ IN _ MILLIS = 600 _ 000 ; \n
src \ main \ java \ org \ junit \ runners \ BlockJUnit4ClassRunner . java \n - import java . util . ArrayList ; \n - List < TestRule > result = new ArrayList < TestRule > ( getTestClass ( ) . getAnnotatedMethodValues ( target , \n - Rule . class , TestRule . class ) ) ; \n + List < TestRule > result = getTestClass ( ) . getAnnotatedMethodValues ( target , \n + Rule . class , TestRule . class ) ; \n src \ main \ java \ org \ junit \ runners \ ParentRunner . java \n - result = new ArrayList < TestRule > ( result ) ; \n src \ main \ java \ org \ junit \ runners \ model \ TestClass . java \n - return Collections . unmodifiableList ( results ) ; \n + return results ; \n - return Collections . unmodifiableList ( results ) ; \n + return results ; \n
pom . xml \n - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > \n + ﻿ < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > \n - < javadocVersion > 1 . 5 < / javadocVersion > \n + < javadocVersion > $ { jdkVersion } < / javadocVersion > \n - < name > api _ 1 . 5 < / name > \n - < value > http : / / docs . oracle . com / javase / 1 . 5 . 0 / docs / api / index . html < / value > \n + < name > api _ $ { jdkVersion } < / name > \n + < value > http : / / docs . oracle . com / javase / $ { jdkVersion } . 0 / docs / api / < / value > \n - < excludePackageNames > junit . * , * . internal , * . internal . * < / excludePackageNames > \n + < excludePackageNames > junit . * , * . internal . * < / excludePackageNames > \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ prefs \ SnackbarPreferenceViewModel . kt \n + import androidx . lifecycle . viewModelScope \n + import kotlinx . coroutines . launch \n - stopSnackbarActionUseCase ( true ) \n + viewModelScope . launch { \n + stopSnackbarActionUseCase ( true ) \n + } \n shared \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ shared \ domain \ prefs \ StopSnackbarActionUseCase . kt \n - import com . google . samples . apps . iosched . shared . domain . UseCase \n - import javax . inject . Inject \n + import com . google . samples . apps . iosched . shared . domain . CoroutinesUseCase \n + import javax . inject . Inject \n - ) : UseCase < Boolean , Unit > ( dispatcher ) { \n + ) : CoroutinesUseCase < Boolean , Unit > ( dispatcher ) { \n
buildSrc \ src \ main \ java \ Versions . kt \n - const val KOTLIN = " 1 . 3 . 70 " \n - const val NAVIGATION = " 2 . 2 . 0 " \n + const val KOTLIN = " 1 . 3 . 72 " \n + const val NAVIGATION = " 2 . 2 . 2 " \n depconstraints \ build . gradle . kts \n - val appcompat = " 1 . 1 . 0 - beta01 " \n - val activity = " 1 . 0 . 0 - beta01 " \n + val appcompat = " 1 . 1 . 0 " \n + val activity = " 1 . 0 . 0 " \n - val drawerLayout = " 1 . 1 . 0 - beta01 " \n + val drawerLayout = " 1 . 1 . 0 - rc01 " \n - val fragment = " 1 . 1 . 0 - beta01 " \n + val fragment = " 1 . 2 . 4 " \n mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ ui \ map \ MapFragment . kt \n - parentFragment ! ! . requestPermissions ( \n + requireParentFragment ( ) . requestPermissions ( \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ execution \ QueryTracker . java \n - . orElseThrow ( NoSuchElementException : : new ) ; \n + . orElseThrow ( ( ) - > new NoSuchElementException ( queryId . toString ( ) ) ) ; \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ dispatcher \ LocalDispatchQuery . java \n + import static io . airlift . units . DataSize . Unit . BYTE ; \n + private static final Logger log = Logger . get ( LocalDispatchQuery . class ) ; \n + catch ( Throwable t ) { \n + / / this should never happen but be safe \n + stateMachine . transitionToFailed ( t ) ; \n + log . error ( t , " query submitter threw exception " ) ; \n + throw t ; \n + } \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ dispatcher \ LocalDispatchQuery . java \n + import com . facebook . presto . event . QueryMonitor ; \n + QueryMonitor queryMonitor , \n + if ( state = = FAILED ) { \n + queryMonitor . queryCompletedEvent ( getQueryInfo ( ) ) ; \n + } \n presto - main \ src \ main \ java \ com \ facebook \ presto \ dispatcher \ LocalDispatchQueryFactory . java \n + queryMonitor , \n
presto - docs \ src \ main \ sphinx \ release . rst \n + release / release - 0 . 235 . 1 \n new file \n presto - docs \ src \ main \ sphinx \ release \ release - 0 . 235 . 1 . rst \n + = = = = = = = = = = = = = = = \n + Release 0 . 235 . 1 \n + = = = = = = = = = = = = = = = \n + \n + General Changes \n + _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n + * Fix an issue where queries may potentially queue indefinitely . \n
modules \ transport - netty4 \ src \ yamlRestTest \ java \ org \ elasticsearch \ http \ netty4 \ Netty4ClientYamlTestSuiteIT . java \n + import java . io . IOException ; \n + \n + @ Override \n + public void test ( ) throws IOException { \n + assumeFalse ( " FIPS JVMs are configured to use the ' security4 ' transport rather than ' netty4 ' " , inFipsJvm ( ) ) ; \n + super . test ( ) ; \n + } \n
x - pack \ plugin \ security \ cli \ src \ test \ java \ org \ elasticsearch \ xpack \ security \ cli \ HttpCertificateCommandTests . java \n - final String crtName = keyPath . getFileName ( ) . toString ( ) . replace ( " . csr " , " . crt " ) ; \n + final String csrName = csrPath . getFileName ( ) . toString ( ) ; \n + final String crtName = csrName . substring ( 0 , csrName . length ( ) - 4 ) + " . crt " ; \n - assertThat ( esReadme , containsString ( csrPath . getFileName ( ) . toString ( ) ) ) ; \n + assertThat ( esReadme , containsString ( csrName ) ) ; \n - assertThat ( yml , not ( containsString ( csrPath . getFileName ( ) . toString ( ) ) ) ) ; \n + assertThat ( yml , not ( containsString ( csrName ) ) ) ; \n - Stream . of ( password , csrPath . getFileName ( ) . toString ( ) ) \n + Stream . of ( password , csrName ) \n
Libraries \ Linking \ Linking . js \n + import { type EventSubscription } from ' . . / vendor / emitter / EventEmitter ' ; \n - ) : void { \n - this . addListener ( eventType , listener ) ; \n - } \n - \n - / * * \n - * Remove a handler by passing the ` url ` event type and the handler . \n - * \n - * See https : / / reactnative . dev / docs / linking . html # removeeventlistener \n - * / \n - removeEventListener < K : $ Keys < LinkingEventDefinitions > > ( \n - eventType : K , \n - listener : ( . . . $ ElementType < LinkingEventDefinitions , K > ) = > mixed , \n - ) : void { \n - this . removeListener ( eventType , listener ) ; \n + ) : EventSubscription { \n + return this . addListener ( eventType , listener ) ; \n
Libraries \ EventEmitter \ RCTDeviceEventEmitter . js \n - function checkNativeEventModule ( eventType : ? string ) { \n - if ( eventType ) { \n - if ( eventType . lastIndexOf ( ' statusBar ' , 0 ) = = = 0 ) { \n - throw new Error ( \n - ' ` ' + \n - eventType + \n - ' ` event should be registered via the StatusBarIOS module ' , \n - ) ; \n - } \n - if ( eventType . lastIndexOf ( ' keyboard ' , 0 ) = = = 0 ) { \n - throw new Error ( \n - ' ` ' + \n - eventType + \n - ' ` event should be registered via the Keyboard module ' , \n - ) ; \n - } \n - if ( eventType = = = ' appStateDidChange ' | | eventType = = = ' memoryWarning ' ) { \n - throw new Error ( \n - ' ` ' + \n - eventType + \n - ' ` event should be registered via the AppState module ' , \n - ) ; \n - } \n - } \n - } \n - \n - addListener < K : $ Keys < EventDefinitions > > ( \n - eventType : K , \n - listener : ( . . . $ ElementType < EventDefinitions , K > ) = > mixed , \n - context : $ FlowFixMe , \n - ) : EmitterSubscription < EventDefinitions , K > { \n - if ( _ _ DEV _ _ ) { \n - checkNativeEventModule ( eventType ) ; \n - } \n - return super . addListener ( eventType , listener , context ) ; \n - } \n - \n - removeAllListeners < K : $ Keys < EventDefinitions > > ( eventType : ? K ) : void { \n - if ( _ _ DEV _ _ ) { \n - checkNativeEventModule ( eventType ) ; \n - } \n - super . removeAllListeners ( eventType ) ; \n - } \n - \n
okhttp - tests \ src \ test \ java \ okhttp3 \ URLConnectionTest . java \n + import java . io . File ; \n + import java . io . FileNotFoundException ; \n + import java . net . CookieHandler ; \n + import java . nio . charset . Charset ; \n + import java . util . concurrent . atomic . AtomicReference ; \n + import okhttp3 . internal . huc . OkHttpURLConnection ; \n + \n + @ Test public void disconnectDuringConnect _ cookieJar ( ) throws Exception { \n + final AtomicReference < HttpURLConnection > connectionHolder = new AtomicReference < > ( ) ; \n + class DisconnectingCookieJar implements CookieJar { \n + @ Override public void saveFromResponse ( HttpUrl url , List < Cookie > cookies ) { } \n + @ Override \n + public List < Cookie > loadForRequest ( HttpUrl url ) { \n + connectionHolder . get ( ) . disconnect ( ) ; \n + return Collections . emptyList ( ) ; \n + } \n + } \n + OkHttpClient client = new okhttp3 . OkHttpClient . Builder ( ) \n + . cookieJar ( new DisconnectingCookieJar ( ) ) \n + . build ( ) ; \n + \n + URL url = server . url ( " path that should never be accessed " ) . url ( ) ; \n + HttpURLConnection connection = new OkHttpURLConnection ( url , client ) ; \n + connectionHolder . set ( connection ) ; \n + try { \n + connection . getInputStream ( ) ; \n + fail ( " Connection should not be established " ) ; \n + } catch ( IOException expected ) { \n + assertEquals ( " Canceled " , expected . getMessage ( ) ) ; \n + } finally { \n + connection . disconnect ( ) ; \n + } \n + } \n + \n
okhttp - tests \ src \ test \ java \ okhttp3 \ URLConnectionTest . java \n + @ Test public void nullSSLSocketFactory _ throws ( ) throws Exception { \n + server . useHttps ( sslClient . socketFactory , false / * tunnelProxy * / ) ; \n + HttpsURLConnection connection = ( HttpsURLConnection ) server . url ( " / " ) . url ( ) . openConnection ( ) ; \n + try { \n + connection . setSSLSocketFactory ( null ) ; \n + fail ( ) ; \n + } catch ( IllegalArgumentException expected ) { \n + } \n + } \n + \n okhttp - urlconnection \ src \ main \ java \ okhttp3 \ internal \ huc \ OkHttpsURLConnection . java \n + if ( sslSocketFactory = = null ) { \n + throw new IllegalArgumentException ( " null sslSocketFactory " ) ; \n + } \n
new file \n core \ java \ android \ service \ dataloader \ OWNERS \n + include / core / java / android / os / incremental / OWNERS \n
new file \n core \ java \ com \ android \ server \ OWNERS \n + per - file SystemConfig . java = toddke @ google . com \n
gdx \ src \ com \ badlogic \ gdx \ Version . java \n - public static final String VERSION = " 1 . 9 . 10 " ; \n + public static final String VERSION = " 1 . 9 . 11 " ; \n
extensions \ gdx - setup \ src \ com \ badlogic \ gdx \ setup \ DependencyBank . java \n - static String libgdxVersion = " 1 . 9 . 10 - SNAPSHOT " ; \n + static String libgdxVersion = " 1 . 9 . 10 " ; \n - static String libgdxNightlyVersion = " 1 . 9 . 10 - SNAPSHOT " ; \n + static String libgdxNightlyVersion = " 1 . 9 . 11 - SNAPSHOT " ; \n
extensions \ gdx - tools \ src \ com \ badlogic \ gdx \ tools \ hiero \ Hiero . java \n - import javax . swing . SpinnerModel ; \n + import com . badlogic . gdx . utils . GdxRuntimeException ; \n - updateFont ( ) ; \n + try { \n + updateFont ( ) ; \n + } catch ( GdxRuntimeException ex ) { \n + prefs . remove ( " system . font " ) ; \n + fontList . setSelectedValue ( " Arial " , true ) ; \n + updateFont ( ) ; \n + sampleTextPane . setText ( " Selected font does not have the necessary ' x ' character ; falling back to Arial . \ n " + sampleTextPane . getText ( ) ) ; \n + } \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ Mesh . java \n - ( ( Buffer ) getVerticesBuffer ( ) ) . position ( srcOffset ) ; \n + ( ( Buffer ) getIndicesBuffer ( ) ) . position ( srcOffset ) ; \n - ( ( Buffer ) getVerticesBuffer ( ) ) . position ( pos ) ; \n + ( ( Buffer ) getIndicesBuffer ( ) ) . position ( pos ) ; \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g2d \ SpriteCache . java \n + if ( drawing ) throw new IllegalStateException ( " end must be called before beginCache " ) ; \n + if ( drawing ) throw new IllegalStateException ( " end must be called before beginCache " ) ; \n + if ( currentCache ! = null ) throw new IllegalStateException ( " endCache must be called before begin " ) ; \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ Mesh . java \n - result . setIndices ( indices ) ; \n + if ( indices ! = null ) result . setIndices ( indices ) ; \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ components \ Legend . java \n + protected Paint . FontMetrics fontMetricsForCalculateDimensions = new Paint . FontMetrics ( ) ; \n + ArrayList < FSize > calculatedLineSizesForCalculateDimensions = new ArrayList < > ( ) ; \n - ArrayList < FSize > calculatedLineSizesForCalculateDimensions = new ArrayList < > ( ) ; \n - float labelLineHeight = Utils . getLineHeight ( labelpaint ) ; \n + float labelLineHeight = Utils . getLineHeight ( labelpaint , fontMetricsForCalculateDimensions ) ; \n - float labelLineHeight = Utils . getLineHeight ( labelpaint ) ; \n - float labelLineSpacing = Utils . getLineSpacing ( labelpaint ) + mYEntrySpace ; \n + float labelLineHeight = Utils . getLineHeight ( labelpaint , fontMetricsForCalculateDimensions ) ; \n + float labelLineSpacing = Utils . getLineSpacing ( labelpaint , fontMetricsForCalculateDimensions ) + mYEntrySpace ; \n MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ renderer \ LegendRenderer . java \n + protected Paint . FontMetrics fontMetricsForRenderLegent = new Paint . FontMetrics ( ) ; \n - float labelLineHeight = Utils . getLineHeight ( mLegendLabelPaint ) ; \n - float labelLineSpacing = Utils . getLineSpacing ( mLegendLabelPaint ) + mLegend . getYEntrySpace ( ) ; \n + float labelLineHeight = Utils . getLineHeight ( mLegendLabelPaint , fontMetricsForRenderLegent ) ; \n + float labelLineSpacing = Utils . getLineSpacing ( mLegendLabelPaint , fontMetricsForRenderLegent ) + mLegend . getYEntrySpace ( ) ; \n MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ utils \ Utils . java \n - Paint . FontMetrics metrics = paint . getFontMetrics ( ) ; \n - return metrics . descent - metrics . ascent ; \n + Paint . FontMetrics metrics = new Paint . FontMetrics ( ) ; \n + return getLineHeight ( paint , metrics ) ; \n + } \n + \n + public static float getLineHeight ( Paint paint , Paint . FontMetrics fontMetrics ) { \n + paint . getFontMetrics ( fontMetrics ) ; \n + return fontMetrics . descent - fontMetrics . ascent ; \n - Paint . FontMetrics metrics = paint . getFontMetrics ( ) ; \n - return metrics . ascent - metrics . top + metrics . bottom ; \n + Paint . FontMetrics metrics = new Paint . FontMetrics ( ) ; \n + return getLineSpacing ( paint , metrics ) ; \n + } \n + \n + public static float getLineSpacing ( Paint paint , Paint . FontMetrics fontMetrics ) { \n + paint . getFontMetrics ( fontMetrics ) ; \n + return fontMetrics . ascent - fontMetrics . top + fontMetrics . bottom ; \n
MPChartLib \ src \ main \ java \ com \ github \ mikephil \ charting \ renderer \ XAxisRenderer . java \n - if ( mDrawLabelsBuffer . length ! = mAxis . mEntryCount * 2 ) { \n + if ( mDrawLabelsBuffer . length < mAxis . mEntryCount * 2 ) { \n - for ( int i = 0 ; i < positions . length ; i + = 2 ) { \n + for ( int i = 0 ; i < positions . length & & i < mXAxis . mEntries . length / 2 & & i < mXAxis . mCenteredEntries . length / 2 ; i + = 2 ) { \n - for ( int i = 0 ; i < positions . length ; i + = 2 ) { \n + for ( int i = 0 ; i < positions . length & & i < mXAxis . mEntries . length / 2 & & i < mXAxis . mCenteredEntries . length / 2 ; i + = 2 ) { \n
lib \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ signin \ RegistrationStatusService . java \n + import static com . google . samples . apps . iosched . util . LogUtils . LOGD ; \n + import static com . google . samples . apps . iosched . util . LogUtils . LOGE ; \n + import static com . google . samples . apps . iosched . util . LogUtils . makeLogTag ; \n + \n + import com . google . android . gms . tasks . OnCompleteListener ; \n + import com . google . android . gms . tasks . Task ; \n + import com . google . firebase . auth . GetTokenResult ; \n + import java . util . concurrent . CountDownLatch ; \n - import static com . google . samples . apps . iosched . util . LogUtils . LOGD ; \n - import static com . google . samples . apps . iosched . util . LogUtils . LOGE ; \n - import static com . google . samples . apps . iosched . util . LogUtils . makeLogTag ; \n - \n - } catch ( IOException e ) { \n + } catch ( Exception e ) { \n - private void updateRegStatus ( ) throws IOException { \n + private void updateRegStatus ( ) throws Exception { \n - private String getFirebaseToken ( ) throws IOException { \n + private String getFirebaseToken ( ) throws Exception { \n - String fbToken = fbUser . getToken ( false ) . getResult ( ) . getToken ( ) ; \n - if ( fbToken = = null ) { \n - throw new IOException ( " Received null Firebase token " ) ; \n - } \n + / / Get Firebase token and wait for operation to complete \n + final CountDownLatch latch = new CountDownLatch ( 1 ) ; \n + Task < GetTokenResult > task = fbUser . getToken ( false ) ; \n + task . addOnCompleteListener ( new OnCompleteListener < GetTokenResult > ( ) { \n + @ Override \n + public void onComplete ( @ NonNull Task < GetTokenResult > task ) { \n + latch . countDown ( ) ; \n + } \n + } ) ; \n - return fbToken ; \n + latch . await ( ) ; \n + \n + if ( task . isSuccessful ( ) ) { \n + String fbToken = task . getResult ( ) . getToken ( ) ; \n + if ( fbToken = = null ) { \n + throw new IOException ( " Received null Firebase token " ) ; \n + } \n + return fbToken ; \n + } else { \n + throw task . getException ( ) ; \n + } \n
gradle . properties \n - appVersionCode = 509 \n - appVersionName = 5 . 0 . 4 \n + appVersionCode = 510 \n + appVersionName = 5 . 1 . 0 \n
ReactCommon \ react \ renderer \ textlayoutmanager \ platform \ android \ react \ renderer \ textlayoutmanager \ TextLayoutManager . cpp \n + # include < limits > \n + \n - return measureCache _ . get ( \n + auto measurement = measureCache _ . get ( \n + \n + measurement . size = layoutConstraints . clamp ( measurement . size ) ; \n + return measurement ; \n + layoutConstraints . maximumSize . height = std : : numeric _ limits < Float > : : infinity ( ) ; \n + \n
ReactCommon \ react \ renderer \ textlayoutmanager \ TextMeasureCache . h \n - rhs . layoutConstraints . maximumSize . width & & \n - lhs . layoutConstraints . maximumSize . height = = \n - rhs . layoutConstraints . maximumSize . height ; \n + rhs . layoutConstraints . maximumSize . width ; \n
x - pack \ plugin \ transform \ qa \ multi - node - tests \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ transform \ integration \ continuous \ HistogramGroupByIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67887 " ) \n
x - pack \ plugin \ ml \ qa \ native - multi - node - tests \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ ml \ integration \ RunDataFrameAnalyticsIT . java \n + @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 67889 " ) \n
gradle . properties \n + kotlin . native . home = kotlin - native / dist \n
new file \n . idea \ artifacts \ kotlinx _ cli _ jvm _ 1 _ 5 _ 255 _ SNAPSHOT . xml \n + < component name = " ArtifactManager " > \n + < artifact type = " jar " name = " kotlinx . cli - jvm - 1 . 5 . 255 - SNAPSHOT " > \n + < output - path > $ PROJECT _ DIR $ / kotlin - native / endorsedLibraries / kotlinx . cli / build / libs < / output - path > \n + < root id = " archive " name = " kotlinx . cli - jvm - 1 . 5 . 255 - SNAPSHOT . jar " > \n + < element id = " module - output " name = " kotlin . kotlin - native . endorsedLibraries . kotlinx . cli . jvmMain " / > \n + < / root > \n + < / artifact > \n + < / component > \n
. travis . yml \n - tools \n - - build - tools - 25 . 0 . 0 \n + - build - tools - 25 . 0 . 2 \n - android - 25 \n
. travis . yml \n - tools \n - - build - tools - 25 . 0 . 2 \n + - build - tools - 25 . 0 . 3 \n - android - 25 \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveClientConfig . java \n + private boolean parquetDereferencePushdownEnabled ; \n + \n + @ Config ( " hive . enable - parquet - dereference - pushdown " ) \n + @ ConfigDescription ( " enable parquet dereference pushdown " ) \n + public HiveClientConfig setParquetDereferencePushdownEnabled ( boolean parquetDereferencePushdownEnabled ) \n + { \n + this . parquetDereferencePushdownEnabled = parquetDereferencePushdownEnabled ; \n + return this ; \n + } \n + \n + public boolean isParquetDereferencePushdownEnabled ( ) \n + { \n + return this . parquetDereferencePushdownEnabled ; \n + } \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveSessionProperties . java \n + public static final String PARQUET _ DEREFERENCE _ PUSHDOWN _ ENABLED = " parquet _ dereference _ pushdown _ enabled " ; \n - BucketFunctionType : : toString ) ) ; \n + BucketFunctionType : : toString ) , \n + booleanProperty ( \n + PARQUET _ DEREFERENCE _ PUSHDOWN _ ENABLED , \n + " Is dereference pushdown expression pushdown into Parquet reader enabled ? " , \n + hiveClientConfig . isParquetDereferencePushdownEnabled ( ) , \n + false ) ) ; \n + \n + public static boolean isParquetDereferencePushdownEnabled ( ConnectorSession session ) \n + { \n + return session . getProperty ( PARQUET _ DEREFERENCE _ PUSHDOWN _ ENABLED , Boolean . class ) ; \n + } \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveClientConfig . java \n - . setBucketFunctionTypeForExchange ( HIVE _ COMPATIBLE ) ) ; \n + . setBucketFunctionTypeForExchange ( HIVE _ COMPATIBLE ) \n + . setParquetDereferencePushdownEnabled ( false ) ) ; \n + . put ( " hive . enable - parquet - dereference - pushdown " , " true " ) \n - . setBucketFunctionTypeForExchange ( PRESTO _ NATIVE ) ; \n + . setBucketFunctionTypeForExchange ( PRESTO _ NATIVE ) \n + . setParquetDereferencePushdownEnabled ( true ) ; \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ util \ InternalHiveSplitFactory . java \n - length , \n + fileSize , \n
new file \n src \ test \ resources \ tls \ openssl - host5 . cnf \n + [ ca ] \n + default _ ca = CA _ default \n + \n + [ CA _ default ] \n + copy _ extensions = copy \n + \n + [ req ] \n + distinguished _ name = req _ dn \n + x509 _ extensions = req _ ext _ host5 \n + \n + [ req _ dn ] \n + CN = Common Name \n + \n + [ req _ ext _ host5 ] \n + subjectAltName = @ alt _ names _ host5 \n + \n + [ alt _ names _ host5 ] \n + DNS . 1 = * . host5 . com \n src \ test \ resources \ tls \ ssl . txt \n - # note this can only by done using the KeyStore Explorer GUI ( because of https : / / bugs . openjdk . java . net / browse / JDK - 8007706 ) \n - keytool - genkey - alias test - host5 - keyalg RSA - keystore sni - keystore . jks - keysize 2048 - validity 1095 - dname CN = " host5 . com " - ext san = dns : * . host5 . com - keypass wibble - storepass wibble \n + # note : creating wildcard san certificate with openssl due to bug in keytool ( https : / / bugs . openjdk . java . net / browse / JDK - 8007706 ) \n + # keytool - genkey - alias test - host5 - keyalg RSA - keystore sni - keystore . jks - keysize 2048 - validity 1095 - dname CN = " host5 . com " - ext san = dns : * . host5 . com - keypass wibble - storepass wibble \n + openssl req - x509 - config openssl - host5 . cnf - out host5 . pem - new - newkey rsa : 2048 - subj " / CN = host5 . com " - days + 1095 - keyout host5 - key . pem - passout pass : wibble \n + openssl pkcs12 - export - name test - host5 - in host5 . pem - inkey host5 - key . pem - out host5 . p12 - passin pass : wibble - passout pass : wibble \n + keytool - importkeystore - destkeystore sni - keystore . jks - deststorepass wibble - srckeystore host5 . p12 - srcstoretype pkcs12 - srcstorepass wibble - alias test - host5 \n
src \ test \ resources \ tls \ ssl . txt \n - # PKCS # 12 trust store containing the root CA \n + # PKCS # 12 trust store containing the root CA \n - 1 ) Convert the JKS trust - store containg the root CA certificate to the PKCS # 12 format \n + 1 ) Convert the JKS trust - store contain the root CA certificate to the PKCS # 12 format \n
presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveMetadata . java \n - return toCompletableFuture ( stagingFileCommitter . commitFiles ( session , handle . getSchemaName ( ) , handle . getTableName ( ) , getPartitionUpdates ( fragments ) ) ) ; \n + return toCompletableFuture ( stagingFileCommitter . commitFiles ( \n + session , \n + handle . getSchemaName ( ) , \n + handle . getTableName ( ) , \n + handle . getLocationHandle ( ) . getTargetPath ( ) . toString ( ) , \n + true , \n + getPartitionUpdates ( fragments ) ) ) ; \n - return toCompletableFuture ( stagingFileCommitter . commitFiles ( session , handle . getSchemaName ( ) , handle . getTableName ( ) , getPartitionUpdates ( fragments ) ) ) ; \n + return toCompletableFuture ( stagingFileCommitter . commitFiles ( \n + session , \n + handle . getSchemaName ( ) , \n + handle . getTableName ( ) , \n + handle . getLocationHandle ( ) . getTargetPath ( ) . toString ( ) , \n + false , \n + getPartitionUpdates ( fragments ) ) ) ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveStagingFileCommitter . java \n - public ListenableFuture < Void > commitFiles ( ConnectorSession session , String schemaName , String tableName , List < PartitionUpdate > partitionUpdates ) \n + public ListenableFuture < Void > commitFiles ( \n + ConnectorSession session , \n + String schemaName , \n + String tableName , \n + String tablePath , \n + boolean isCreateTable , \n + List < PartitionUpdate > partitionUpdates ) \n - HdfsContext context = new HdfsContext ( session , schemaName , tableName ) ; \n + HdfsContext context = new HdfsContext ( session , schemaName , tableName , tablePath , isCreateTable ) ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ StagingFileCommitter . java \n - ListenableFuture < Void > commitFiles ( ConnectorSession session , String schemaName , String tableName , List < PartitionUpdate > partitionUpdates ) ; \n + ListenableFuture < Void > commitFiles ( \n + ConnectorSession session , \n + String schemaName , \n + String tableName , \n + String tablePath , \n + boolean isCreateTable , \n + List < PartitionUpdate > partitionUpdates ) ; \n
presto - hive - metastore \ src \ main \ java \ com \ facebook \ presto \ hive \ metastore \ SemiTransactionalHiveMetastore . java \n - public synchronized void dropTable ( ConnectorSession session , String databaseName , String tableName ) \n + public synchronized void dropTable ( HdfsContext context , String databaseName , String tableName ) \n - HdfsContext context = new HdfsContext ( session , databaseName , tableName ) ; \n presto - hive \ src \ main \ java \ com \ facebook \ presto \ hive \ HiveMetadata . java \n - metastore . dropTable ( session , handle . getSchemaName ( ) , handle . getTableName ( ) ) ; \n + metastore . dropTable ( \n + new HdfsContext ( session , handle . getSchemaName ( ) , handle . getTableName ( ) , target . get ( ) . getStorage ( ) . getLocation ( ) , false ) , \n + handle . getSchemaName ( ) , \n + handle . getTableName ( ) ) ; \n - metastore . dropTable ( session , viewName . getSchemaName ( ) , viewName . getTableName ( ) ) ; \n + metastore . dropTable ( \n + new HdfsContext ( session , viewName . getSchemaName ( ) ) , \n + viewName . getSchemaName ( ) , \n + viewName . getTableName ( ) ) ; \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ AbstractTestHiveFileSystem . java \n - transaction . getMetastore ( ) . dropTable ( newSession ( ) , table . getSchemaName ( ) , table . getTableName ( ) ) ; \n + transaction . getMetastore ( ) . dropTable ( new HdfsContext ( newSession ( ) ) , table . getSchemaName ( ) , table . getTableName ( ) ) ; \n presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestingSemiTransactionalHiveMetastore . java \n - public synchronized void dropTable ( ConnectorSession session , String databaseName , String tableName ) \n + public synchronized void dropTable ( HdfsContext context , String databaseName , String tableName ) \n
core \ java \ android \ app \ ActivityThread . java \n + import dalvik . system . AppSpecializationHooks ; \n + / / Let libcore handle any compat changes after installing the list of compat changes . \n + AppSpecializationHooks . handleCompatChangesBeforeBindingApplication ( ) ; \n + \n
services \ core \ java \ com \ android \ server \ hdmi \ HdmiCecController . java \n + import android . icu . util . IllformedLocaleException ; \n + import android . icu . util . ULocale ; \n + import com . android . internal . annotations . VisibleForTesting ; \n - import sun . util . locale . LanguageTag ; \n - \n - if ( ! LanguageTag . isLanguage ( language ) ) { \n + if ( ! isLanguage ( language ) ) { \n + / * * \n + * Returns true if the language code is well - formed . \n + * / \n + @ VisibleForTesting static boolean isLanguage ( String language ) { \n + / / Handle null and empty string because because ULocale . Builder # setLanguage accepts them . \n + if ( language = = null | | language . isEmpty ( ) ) { \n + return false ; \n + } \n + \n + ULocale . Builder builder = new ULocale . Builder ( ) ; \n + try { \n + builder . setLanguage ( language ) ; \n + return true ; \n + } catch ( IllformedLocaleException e ) { \n + return false ; \n + } \n + } \n + \n services \ tests \ servicestests \ src \ com \ android \ server \ hdmi \ HdmiCecControllerTest . java \n + import static junit . framework . Assert . assertFalse ; \n + import static junit . framework . Assert . assertTrue ; \n + \n + @ Test \n + public void testIsLanguage ( ) { \n + assertTrue ( HdmiCecController . isLanguage ( " en " ) ) ; \n + assertTrue ( HdmiCecController . isLanguage ( " eng " ) ) ; \n + assertTrue ( HdmiCecController . isLanguage ( " ger " ) ) ; \n + assertTrue ( HdmiCecController . isLanguage ( " zh " ) ) ; \n + assertTrue ( HdmiCecController . isLanguage ( " zhi " ) ) ; \n + assertTrue ( HdmiCecController . isLanguage ( " zho " ) ) ; \n + \n + assertFalse ( HdmiCecController . isLanguage ( null ) ) ; \n + assertFalse ( HdmiCecController . isLanguage ( " " ) ) ; \n + assertFalse ( HdmiCecController . isLanguage ( " e " ) ) ; \n + assertFalse ( HdmiCecController . isLanguage ( " 一 " ) ) ; / / language code must be ASCII \n + } \n
compiler \ resolution . common . jvm \ src \ org \ jetbrains \ kotlin \ load \ java \ structure \ impl \ classFiles \ Annotations . kt \n - translatePath ( typePath ) . fold ( baseType ) { targetType , ( typePathKind , typeArgumentIndex ) - > \n + translatePath ( typePath ) . fold < Pair < Int , Int > , JavaType ? > ( baseType ) { targetType , ( typePathKind , typeArgumentIndex ) - > \n - / / TODO : think about processing annotated wildcards themselves \n + / / below , returned ` null ` means annotated implicit lower and upper wildcard ' s bound , \n + / / it isn ' t supported yet to load type use annotations ( null is further ignored ) \n + / / TODO : consider taking into account such annotations through returning wildcard itself as a target type ( KT - 40498 ) \n - ? : throw IllegalArgumentException ( " Wildcard mast have a bound for annotation of WILDCARD _ BOUND position " ) \n
compiler \ fir \ analysis - tests \ tests - gen \ org \ jetbrains \ kotlin \ test \ runners \ FirOldFrontendDiagnosticsTestGenerated . java \n + @ Test \n + @ TestMetadata ( " errorsOnImplicitInvokeInSimpleCall . kt " ) \n + public void testErrorsOnImplicitInvokeInSimpleCall ( ) throws Exception { \n + runTest ( " compiler / testData / diagnostics / tests / inference / errorsOnImplicitInvokeInSimpleCall . kt " ) ; \n + } \n + \n compiler \ frontend \ src \ org \ jetbrains \ kotlin \ resolve \ calls \ DiagnosticReporterByTrackingStrategy . kt \n - is PSIKotlinCallForInvoke - > ( atom . psiCall as ? CallTransformer . CallForImplicitInvoke ) ? . outerCall ? . calleeExpression \n - is PSIKotlinCall - > atom . psiCall . calleeExpression \n + is PSIKotlinCall - > { \n + val psiCall = atom . psiCall \n + if ( psiCall is CallTransformer . CallForImplicitInvoke ) { \n + psiCall . outerCall . calleeExpression \n + } else { \n + psiCall . calleeExpression \n + } \n + } \n new file \n compiler \ testData \ diagnostics \ tests \ inference \ errorsOnImplicitInvokeInSimpleCall . fir . kt \n + inline operator fun < reified T > Int . invoke ( ) = this \n + \n + val a2 = 1 ( ) \n + val a3 = 1 . invoke ( ) \n new file \n compiler \ testData \ diagnostics \ tests \ inference \ errorsOnImplicitInvokeInSimpleCall . kt \n + inline operator fun < reified T > Int . invoke ( ) = this \n + \n + val a2 = < ! NEW _ INFERENCE _ NO _ INFORMATION _ FOR _ PARAMETER ! > 1 < ! > ( ) \n + val a3 = 1 . < ! NEW _ INFERENCE _ NO _ INFORMATION _ FOR _ PARAMETER ! > invoke < ! > ( ) \n new file \n compiler \ testData \ diagnostics \ tests \ inference \ errorsOnImplicitInvokeInSimpleCall . txt \n + package \n + \n + public val a2 : kotlin . Int \n + public val a3 : kotlin . Int \n + public inline operator fun < / * 0 * / reified T > kotlin . Int . invoke ( ) : kotlin . Int \n compiler \ tests - common - new \ tests - gen \ org \ jetbrains \ kotlin \ test \ runners \ DiagnosticTestGenerated . java \n + @ Test \n + @ TestMetadata ( " errorsOnImplicitInvokeInSimpleCall . kt " ) \n + public void testErrorsOnImplicitInvokeInSimpleCall ( ) throws Exception { \n + runTest ( " compiler / testData / diagnostics / tests / inference / errorsOnImplicitInvokeInSimpleCall . kt " ) ; \n + } \n + \n
build . gradle \n - classpath ' com . github . dcendents : android - maven - plugin : 1 . 2 ' \n + classpath ' com . github . dcendents : android - maven - gradle - plugin : 1 . 3 ' \n gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 3 - bin . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 4 - bin . zip \n library \ build . gradle \n - apply plugin : ' android - maven ' \n + apply plugin : ' com . github . dcendents . android - maven ' \n - compile ' com . google . android : support - v4 : r7 ' \n - \n + compile ' com . android . support : support - v4 : 22 . 1 . 1 ' \n
gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 4 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 5 - all . zip \n
compiler \ light - classes \ src \ org \ jetbrains \ kotlin \ asJava \ LightClassUtil . kt \n + fun getLightClassMethodsByName ( function : KtFunction , name : String ) : Sequence < KtLightMethod > { \n + return getPsiMethodWrappers ( function , name ) \n + } \n + \n - private fun getPsiMethodWrappers ( declaration : KtDeclaration ) : Sequence < KtLightMethod > = \n + private fun getPsiMethodWrappers ( declaration : KtDeclaration , name : String ? = null ) : Sequence < KtLightMethod > = \n + . filter { name = = null | | name = = it . name } \n idea \ idea - analysis \ src \ org \ jetbrains \ kotlin \ idea \ caches \ KotlinShortNamesCache . kt \n - val methods = LightClassUtil . getLightClassMethods ( ktNamedFunction ) . filter { it . name = = name } \n + val methods = LightClassUtil . getLightClassMethodsByName ( ktNamedFunction , name ) \n
compiler \ resolution . common . jvm \ src \ org \ jetbrains \ kotlin \ resolve \ jvm \ KotlinJavaPsiFacade . java \n + import com . intellij . openapi . Disposable ; \n - public class KotlinJavaPsiFacade { \n + public class KotlinJavaPsiFacade implements Disposable { \n - LowMemoryWatcher . register ( this : : clearPackageCaches , project ) ; \n + LowMemoryWatcher . register ( this : : clearPackageCaches , this ) ; \n - MessageBusConnection connection = project . getMessageBus ( ) . connect ( ) ; \n + MessageBusConnection connection = project . getMessageBus ( ) . connect ( this ) ; \n + @ Override \n + public void dispose ( ) { \n + clearPackageCaches ( ) ; \n + } \n + \n
js \ js . tests \ build . gradle . kts \n - Platform [ 193 ] . orLower { \n - testCompileOnly ( intellijDep ( ) ) { includeJars ( " openapi " , rootProject = rootProject ) } \n - } \n - if ( Platform [ 193 ] . orLower ( ) ) { \n - testRuntime ( intellijDep ( ) ) { includeJars ( " picocontainer " , rootProject = rootProject ) } \n - } \n - \n - val currentOs = OperatingSystem . current ( ) \n - \n
build . gradle . kts \n - outputs . doNotCacheIf ( " https : / / youtrack . jetbrains . com / issue / KT - 37089 " ) { true } \n + outputs . doNotCacheIf ( " https : / / youtrack . jetbrains . com / issue / KTI - 112 " ) { ! isTestDistributionEnabled ( ) } \n buildSrc \ src \ main \ kotlin \ testDistribution . kt \n + \n + fun Test . isTestDistributionEnabled ( ) : Boolean = \n + extensions . findByType ( TestDistributionExtension : : class . java ) ? . enabled ? . orNull ? : false \n
presto - verifier \ src \ main \ java \ com \ facebook \ presto \ verifier \ prestoaction \ JdbcPrestoAction . java \n + private final boolean removeMemoryRelatedSessionProperties ; \n + this . removeMemoryRelatedSessionProperties = prestoActionConfig . isRemoveMemoryRelatedSessionProperties ( ) ; \n - Map < String , String > sessionProperties = mangleSessionProperties ( queryConfiguration . getSessionProperties ( ) , queryStage , getTimeout ( queryStage ) ) ; \n + Map < String , String > sessionProperties = mangleSessionProperties ( \n + queryConfiguration . getSessionProperties ( ) , \n + queryStage , \n + getTimeout ( queryStage ) , \n + removeMemoryRelatedSessionProperties ) ; \n presto - verifier \ src \ main \ java \ com \ facebook \ presto \ verifier \ prestoaction \ PrestoActionConfig . java \n + private boolean removeMemoryRelatedSessionProperties = true ; \n + \n + public boolean isRemoveMemoryRelatedSessionProperties ( ) \n + { \n + return removeMemoryRelatedSessionProperties ; \n + } \n + \n + @ Config ( " remove - memory - related - session - properties " ) \n + public PrestoActionConfig setRemoveMemoryRelatedSessionProperties ( boolean removeMemoryRelatedSessionProperties ) \n + { \n + this . removeMemoryRelatedSessionProperties = removeMemoryRelatedSessionProperties ; \n + return this ; \n + } \n presto - verifier \ src \ main \ java \ com \ facebook \ presto \ verifier \ prestoaction \ QueryActionUtil . java \n - Duration queryTimeout ) \n + Duration queryTimeout , \n + boolean removeMemoryRelatedSessionProperty ) \n - / / Allow verifier clusters to provide their own memory limits to reduce noise from \n - / / CBO making different decisions based on cluster size \n - sessionProperties . remove ( QUERY _ MAX _ BROADCAST _ MEMORY ) ; \n - sessionProperties . remove ( QUERY _ MAX _ TOTAL _ MEMORY _ PER _ NODE ) ; \n - sessionProperties . remove ( QUERY _ MAX _ TOTAL _ MEMORY ) ; \n + if ( removeMemoryRelatedSessionProperty ) { \n + / / Allow verifier clusters to provide their own memory limits to reduce noise from \n + / / CBO making different decisions based on cluster size \n + sessionProperties . remove ( QUERY _ MAX _ BROADCAST _ MEMORY ) ; \n + sessionProperties . remove ( QUERY _ MAX _ TOTAL _ MEMORY _ PER _ NODE ) ; \n + sessionProperties . remove ( QUERY _ MAX _ TOTAL _ MEMORY ) ; \n + } \n presto - verifier \ src \ test \ java \ com \ facebook \ presto \ verifier \ prestoaction \ TestPrestoActionConfig . java \n + . setRemoveMemoryRelatedSessionProperties ( true ) \n + . put ( " remove - memory - related - session - properties " , " false " ) \n - . setApplicationName ( " verifier " ) ; \n + . setApplicationName ( " verifier " ) \n + . setRemoveMemoryRelatedSessionProperties ( false ) ; \n
presto - verifier \ src \ main \ java \ com \ facebook \ presto \ verifier \ prestoaction \ QueryActionUtil . java \n + import static com . facebook . presto . SystemSessionProperties . QUERY _ MAX _ MEMORY ; \n + import static com . facebook . presto . SystemSessionProperties . QUERY _ MAX _ MEMORY _ PER _ NODE ; \n + \n + sessionProperties . remove ( QUERY _ MAX _ MEMORY _ PER _ NODE ) ; \n + \n + sessionProperties . remove ( QUERY _ MAX _ MEMORY ) ; \n
android \ pom . xml \n - < version > 3 . 8 . 0 < / version > \n + < version > 3 . 8 . 1 < / version > \n pom . xml \n - < version > 3 . 8 . 0 < / version > \n + < version > 3 . 8 . 1 < / version > \n
android \ pom . xml \n - < maven - source - plugin . version > 3 . 1 . 0 < / maven - source - plugin . version > \n + < maven - source - plugin . version > 3 . 2 . 0 < / maven - source - plugin . version > \n - < version > 3 . 0 . 2 < / version > \n + < version > 3 . 2 . 0 < / version > \n pom . xml \n - < maven - source - plugin . version > 3 . 1 . 0 < / maven - source - plugin . version > \n + < maven - source - plugin . version > 3 . 2 . 0 < / maven - source - plugin . version > \n - < version > 3 . 0 . 2 < / version > \n + < version > 3 . 2 . 0 < / version > \n
AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ test \ java \ org \ androidannotations \ rest \ spring \ ClientWithWrongFields . java \n + import org . androidannotations . rest . spring . annotations . Part ; \n + \n + @ Post ( " / fieldAndPartOnSameMethod " ) \n + void fieldAndPartOnSameMethod ( @ Field String field , @ Part String part ) ; \n AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ test \ java \ org \ androidannotations \ rest \ spring \ RestTest . java \n + assertCompilationErrorOn ( ClientWithWrongFields . class , " @ Post ( \ " / fieldAndPartOnSameMethod \ " ) " , result ) ; \n - assertCompilationErrorCount ( 10 , result ) ; \n + assertCompilationErrorCount ( 11 , result ) ; \n
AndroidAnnotations \ androidannotations - core \ androidannotations - test \ pom . xml \n - < arg > - AlogLevel = WARNING < / arg > \n + < arg > - AlogLevel = WARN < / arg > \n AndroidAnnotations \ androidannotations - ormlite \ ormlite - test \ pom . xml \n - < arg > - AlogLevel = WARNING < / arg > \n + < arg > - AlogLevel = WARN < / arg > \n AndroidAnnotations \ androidannotations - otto \ otto - test \ pom . xml \n - < arg > - AlogLevel = WARNING < / arg > \n + < arg > - AlogLevel = WARN < / arg > \n AndroidAnnotations \ androidannotations - rest - spring \ rest - spring - test \ pom . xml \n - < arg > - AlogLevel = WARNING < / arg > \n + < arg > - AlogLevel = WARN < / arg > \n AndroidAnnotations \ androidannotations - roboguice \ roboguice - test \ pom . xml \n - < arg > - AlogLevel = WARNING < / arg > \n + < arg > - AlogLevel = WARN < / arg > \n
dubbo - rpc \ dubbo - rpc - api \ src \ main \ java \ org \ apache \ dubbo \ rpc \ filter \ GenericImplFilter . java \n - if ( ! ( byte [ ] . class = = arg . getClass ( ) ) ) { \n + if ( byte [ ] . class ! = arg . getClass ( ) ) { \n
dubbo - metadata \ dubbo - metadata - api \ src \ main \ java \ org \ apache \ dubbo \ metadata \ DynamicConfigurationServiceNameMapping . java \n - group , serviceInterface , group ) ) ; \n + group , serviceInterface ) ) ; \n
dubbo - config \ dubbo - config - spring \ src \ main \ java \ org \ apache \ dubbo \ config \ spring \ beans \ factory \ annotation \ ReferenceAnnotationBeanPostProcessor . java \n - import org . apache . dubbo . common . Constants ; \n - import org . apache . dubbo . common . utils . ArrayUtils ; \n - import org . apache . dubbo . common . utils . StringUtils ; \n dubbo - config \ dubbo - config - spring \ src \ test \ java \ org \ apache \ dubbo \ config \ spring \ beans \ factory \ annotation \ AnnotationPropertyValuesAdapterTest . java \n + \n
README . md \n - * [ Python ] ( https : / / github . com / apache / dubbo - client - py ) \n + * [ Python ] ( https : / / github . com / dubbo / py - client - for - apache - dubbo ) \n
libraries \ tools \ kotlin - gradle - plugin - integration - tests \ build . gradle . kts \n - val gradleVersionForTests = " 6 . 3 " \n + val gradleVersionForTests = " 6 . 8 . 1 " \n
libraries \ tools \ kotlin - gradle - plugin - integration - tests \ src \ test \ kotlin \ org \ jetbrains \ kotlin \ gradle \ KotlinGradlePluginIT . kt \n + import org . gradle . util . GradleVersion \n + \n + val projectGradleVersion = GradleVersion . version ( chooseWrapperVersionOrFinishTest ( ) ) \n - assertContains ( " Required com . example . target ' bar ' " ) \n + if ( projectGradleVersion < GradleVersion . version ( " 6 . 4 " ) ) { \n + assertContains ( " Required com . example . target ' bar ' " ) \n + } else { \n + assertContains ( \n + " No matching variant of project : projA was found . The consumer was configured to find an API of a library " + \n + " compatible with Java 8 , preferably in the form of class files , " + \n + " and its dependencies declared externally , " + \n + " as well as attribute ' org . jetbrains . kotlin . platform . type ' with value ' jvm ' , " + \n + " attribute ' com . example . compilation ' with value ' foo ' , " + \n + " attribute ' com . example . target ' with value ' bar ' but : " \n + ) \n + } \n + \n - assertContains ( " Required com . example . compilation ' bar ' " ) \n + val projectGradleVersion = project . chooseWrapperVersionOrFinishTest ( ) \n + if ( GradleVersion . version ( projectGradleVersion ) < GradleVersion . version ( " 6 . 4 " ) ) { \n + assertContains ( " Required com . example . compilation ' bar ' " ) \n + } else { \n + assertContains ( \n + " No matching variant of project : projA was found . The consumer was configured to find an API of a library " + \n + " compatible with Java 8 , preferably in the form of class files , and its dependencies declared externally , " + \n + " as well as attribute ' org . jetbrains . kotlin . platform . type ' with value ' jvm ' , " + \n + " attribute ' com . example . compilation ' with value ' bar ' , " + \n + " attribute ' com . example . target ' with value ' foo ' but : " \n + ) \n + } \n
pom . xml \n - < version > 1 . 1 . 42 < / version > \n + < version > 1 . 1 . 43 < / version > \n src \ main \ java \ com \ alibaba \ fastjson \ JSON . java \n - public final static String VERSION = " 1 . 1 . 42 " ; \n + public final static String VERSION = " 1 . 1 . 43 " ; \n
pom . xml \n - < version > 1 . 1 . 43 < / version > \n + < version > 1 . 1 . 44 < / version > \n src \ main \ java \ com \ alibaba \ fastjson \ JSON . java \n - public final static String VERSION = " 1 . 1 . 43 " ; \n + public final static String VERSION = " 1 . 1 . 44 " ; \n
core \ res \ res \ values \ config . xml \n - * SDK level 30 makes the following algorithms mandatory : " rfc3686 ( ctr ( aes ) ) " , \n + * SDK level 31 makes the following algorithms mandatory : " rfc3686 ( ctr ( aes ) ) " , \n - - > \n
api \ current . txt \n + method @ NonNull public static java . util . Set < java . lang . String > getSupportedAlgorithms ( ) ; \n + field public static final String AUTH _ AES _ XCBC = " xcbc ( aes ) " ; \n + field public static final String AUTH _ CRYPT _ CHACHA20 _ POLY1305 = " rfc7539esp ( chacha20 , poly1305 ) " ; \n + field public static final String CRYPT _ AES _ CTR = " rfc3686 ( ctr ( aes ) ) " ; \n core \ java \ android \ net \ IpSecAlgorithm . java \n - * \n - * @ hide \n - * \n - * @ hide \n - * \n - * @ hide \n - * \n - * @ hide \n non - updatable - api \ current . txt \n + method @ NonNull public static java . util . Set < java . lang . String > getSupportedAlgorithms ( ) ; \n + field public static final String AUTH _ AES _ XCBC = " xcbc ( aes ) " ; \n + field public static final String AUTH _ CRYPT _ CHACHA20 _ POLY1305 = " rfc7539esp ( chacha20 , poly1305 ) " ; \n + field public static final String CRYPT _ AES _ CTR = " rfc3686 ( ctr ( aes ) ) " ; \n
modules \ transport - netty4 \ src \ javaRestTest \ java \ org \ elasticsearch \ rest \ Netty4HeadBodyIsEmptyIT . java \n - " [ . deprecation - indexing - template , . slm - history , . triggered _ watches , . watch - history - 14 , . watches , ilm - history , logs , " + \n + " [ . deprecation - indexing - template , . slm - history , . watch - history - 14 , ilm - history , logs , " + \n - " . slm - history = > [ . slm - history - 5 * ] , . triggered _ watches = > [ . triggered _ watches * ] , " + \n - " . watch - history - 14 = > [ . watcher - history - 14 * ] , . watches = > [ . watches * ] , ilm - history = > [ ilm - history - 5 * ] , " + \n + " . slm - history = > [ . slm - history - 5 * ] , " + \n + " . watch - history - 14 = > [ . watcher - history - 14 * ] , ilm - history = > [ ilm - history - 5 * ] , " + \n
x - pack \ plugin \ security \ src \ test \ java \ org \ elasticsearch \ xpack \ security \ action \ token \ TransportCreateTokenActionTests . java \n - final char [ ] invalidBase64Chars = " ! \ " # $ % & \ \ ' ( ) * , . / : ; < > ? @ [ ] ^ _ ` { | } ~ \ t \ n \ r " . toCharArray ( ) ; \n + final char [ ] invalidBase64Chars = " ! \ " # $ % & \ \ ' ( ) * , . : ; < > ? @ [ ] ^ _ ` { | } ~ \ t \ n \ r " . toCharArray ( ) ; \n
spring - web \ src \ main \ java \ org \ springframework \ web \ bind \ annotation \ RequestMapping . java \n - * " type = feed " , type = " entry " ) and if a compatible media type from the request \n + * " type = feed " , " type = entry " ) and if a compatible media type from the request \n - * @ see org . springframework . http . MediaType \n
src \ docs \ asciidoc \ data - access . adoc \n - @ Transactional ( " account " , label = " retryable " ) \n + @ Transactional ( value = " account " , label = " retryable " ) \n - - - - \n
x - pack \ plugin \ core \ src \ main \ java \ org \ elasticsearch \ index \ engine \ FrozenEngine . java \n - private synchronized ElasticsearchDirectoryReader getReader ( ) { \n - if ( lastOpenedReader ! = null & & lastOpenedReader . tryIncRef ( ) ) { \n - return lastOpenedReader ; \n + private ElasticsearchDirectoryReader getReader ( ) { \n + final ElasticsearchDirectoryReader readerRef = lastOpenedReader ; / / volatile read \n + if ( readerRef ! = null & & readerRef . tryIncRef ( ) ) { \n + return readerRef ; \n x - pack \ plugin \ searchable - snapshots \ src \ internalClusterTest \ java \ org \ elasticsearch \ xpack \ searchablesnapshots \ SearchableSnapshotsIntegTests . java \n - import org . apache . lucene . util . LuceneTestCase ; \n - @ LuceneTestCase . AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 69336 " ) \n
x - pack \ plugin \ ilm \ qa \ multi - node \ src \ javaRestTest \ java \ org \ elasticsearch \ xpack \ ilm \ actions \ SearchableSnapshotActionIT . java \n - @ AwaitsFix ( bugUrl = " https : / / github . com / elastic / elasticsearch / issues / 69396 " ) \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ LiteralEncoder . java \n + import com . facebook . presto . spi . type . ArrayType ; \n + import com . facebook . presto . spi . type . RowType ; \n + if ( type instanceof ArrayType ) { \n + return isSupportedLiteralType ( ( ( ArrayType ) type ) . getElementType ( ) ) ; \n + } \n + else if ( type instanceof RowType ) { \n + RowType rowType = ( RowType ) type ; \n + return rowType . getTypeParameters ( ) . stream ( ) \n + . allMatch ( LiteralEncoder : : isSupportedLiteralType ) ; \n + } \n
presto - main \ src \ test \ java \ com \ facebook \ presto \ sql \ planner \ assertions \ PlanAssert . java \n + / / TODO ( Issue # 13231 ) add back printing unresolved plan once we have no need to translate OriginalExpression to RowExpression \n - String formattedPlan = textLogicalPlan ( planSanitizer . apply ( actual . getRoot ( ) ) , actual . getTypes ( ) , metadata . getFunctionManager ( ) , StatsAndCosts . empty ( ) , session , 0 ) ; \n - " Plan does not match , expected [ \ n \ n % s \ n ] but found [ \ n \ n % s \ n ] which resolves to [ \ n \ n % s \ n ] " , \n + " Plan does not match , expected [ \ n \ n % s \ n ] but found [ \ n \ n % s \ n ] " , \n - formattedPlan , \n
presto - orc \ src \ main \ java \ com \ facebook \ presto \ orc \ OrcWriter . java \n - import static java . lang . Integer . max ; \n + import static java . lang . Math . max ; \n - int averageLogicalSizePerRow = estimateAverageLogicalSizePerRow ( page ) ; \n - int maxChunkRowCount = max ( 1 , chunkMaxLogicalBytes / max ( 1 , averageLogicalSizePerRow ) ) ; \n + double averageLogicalSizePerRow = ( double ) page . getApproximateLogicalSizeInBytes ( ) / page . getPositionCount ( ) ; \n + int maxChunkRowCount = max ( 1 , ( int ) ( chunkMaxLogicalBytes / max ( 1 , averageLogicalSizePerRow ) ) ) ; \n - private int estimateAverageLogicalSizePerRow ( Page page ) \n - { \n - checkArgument ( page . getPositionCount ( ) > 0 , " page is empty " ) ; \n - / / sample at most 100 rows to estimate average row logical size \n - Page chunk = page . getRegion ( 0 , min ( page . getPositionCount ( ) , 100 ) ) ; \n - return toIntExact ( chunk . getLogicalSizeInBytes ( ) / chunk . getPositionCount ( ) ) ; \n - } \n - \n
presto - orc \ src \ test \ java \ com \ facebook \ presto \ orc \ BenchmarkSelectiveStreamReaders . java \n - @ OutputTimeUnit ( TimeUnit . SECONDS ) \n + @ OutputTimeUnit ( TimeUnit . MILLISECONDS ) \n + " 0 | 0 . 5 " , \n + " 0 . 1 | 0 . 5 " , \n + " 0 . 2 | 0 . 5 " , \n + " 0 . 3 | 0 . 5 " , \n + " 0 . 4 | 0 . 5 " , \n + " 0 . 5 | 0 . 5 " , \n + " 0 . 6 | 0 . 5 " , \n + " 0 . 7 | 0 . 5 " , \n + " 0 . 8 | 0 . 5 " , \n + " 0 . 9 | 0 . 5 " , \n + " 1 | 0 . 5 " , \n + " - 1 | - 1 " , \n + " 1 | 1 " , \n
core \ java \ android \ os \ image \ OWNERS \n + include / packages / DynamicSystemInstallationService / OWNERS \n + \n packages \ DynamicSystemInstallationService \ OWNERS \n - yochiang @ google . com \n + yochiang @ google . com \n services \ core \ java \ com \ android \ server \ OWNERS \n + per - file DynamicSystemService . java = file : / packages / DynamicSystemInstallationService / OWNERS \n
core \ api \ test - current . txt \n - field public static final String DYNAMIC _ SYSTEM = " settings _ dynamic _ system " ; \n core \ java \ android \ util \ FeatureFlagUtils . java \n - public static final String DYNAMIC _ SYSTEM = " settings _ dynamic _ system " ; \n - DEFAULT _ FLAGS . put ( DYNAMIC _ SYSTEM , " false " ) ; \n packages \ DynamicSystemInstallationService \ src \ com \ android \ dynsystem \ BootCompletedReceiver . java \n - import android . os . SystemProperties ; \n - import android . util . FeatureFlagUtils ; \n - if ( ! isInUse & & ! featureFlagEnabled ( ) ) { \n + if ( ! isInUse ) { \n - \n - private boolean featureFlagEnabled ( ) { \n - return SystemProperties . getBoolean ( \n - FeatureFlagUtils . PERSIST _ PREFIX + FeatureFlagUtils . DYNAMIC _ SYSTEM , false ) ; \n - } \n packages \ DynamicSystemInstallationService \ src \ com \ android \ dynsystem \ VerificationActivity . java \n - import android . os . SystemProperties ; \n - import android . util . FeatureFlagUtils ; \n - if ( ! featureFlagEnabled ( ) ) { \n - Log . w ( TAG , FeatureFlagUtils . DYNAMIC _ SYSTEM + " not enabled ; activity aborted . " ) ; \n - finish ( ) ; \n - return ; \n - } \n - \n - private boolean featureFlagEnabled ( ) { \n - return SystemProperties . getBoolean ( \n - FeatureFlagUtils . PERSIST _ PREFIX + FeatureFlagUtils . DYNAMIC _ SYSTEM , false ) ; \n - } \n - \n
dubbo - cluster \ src \ test \ java \ org \ apache \ dubbo \ rpc \ cluster \ loadbalance \ LoadBalanceBaseTest . java \n + import org . mockito . Mockito ; \n - weightInvoker1 = mock ( Invoker . class ) ; \n - weightInvoker2 = mock ( Invoker . class ) ; \n - weightInvoker3 = mock ( Invoker . class ) ; \n - weightInvokerTmp = mock ( Invoker . class ) ; \n + weightInvoker1 = mock ( Invoker . class , Mockito . withSettings ( ) . stubOnly ( ) ) ; \n + weightInvoker2 = mock ( Invoker . class , Mockito . withSettings ( ) . stubOnly ( ) ) ; \n + weightInvoker3 = mock ( Invoker . class , Mockito . withSettings ( ) . stubOnly ( ) ) ; \n + weightInvokerTmp = mock ( Invoker . class , Mockito . withSettings ( ) . stubOnly ( ) ) ; \n
dubbo - rpc \ dubbo - rpc - redis \ src \ test \ java \ org \ apache \ dubbo \ rpc \ protocol \ redis \ RedisProtocolTest . java \n - if ( testInfo . getTestMethod ( ) . equals ( " testAuthRedis " ) | | testInfo . getTestMethod ( ) . equals ( " testWrongAuthRedis " ) ) { \n + String methodName = testInfo . getTestMethod ( ) . get ( ) . getName ( ) ; \n + if ( " testAuthRedis " . equals ( methodName ) | | ( " testWrongAuthRedis " . equals ( methodName ) ) ) { \n - @ Disabled \n + \n - @ Disabled \n - / / @ Test \n + \n + @ Test \n
mobile \ src \ main \ res \ values - night \ colors . xml \n + < color name = " header _ grid " > # 222 < / color > \n mobile \ src \ main \ res \ values \ colors . xml \n + < color name = " header _ grid " > # e6e6e6 < / color > \n mobile \ src \ main \ res \ values \ styles . xml \n - < item name = " android : color " > ? attr / colorControlLight < / item > \n + < item name = " android : color " > @ color / header _ grid < / item > \n
mobile \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ util \ ViewBindingAdapters . kt \n + if ( url . isBlank ( ) ) { \n + return \n + } \n mobile \ src \ main \ res \ layout \ item _ codelab . xml \n - app : goneUnless = " @ { isExpanded } " \n + app : goneUnless = " @ { isExpanded & amp ; & amp ; codelab . hasUrl ( ) } " \n model \ src \ main \ java \ com \ google \ samples \ apps \ iosched \ model \ Codelab . kt \n - ) \n + ) { \n + fun hasUrl ( ) = ! codelabUrl . isBlank ( ) \n + } \n
src \ main \ native \ windows \ file . cc \n + if ( attr & FILE _ ATTRIBUTE _ READONLY ) { \n + / / Remove the read - only attribute . \n + attr & = ~ FILE _ ATTRIBUTE _ READONLY ; \n + if ( ! SetFileAttributesW ( wpath , attr ) ) { \n + return GetResultFromErrorCode ( L " SetFileAttributesW " , path , GetLastError ( ) , \n + error ) ; \n + } \n + } \n + \n - if ( attr & FILE _ ATTRIBUTE _ READONLY ) { \n - / / Remove the read - only attribute . \n - attr & = ~ FILE _ ATTRIBUTE _ READONLY ; \n - if ( ! SetFileAttributesW ( wpath , attr ) ) { \n - return GetResultFromErrorCode ( L " SetFileAttributesW " , path , \n - GetLastError ( ) , error ) ; \n - } \n - } \n src \ test \ py \ bazel \ bazel _ windows _ test . py \n + def testDeleteReadOnlyFileAndDirectory ( self ) : \n + self . CreateWorkspaceWithDefaultRepos ( ' WORKSPACE ' ) \n + self . ScratchFile ( ' BUILD ' , [ \n + ' genrule ( ' , \n + ' name = " gen _ read _ only _ dir " , ' , \n + ' cmd _ bat = " mkdir $ @ & & attrib + r $ @ " , ' , \n + ' outs = [ " dir _ foo " ] , ' , \n + ' ) ' , \n + ' ' , \n + ' genrule ( ' , \n + ' name = " gen _ read _ only _ file " , ' , \n + ' cmd _ bat = " echo hello > $ @ & & attrib + r $ @ " , ' , \n + ' outs = [ " file _ foo " ] , ' , \n + ' ) ' , \n + ] ) \n + \n + exit _ code , _ , stderr = self . RunBazel ( [ ' build ' , ' / / . . . ' ] ) \n + self . AssertExitCode ( exit _ code , 0 , stderr ) \n + \n + exit _ code , _ , stderr = self . RunBazel ( [ ' clean ' ] ) \n + self . AssertExitCode ( exit _ code , 0 , stderr ) \n + \n
WORKSPACE \n + # Patch upb for grpc due to https : / / github . com / bazelbuild / bazel / issues / 12056 \n + # TODO : Remove the following after upgrading grpc to a newer version that ' s not \n + # affected by this issue . \n + http _ archive ( \n + name = " upb " , \n + sha256 = " 61d0417abd60e65ed589c9deee7c124fe76a4106831f6ad39464e1525cef1454 " , \n + patches = [ " / / third _ party / grpc : upb _ gcc10 _ fix . patch " ] , \n + patch _ args = [ " - p1 " ] , \n + strip _ prefix = " upb - 9effcbcb27f0a665f9f345030188c0b291e32482 " , \n + urls = [ \n + " https : / / mirror . bazel . build / github . com / protocolbuffers / upb / archive / 9effcbcb27f0a665f9f345030188c0b291e32482 . tar . gz " , \n + " https : / / github . com / protocolbuffers / upb / archive / 9effcbcb27f0a665f9f345030188c0b291e32482 . tar . gz " , \n + ] , \n + ) \n + \n
okhttp - tls \ src \ main \ kotlin \ okhttp3 \ tls \ HandshakeCertificates . kt \n + import java . security . KeyStoreException \n + \n + val heldCertificate = heldCertificate \n + if ( heldCertificate ! = null & & heldCertificate . keyPair . private . format = = null ) { \n + throw KeyStoreException ( " unable to support unencodable private key " ) \n + } \n + \n
build . gradle \n - repositories { \n - mavenCentral ( ) \n - maven { \n - url ' https : / / dl . bintray . com / kotlin / dokka ' \n - } \n - google ( ) \n - } \n - \n + vendor = JvmVendorSpec . ADOPTOPENJDK \n + vendor = JvmVendorSpec . ADOPTOPENJDK \n gradle \ wrapper \ gradle - wrapper . properties \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 7 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 6 . 8 . 1 - all . zip \n settings . gradle \n + \n + dependencyResolutionManagement { \n + repositories { \n + mavenCentral ( ) \n + maven { \n + url ' https : / / dl . bintray . com / kotlin / dokka ' \n + } \n + google ( ) \n + } \n + } \n
build . gradle \n + jdkVersion = 8 \n
build . gradle \n + if ( project . file ( ' Module . md ' ) . exists ( ) ) { \n + includes = [ ' Module . md ' ] \n + } \n new file \n mockwebserver \ Module . md \n + # Module mockwebserver \n + \n + A scriptable web server for testing HTTP clients . \n new file \n okhttp - logging - interceptor \ Module . md \n + # Module okhttp - logging - interceptor \n + \n + An OkHttp interceptor which logs HTTP request and response data . \n deleted file \n okhttp - logging - interceptor \ src \ main \ java \ okhttp3 \ logging \ package - info . kt \n - / * * An OkHttp interceptor which logs HTTP request and response data . * / \n - package okhttp3 . logging \n new file \n okhttp - sse \ Module . md \n + # Module okhttp - sse \n + \n + Support for server - sent events . \n new file \n okhttp - tls \ Module . md \n + # Module okhttp - tls \n + \n + OkHttp Transport Layer Security ( TLS ) library . \n new file \n okhttp \ Module . md \n + # Module okhttp \n + \n + An HTTP + HTTP / 2 client for Android and Java applications . \n
search \ src \ main \ java \ io \ plaidapp \ search \ domain \ SearchDataManager . kt \n - * Copyright 2018 Google LLC \n + * Copyright 2018 Google , Inc . \n - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - * you may not use this file except in compliance with the License . \n - * You may obtain a copy of the License at \n + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n + * you may not use this file except in compliance with the License . \n + * You may obtain a copy of the License at \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - * \n - * Unless required by applicable law or agreed to in writing , software \n - * distributed under the License is distributed on an " AS IS " BASIS , \n - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - * See the License for the specific language governing permissions and \n - * limitations under the License . \n + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n + * Unless required by applicable law or agreed to in writing , software \n + * distributed under the License is distributed on an " AS IS " BASIS , \n + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n + * See the License for the specific language governing permissions and \n + * limitations under the License . \n - context : Context , \n - onDataLoadedCallback : BaseDataManager . OnDataLoadedCallback < List < PlaidItem > > , \n - private val shotsRepository : ShotsRepository \n + context : Context , \n + onDataLoadedCallback : BaseDataManager . OnDataLoadedCallback < List < PlaidItem > > , \n + private val shotsRepository : ShotsRepository \n - \n - \n
leakcanary - android - core \ src \ main \ java \ leakcanary \ LeakCanary . kt \n + import android . content . Context \n + import android . content . Intent \n + import leakcanary . internal . activity . LeakActivity \n + \n + / * * \n + * @ return a new [ Intent ] that can be used to programmatically launch the leak display activity . \n + * / \n + fun createLeakDisplayActivityIntent ( context : Context ) : Intent { \n + return LeakActivity . createIntent ( context ) \n + } \n leakcanary - android - core \ src \ main \ java \ leakcanary \ internal \ InternalLeakCanary . kt \n - import leakcanary . internal . activity . LeakActivity \n - val intent = LeakActivity . createIntent ( application ) \n + val intent = LeakCanary . createLeakDisplayActivityIntent ( application ) \n - } \n + } \n
CONTRIBUTING . MD \n - with convemtions and rules we used for this project . \n + with cenventions and rules we used for this project . \n
CONTRIBUTING . MD \n - with cenventions and rules we used for this project . \n + with conventions and rules we used for this project . \n
compiler \ ir \ backend . common \ src \ org \ jetbrains \ kotlin \ backend \ common \ CheckIrElementVisitor . kt \n - * Copyright 2010 - 2017 JetBrains s . r . o . \n - * \n - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; \n - * you may not use this file except in compliance with the License . \n - * You may obtain a copy of the License at \n - * \n - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 \n - * \n - * Unless required by applicable law or agreed to in writing , software \n - * distributed under the License is distributed on an " AS IS " BASIS , \n - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . \n - * See the License for the specific language governing permissions and \n - * limitations under the License . \n + * Copyright 2010 - 2020 JetBrains s . r . o . and Kotlin Programming Language contributors . \n + * Use of this source code is governed by the Apache 2 . 0 license that can be found in the license / LICENSE . txt file . \n - @ OptIn ( ObsoleteDescriptorBasedAPI : : class ) \n + @ OptIn ( ObsoleteDescriptorBasedAPI : : class ) \n
compiler \ ir \ ir . tree \ src \ org \ jetbrains \ kotlin \ ir \ util \ dumpKotlinLike . kt \n - fun IrElement . dumpKotlinLike ( options : KotlinLikeDumpOptions = KotlinLikeDumpOptions ( ) ) : String { \n + fun IrElement . dumpKotlinLike ( options : KotlinLikeDumpOptions = KotlinLikeDumpOptions ( ) ) : String = \n + dumpKotlinLike ( this , KotlinLikeDumper : : printElement , options ) \n + \n + fun IrType . dumpKotlinLike ( ) : String = \n + dumpKotlinLike ( this , KotlinLikeDumper : : printType ) \n + \n + fun IrTypeArgument . dumpKotlinLike ( ) : String = \n + dumpKotlinLike ( this , KotlinLikeDumper : : printTypeArgument ) \n + \n + private inline fun < T > dumpKotlinLike ( \n + target : T , \n + print : KotlinLikeDumper . ( T ) - > Unit , \n + options : KotlinLikeDumpOptions = KotlinLikeDumpOptions ( ) \n + ) : String { \n - accept ( KotlinLikeDumper ( Printer ( sb , 1 , " " ) , options ) , null ) \n + KotlinLikeDumper ( Printer ( sb , 1 , " " ) , options ) . print ( target ) \n + fun printElement ( element : IrElement ) { \n + element . accept ( this , null ) \n + } \n + \n + fun printType ( type : IrType ) { \n + type . printTypeWithNoIndent ( ) \n + } \n + \n + fun printTypeArgument ( typeArg : IrTypeArgument ) { \n + typeArg . printTypeArgumentWithNoIndent ( ) \n + } \n + \n - when ( typeArg ) { \n - is IrStarProjection - > \n - p . printWithNoIndent ( " * " ) \n - is IrTypeProjection - > { \n - typeArg . variance . printVarianceWithNoIndent ( ) \n - typeArg . type . printTypeWithNoIndent ( ) \n - } \n - } \n + typeArg . printTypeArgumentWithNoIndent ( ) \n + private fun IrTypeArgument . printTypeArgumentWithNoIndent ( ) { \n + when ( this ) { \n + is IrStarProjection - > \n + p . printWithNoIndent ( " * " ) \n + is IrTypeProjection - > { \n + variance . printVarianceWithNoIndent ( ) \n + type . printTypeWithNoIndent ( ) \n + } \n + } \n + } \n + \n
presto - elasticsearch \ src \ main \ java \ com \ facebook \ presto \ elasticsearch \ ElasticsearchClient . java \n + private final boolean ignorePublishAddress ; \n + this . ignorePublishAddress = config . isIgnorePublishAddress ( ) ; \n - if ( hosts . length > 0 ) { \n + if ( hosts . length > 0 & & ! ignorePublishAddress ) { \n presto - elasticsearch \ src \ main \ java \ com \ facebook \ presto \ elasticsearch \ ElasticsearchConfig . java \n + private boolean ignorePublishAddress ; \n + public boolean isIgnorePublishAddress ( ) \n + { \n + return ignorePublishAddress ; \n + } \n + \n + @ Config ( " elasticsearch . ignore - publish - address " ) \n + public ElasticsearchConfig setIgnorePublishAddress ( boolean ignorePublishAddress ) \n + { \n + this . ignorePublishAddress = ignorePublishAddress ; \n + return this ; \n + } \n + \n presto - elasticsearch \ src \ test \ java \ com \ facebook \ presto \ elasticsearch \ TestElasticsearchConfig . java \n + . setIgnorePublishAddress ( false ) \n + . put ( " elasticsearch . ignore - publish - address " , " true " ) \n + . setIgnorePublishAddress ( true ) \n
presto - elasticsearch \ src \ main \ java \ com \ facebook \ presto \ elasticsearch \ ElasticsearchClient . java \n + private final boolean ignorePublishAddress ; \n + this . ignorePublishAddress = config . isIgnorePublishAddress ( ) ; \n - if ( hosts . length > 0 ) { \n + if ( hosts . length > 0 & & ! ignorePublishAddress ) { \n presto - elasticsearch \ src \ main \ java \ com \ facebook \ presto \ elasticsearch \ ElasticsearchConfig . java \n + private boolean ignorePublishAddress ; \n + public boolean isIgnorePublishAddress ( ) \n + { \n + return ignorePublishAddress ; \n + } \n + \n + @ Config ( " elasticsearch . ignore - publish - address " ) \n + public ElasticsearchConfig setIgnorePublishAddress ( boolean ignorePublishAddress ) \n + { \n + this . ignorePublishAddress = ignorePublishAddress ; \n + return this ; \n + } \n + \n presto - elasticsearch \ src \ test \ java \ com \ facebook \ presto \ elasticsearch \ TestElasticsearchConfig . java \n + . setIgnorePublishAddress ( false ) \n + . put ( " elasticsearch . ignore - publish - address " , " true " ) \n + . setIgnorePublishAddress ( true ) \n
imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipelineExperiments . java \n + private final boolean mGingerbreadDecoderEnabled ; \n + mGingerbreadDecoderEnabled = builder . mGingerbreadDecoderEnabled ; \n + public boolean isGingerbreadDecoderEnabled ( ) { \n + return mGingerbreadDecoderEnabled ; \n + } \n + \n + public boolean mGingerbreadDecoderEnabled ; \n + public ImagePipelineConfig . Builder setGingerbreadDecoderEnabled ( \n + boolean gingerbreadDecoderEnabled ) { \n + mGingerbreadDecoderEnabled = gingerbreadDecoderEnabled ; \n + return mConfigBuilder ; \n + } \n + \n imagepipeline \ src \ main \ java \ com \ facebook \ imagepipeline \ core \ ImagePipelineFactory . java \n - * Provide the implementation of the PlatformDecoder for the current platform using the \n - * provided PoolFactory \n + * Provide the implementation of the PlatformDecoder for the current platform using the provided \n + * PoolFactory \n - PoolFactory poolFactory , \n - boolean directWebpDirectDecodingEnabled ) { \n + PoolFactory poolFactory , boolean gingerbreadDecoderEnabled ) { \n - if ( directWebpDirectDecodingEnabled \n - & & Build . VERSION . SDK _ INT < Build . VERSION _ CODES . KITKAT ) { \n + if ( gingerbreadDecoderEnabled & & Build . VERSION . SDK _ INT < Build . VERSION _ CODES . KITKAT ) { \n - mPlatformDecoder = buildPlatformDecoder ( \n - mConfig . getPoolFactory ( ) , \n - mConfig . getExperiments ( ) . isWebpSupportEnabled ( ) ) ; \n + mPlatformDecoder = \n + buildPlatformDecoder ( \n + mConfig . getPoolFactory ( ) , mConfig . getExperiments ( ) . isGingerbreadDecoderEnabled ( ) ) ; \n
gradle . properties \n - VERSION _ NAME = 1 . 11 . 0 \n + VERSION _ NAME = 1 . 12 . 0 \n
src \ test \ java \ net \ starlark \ java \ eval \ testdata \ function . star \n - - - \n + # Arguments are evaluated in left - to - right order . \n + # See https : / / github . com / bazelbuild / starlark / issues / 13 . \n + order = [ ] \n + def id ( x ) : \n + order . append ( x ) \n + return x \n + \n + def f ( * args , * * kwargs ) : \n + return args , kwargs \n + \n + assert _ eq ( \n + f ( id ( 1 ) , id ( 2 ) , x = id ( 3 ) , * [ id ( 4 ) ] , * * dict ( z = id ( 5 ) ) ) , \n + ( ( 1 , 2 , 4 ) , { " x " : 3 , " z " : 5 } ) ) \n + assert _ eq ( order , [ 1 , 2 , 3 , 4 , 5 ] ) \n + \n + - - - \n
src \ test \ java \ net \ starlark \ java \ eval \ Benchmarks . java \n + " Runs Starlark benchmarks matching the filter for the specified ( approximate ) time , \ n " \n - + " and reports various performance measures . " ; \n + + " and reports various performance measures . \ n " \n + + " The optional filter is a regular expression applied to the string FILE : FUNC , \ n " \n + + " where FILE is the base name of the file and FUNC is the name of the function , \ n " \n + + " for example ' bench _ int . star : bench _ add32 ' . \ n " ; \n - if ( ! ( file . getName ( ) . startsWith ( " bench _ " ) & & file . getName ( ) . endsWith ( " . star " ) ) ) { \n + String basename = file . getName ( ) ; \n + if ( ! ( basename . startsWith ( " bench _ " ) & & basename . endsWith ( " . star " ) ) ) { \n - if ( filter = = null | | filter . matcher ( e . getKey ( ) ) . find ( ) ) { \n - benchmarks . put ( e . getKey ( ) , ( StarlarkFunction ) e . getValue ( ) ) ; \n + String name = e . getKey ( ) ; \n + if ( filter = = null | | filter . matcher ( basename + " : " + name ) . find ( ) ) { \n + benchmarks . put ( name , ( StarlarkFunction ) e . getValue ( ) ) ; \n src \ test \ java \ net \ starlark \ java \ eval \ testdata \ bench _ sorted . star \n - def bench _ sort _ large ( b ) : \n + def bench _ large ( b ) : \n - def bench _ sort _ small ( b ) : \n + def bench _ small ( b ) : \n
src \ jvm \ backtype \ storm \ utils \ Utils . java \n - throw new RuntimeException ( " Found multiple " + name + " resources . You ' re probably bundling the Storm jars with your topology jar . " ) ; \n + throw new RuntimeException ( " Found multiple " + name + " resources . You ' re probably bundling the Storm jars with your topology jar . " ) ; \n
src \ jvm \ backtype \ storm \ utils \ NimbusClient . java \n - String timeoutStr = ( String ) conf . get ( Config . NIMBUS _ TASK _ TIMEOUT _ SECS ) ; \n - Integer timeout = new Integer ( timeoutStr ) ; \n + Integer timeout = new Integer ( Utils . getInt ( conf . get ( Config . NIMBUS _ TASK _ TIMEOUT _ SECS ) ) ) ; \n + public NimbusClient ( Map conf , String host , int port ) throws TTransportException { \n + this ( conf , host , port , null ) ; \n + } \n + \n
WORKSPACE \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n + " platforms - 0 . 0 . 2 . tar . gz " , \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " : " 66184688debeeefcc2a16a2f80b03f514deac8346fe888fb7e691a52c023dd88 " , \n + " platforms - 0 . 0 . 2 . tar . gz " : " 48a2d8d343863989c232843e01afc8a986eb8738766bfd8611420a7db8f6f0c3 " , \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " : [ \n - " https : / / mirror . bazel . build / github . com / bazelbuild / platforms / archive / 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n - " https : / / github . com / bazelbuild / platforms / archive / 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n + " platforms - 0 . 0 . 2 . tar . gz " : [ \n + " https : / / mirror . bazel . build / github . com / bazelbuild / platforms / releases / download / 0 . 0 . 2 / platforms - 0 . 0 . 2 . tar . gz " , \n + " https : / / github . com / bazelbuild / platforms / releases / download / 0 . 0 . 2 / platforms - 0 . 0 . 2 . tar . gz " , \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n + " platforms - 0 . 0 . 2 . tar . gz " , \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " : " 66184688debeeefcc2a16a2f80b03f514deac8346fe888fb7e691a52c023dd88 " , \n + " platforms - 0 . 0 . 2 . tar . gz " : " 48a2d8d343863989c232843e01afc8a986eb8738766bfd8611420a7db8f6f0c3 " , \n - " 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " : [ \n + " platforms - 0 . 0 . 2 . tar . gz " : [ \n - sha256 = " 66184688debeeefcc2a16a2f80b03f514deac8346fe888fb7e691a52c023dd88 " , \n - strip _ prefix = " platforms - 46993efdd33b73649796c5fc5c9efb193ae19d51 " , \n + sha256 = " 48a2d8d343863989c232843e01afc8a986eb8738766bfd8611420a7db8f6f0c3 " , \n - " https : / / mirror . bazel . build / github . com / bazelbuild / platforms / archive / 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n - " https : / / github . com / bazelbuild / platforms / archive / 46993efdd33b73649796c5fc5c9efb193ae19d51 . zip " , \n + " https : / / mirror . bazel . build / github . com / bazelbuild / platforms / releases / download / 0 . 0 . 2 / platforms - 0 . 0 . 2 . tar . gz " , \n + " https : / / github . com / bazelbuild / platforms / releases / download / 0 . 0 . 2 / platforms - 0 . 0 . 2 . tar . gz " , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ packages \ WorkspaceGlobals . java \n - private static final Pattern LEGAL _ WORKSPACE _ NAME = Pattern . compile ( " ^ \ \ p { Alpha } [ \ \ w - ] * $ " ) ; \n + private static final Pattern LEGAL _ WORKSPACE _ NAME = Pattern . compile ( " ^ \ \ p { Alpha } [ - . \ \ w ] * $ " ) ; \n src \ test \ java \ com \ google \ devtools \ build \ lib \ packages \ WorkspaceFactoryTest . java \n - helper . parse ( " workspace ( name = ' a . b . c ' ) " ) ; \n - assertThat ( helper . getParserError ( ) ) . contains ( " a . b . c is not a legal workspace name " ) ; \n + helper . parse ( " workspace ( name = ' a + b + c ' ) " ) ; \n + assertThat ( helper . getParserError ( ) ) . contains ( " a + b + c is not a legal workspace name " ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ exec \ BUILD \n + deps = [ " / / third _ party : error _ prone _ annotations " ] , \n src \ main \ java \ com \ google \ devtools \ build \ lib \ exec \ ExecutionPolicy . java \n - / * * \n - * Determines whether a Spawn is executable locally , remotely , or both . \n - * / \n + import com . google . errorprone . annotations . Immutable ; \n + \n + / * * Determines whether a Spawn is executable locally , remotely , or both . * / \n + @ Immutable \n
src \ main \ protobuf \ failure _ details . proto \n + \n + reserved 7 ; / / For internal use \n
src \ main \ java \ rx \ internal \ operators \ OperatorMerge . java \n - if ( mergeProducer . requested ( ) ! = Long . MAX _ VALUE ) { \n + if ( mergeProducer . requested ! = Long . MAX _ VALUE ) { \n - if ( mergeProducer . requested ( ) = = Long . MAX _ VALUE ) { \n + if ( mergeProducer . requested = = Long . MAX _ VALUE ) { \n - long r = mergeProducer . requested ( ) ; \n + long r = mergeProducer . requested ; \n - mergeProducer . getAndAdd ( - 1 ) ; \n + MergeProducer . REQUESTED . decrementAndGet ( mergeProducer ) ; \n - long r = mergeProducer . requested ( ) ; \n + long r = mergeProducer . requested ; \n - mergeProducer . getAndAdd ( - emittedWhileDraining ) ; \n + MergeProducer . REQUESTED . getAndAdd ( mergeProducer , - emittedWhileDraining ) ; \n - long r = mergeProducer . requested ( ) ; \n + long r = mergeProducer . requested ; \n - private volatile long rq = 0 ; \n + private volatile long requested = 0 ; \n - static final AtomicLongFieldUpdater < MergeProducer > RQ = AtomicLongFieldUpdater . newUpdater ( MergeProducer . class , " rq " ) ; \n + static final AtomicLongFieldUpdater < MergeProducer > REQUESTED = AtomicLongFieldUpdater . newUpdater ( MergeProducer . class , " requested " ) ; \n - public long requested ( ) { \n - return rq ; \n - } \n - public long getAndAdd ( long n ) { \n - return RQ . getAndAdd ( this , n ) ; \n - } \n - \n - if ( rq = = Long . MAX _ VALUE ) { \n + if ( requested = = Long . MAX _ VALUE ) { \n - rq = Long . MAX _ VALUE ; \n + requested = Long . MAX _ VALUE ; \n - BackpressureUtils . getAndAddRequest ( RQ , this , n ) ; \n + BackpressureUtils . getAndAddRequest ( REQUESTED , this , n ) ; \n - if ( producer . requested ( ) > 0 & & q . count ( ) = = 0 ) { \n + if ( producer . requested > 0 & & q . count ( ) = = 0 ) { \n - producer . getAndAdd ( - 1 ) ; \n + MergeProducer . REQUESTED . decrementAndGet ( producer ) ; \n - long toEmit = producer . requested ( ) ; \n + long toEmit = producer . requested ; \n - producer . getAndAdd ( - emitted ) ; \n + MergeProducer . REQUESTED . getAndAdd ( producer , - emitted ) ; \n
src \ main \ java \ rx \ internal \ operators \ OnSubscribeRedo . java \n - long c = consumerCapacity . getAndAdd ( n ) ; \n + long c = BackpressureUtils . getAndAddRequest ( consumerCapacity , n ) ; \n src \ test \ java \ rx \ internal \ operators \ OperatorRepeatTest . java \n - import static org . mockito . Mockito . mock ; \n - import static org . mockito . Mockito . never ; \n - import static org . mockito . Mockito . times ; \n - import static org . mockito . Mockito . verify ; \n + import static org . mockito . Mockito . * ; \n + import java . util . Arrays ; \n + import rx . observers . TestSubscriber ; \n + \n + / * * Issue # 2587 . * / \n + @ Test \n + public void testRepeatAndDistinctUnbounded ( ) { \n + Observable < Integer > src = Observable . from ( Arrays . asList ( 1 , 2 , 3 , 4 , 5 ) ) \n + . take ( 3 ) \n + . repeat ( 3 ) \n + . distinct ( ) ; \n + \n + TestSubscriber < Integer > ts = new TestSubscriber < Integer > ( ) ; \n + \n + src . subscribe ( ts ) ; \n + \n + ts . assertNoErrors ( ) ; \n + ts . assertTerminalEvent ( ) ; \n + ts . assertReceivedOnNext ( Arrays . asList ( 1 , 2 , 3 ) ) ; \n + } \n
src \ main \ java \ io \ reactivex \ Single . java \n - * @ param scheduler the target scheduler to use fro the non - blocking wait and emission \n + * @ param scheduler the target scheduler to use for the non - blocking wait and emission \n
src \ main \ java \ io \ reactivex \ Flowable . java \n - * < p > This method executes the { @ code Consumer } on the current thread while \n + * This method executes the { @ code Consumer } on the current thread while \n src \ main \ java \ io \ reactivex \ Observable . java \n - * < p > This method executes the { @ code Consumer } on the current thread while \n + * This method executes the { @ code Consumer } on the current thread while \n
src \ main \ java \ io \ vertx \ core \ http \ impl \ HttpClientImpl . java \n - if ( port = = - 1 ) { \n - if ( " ftp " . equals ( protocol ) ) { \n + if ( " ftp " . equals ( protocol ) ) { \n + if ( port = = - 1 ) { \n - } else { \n - char chend = protocol . charAt ( protocol . length ( ) - 1 ) ; \n - if ( chend = = ' p ' ) { \n + } \n + } else { \n + char chend = protocol . charAt ( protocol . length ( ) - 1 ) ; \n + if ( chend = = ' p ' ) { \n + if ( port = = - 1 ) { \n - } else if ( chend = = ' s ' ) { \n - ssl = true ; \n + } \n + } else if ( chend = = ' s ' ) { \n + ssl = true ; \n + if ( port = = - 1 ) { \n
src \ main \ java \ io \ vertx \ core \ http \ impl \ HttpClientImpl . java \n + / / if we do not know the protocol , the port still may be - 1 , we will handle that below \n - throw new VertxException ( " Invalid url : " + surl ) ; \n + throw new VertxException ( " Invalid url : " + surl , e ) ; \n + Objects . requireNonNull ( protocol , " no null protocl accepted " ) ; \n - int defaultPort = protocol . equals ( " ftp " ) ? 21 : 80 ; \n - relativeURI = protocol + " : / / " + host + ( port ! = defaultPort ? " : " + port : " " ) + relativeURI ; \n + final int defaultPort = protocol . equals ( " ftp " ) ? 21 : 80 ; \n + final String addPort = ( port ! = - 1 & & port ! = defaultPort ) ? ( " : " + port ) : " " ; \n + relativeURI = protocol + " : / / " + host + addPort + relativeURI ; \n - req . setHost ( host + ( port ! = defaultPort ? " : " + port : " " ) ) ; \n + req . setHost ( host + addPort ) ; \n
. all - contributorsrc \n + } , \n + { \n + " login " : " demirhalil " , \n + " name " : " Halil Demir " , \n + " avatar _ url " : " https : / / avatars1 . githubusercontent . com / u / 22895118 ? v = 4 " , \n + " profile " : " https : / / github . com / demirhalil " , \n + " contributions " : [ \n + " translation " \n + ] \n README . md \n - [ ! [ All Contributors ] ( https : / / img . shields . io / badge / all _ contributors - 150 - orange . svg ? style = flat - square ) ] ( # contributors - ) \n + [ ! [ All Contributors ] ( https : / / img . shields . io / badge / all _ contributors - 151 - orange . svg ? style = flat - square ) ] ( # contributors - ) \n + < td align = " center " > < a href = " https : / / github . com / demirhalil " > < img src = " https : / / avatars1 . githubusercontent . com / u / 22895118 ? v = 4 ? s = 100 " width = " 100px ; " alt = " " / > < br / > < sub > < b > Halil Demir < / b > < / sub > < / a > < br / > < a href = " # translation - demirhalil " title = " Translation " > 🌍 < / a > < / td > \n
. all - contributorsrc \n + } , \n + { \n + " login " : " rohit10000 " , \n + " name " : " Rohit Singh " , \n + " avatar _ url " : " https : / / avatars . githubusercontent . com / u / 20845565 ? v = 4 " , \n + " profile " : " https : / / github . com / rohit10000 " , \n + " contributions " : [ \n + " code " \n + ] \n README . md \n - [ ! [ All Contributors ] ( https : / / img . shields . io / badge / all _ contributors - 151 - orange . svg ? style = flat - square ) ] ( # contributors - ) \n + [ ! [ All Contributors ] ( https : / / img . shields . io / badge / all _ contributors - 152 - orange . svg ? style = flat - square ) ] ( # contributors - ) \n + < td align = " center " > < a href = " https : / / github . com / rohit10000 " > < img src = " https : / / avatars . githubusercontent . com / u / 20845565 ? v = 4 ? s = 100 " width = " 100px ; " alt = " " / > < br / > < sub > < b > Rohit Singh < / b > < / sub > < / a > < br / > < a href = " https : / / github . com / iluwatar / java - design - patterns / commits ? author = rohit10000 " title = " Code " > 💻 < / a > < / td > \n
storm - netty \ src \ jvm \ backtype \ storm \ messaging \ netty \ Client . java \n + private final AtomicBoolean being _ closed ; \n + being _ closed = new AtomicBoolean ( false ) ; \n - public void send ( int task , byte [ ] message ) { \n + public void send ( int task , byte [ ] message ) { \n + / / throw exception if the client is being closed \n + if ( being _ closed . get ( ) ) { \n + throw new RuntimeException ( " Client is being closed , and does not take requests any more " ) ; \n + } \n + \n + / / we will discard any message after CLOSE \n + if ( msg = = Util . CLOSE _ MESSAGE ) break ; \n + / / we limit the batch per buffer size \n + being _ closed . set ( true ) ; \n storm - netty \ src \ jvm \ backtype \ storm \ messaging \ netty \ StormClientHandler . java \n - \n + long start _ time ; \n + \n + start _ time = System . currentTimeMillis ( ) ; \n - \n + LOG . debug ( " send / recv time ( ms ) : " + ( System . currentTimeMillis ( ) - start _ time ) ) ; \n + \n - / / if task = = SHUTDOWN for any request , the channel is to be closed \n - for ( TaskMessage message : requests ) { \n - if ( message . task ( ) = = Util . CLOSE ) { \n - being _ closed . set ( true ) ; \n - requests . remove ( message ) ; \n - break ; \n - } \n + / / if task = = CLOSE _ MESSAGE for our last request , the channel is to be closed \n + TaskMessage last _ msg = requests . get ( requests . size ( ) - 1 ) ; \n + if ( last _ msg = = Util . CLOSE _ MESSAGE ) { \n + being _ closed . set ( true ) ; \n + requests . remove ( last _ msg ) ; \n
bin \ build _ release . sh \n + rm - f $ DIR / lib / storm - core - $ RELEASE . jar \n + \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ dynamic \ DynamicSpawnStrategy . java \n - import com . google . common . util . concurrent . ListenableFuture ; \n - * @ param branch the future of the branch running the spawn \n + * @ param branchToCancel the future of the branch running the spawn which needs to be cancelled \n + * @ param cancellingBranch the future of the branch running the spawn with the strategy that is \n + * performing the cancellation . \n - Future < ImmutableList < SpawnResult > > branch , \n + Future < ImmutableList < SpawnResult > > branchToCancel , \n + Future < ImmutableList < SpawnResult > > cancellingBranch , \n + if ( cancellingBranch . isCancelled ( ) ) { \n + / / TODO ( b / 173020239 ) : Determine why stopBranch ( ) can be called when cancellingBranch is \n + / / cancelled . \n + throw new DynamicInterruptedException ( \n + String . format ( \n + " Execution of % s strategy stopped because it was cancelled but not interrupted " , \n + cancellingStrategy ) ) ; \n + } \n - boolean cancelled = branch . cancel ( true ) ; \n - checkState ( cancelled , " Failed to cancel other branch from % s " , cancellingStrategy ) ; \n + branchToCancel . cancel ( true ) ; \n - " Execution stopped because % s strategy finished first " , \n - strategyThatCancelled . get ( ) ) ) ; \n + " Execution of % s strategy stopped because % s strategy finished first " , \n + cancellingStrategy , strategyThatCancelled . get ( ) ) ) ; \n + SettableFuture < ImmutableList < SpawnResult > > localBranch = SettableFuture . create ( ) ; \n - ListenableFuture < ImmutableList < SpawnResult > > localBranch = \n + localBranch . setFuture ( \n - remoteBranch , remoteDone , DynamicMode . LOCAL , strategyThatCancelled ) ) ; \n + remoteBranch , \n + remoteDone , \n + localBranch , \n + DynamicMode . LOCAL , \n + strategyThatCancelled ) ) ; \n - } ) ; \n + } ) ) ; \n + remoteBranch , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ packages \ Attribute . java \n - ! propertyFlags . contains ( flag ) , " % s flag is already set " , propertyName ) ; \n + ! propertyFlags . contains ( flag ) , " ' % s ' flag is already set " , propertyName ) ; \n + * \n + * @ throws EvalException if a property flag with the provided name does not exist or cannot be \n + * set . \n - public Builder < TYPE > setPropertyFlag ( String propertyName ) { \n + public Builder < TYPE > setPropertyFlag ( String propertyName ) throws EvalException { \n - throw new IllegalArgumentException ( " unknown attribute flag " + propertyName ) ; \n + throw Starlark . errorf ( " unknown attribute flag ' % s ' " , propertyName ) ; \n + } \n + try { \n + setPropertyFlag ( flag , propertyName ) ; \n + } catch ( IllegalStateException e ) { \n + throw new EvalException ( e ) ; \n - setPropertyFlag ( flag , propertyName ) ; \n src \ test \ java \ com \ google \ devtools \ build \ lib \ starlark \ StarlarkRuleClassFunctionsTest . java \n + @ Test \n + public void unknownRuleAttributeFlags _ forbidden ( ) throws Exception { \n + ev . setFailFast ( false ) ; \n + evalAndExport ( \n + ev , \n + " def _ impl ( ctx ) : return None " , \n + " r1 = rule ( _ impl , attrs = { ' srcs ' : attr . label _ list ( flags = [ ' NO - SUCH - FLAG ' ] ) } ) " ) ; \n + ev . assertContainsError ( " unknown attribute flag ' NO - SUCH - FLAG ' " ) ; \n + } \n + \n + @ Test \n + public void duplicateRuleAttributeFlags _ forbidden ( ) throws Exception { \n + ev . setFailFast ( false ) ; \n + evalAndExport ( \n + ev , \n + " def _ impl ( ctx ) : return None " , \n + " r1 = rule ( _ impl , attrs = { ' srcs ' : attr . label _ list ( mandatory = True , " , \n + " flags = [ ' MANDATORY ' ] ) } ) " ) ; \n + ev . assertContainsError ( " ' MANDATORY ' flag is already set " ) ; \n + } \n + \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ glutils \ ShaderProgram . java \n + log + = type = = GL20 . GL _ VERTEX _ SHADER ? " Vertex shader \ n " : " Fragment shader : \ n " ; \n gdx \ src \ com \ badlogic \ gdx \ graphics \ profiling \ GLProfiler . java \n + if ( Gdx . gl20 ! = null & & Gdx . gl20 instanceof GL30Profiler ) Gdx . gl20 = ( ( GL30Profiler ) Gdx . gl ) . gl30 ; \n
fetch . xml \n - < property name = " domain " value = " https : / / libgdx . badlogicgames . com / nightlies / dist " / > \n - < property name = " robovm " value = " https : / / libgdx . badlogicgames . com / robovm / robovm / lib / " / > \n + < property name = " domain " value = " http : / / libgdx . badlogicgames . com / nightlies / dist " / > \n + < property name = " robovm " value = " http : / / libgdx . badlogicgames . com / robovm / robovm / lib / " / > \n
. travis . yml \n - sudo apt - get install - y make \n - rm - fr $ HOME / android - ndk - r16b \n - curl - L http : / / dl . google . com / android / repository / android - ndk - r16b - linux - x86 _ 64 . zip - O \n - - unzip android - ndk - r16b - linux - x86 _ 64 . zip \n + - unzip - qo android - ndk - r16b - linux - x86 _ 64 . zip \n - ls android - ndk - r16b \n - pwd \n - echo $ HOME \n
. travis . yml \n - sudo apt - get install - y mingw - w64 lib32z1 \n - sudo apt - get install - y libx11 - dev : i386 \n - sudo apt - get install - y make \n + - cd $ HOME \n - rm - fr $ HOME / android - ndk - r16b \n - curl - L http : / / dl . google . com / android / repository / android - ndk - r16b - linux - x86 _ 64 . zip - O \n - unzip - qo android - ndk - r16b - linux - x86 _ 64 . zip \n - - ls android - ndk - r16b \n - - pwd \n - - echo $ HOME \n - rm android - ndk - r16b - linux - x86 _ 64 . zip \n - export ANDROID _ NDK _ HOME = $ HOME / android - ndk - r16b \n - export NDK _ HOME = $ HOME / android - ndk - r16b \n - ls $ NDK _ HOME \n + - cd / home / travis / build / libgdx / libgdx \n - ant - f build . xml - Dbuild - natives = true - Dversion = nightly - v \n
client \ benchmark \ src \ main \ java \ org \ elasticsearch \ client \ benchmark \ ops \ bulk \ BulkBenchmarkTask . java \n - if ( iteration < warmupIterations ) { \n + if ( iteration > = warmupIterations ) { \n
client \ benchmark \ src \ main \ java \ org \ elasticsearch \ client \ benchmark \ AbstractBenchmark . java \n - int totalDocs = Integer . valueOf ( args [ 5 ] ) ; \n + float totalDocs = Float . valueOf ( args [ 5 ] ) ; \n - int totalIterationCount = ( int ) Math . floor ( totalDocs / bulkSize ) ; \n + int totalIterationCount = ( int ) Math . ceil ( totalDocs / bulkSize ) ; \n
android \ guava \ src \ com \ google \ common \ reflect \ TypeToken . java \n + \n + / / This happens to be the hash of the class as of now . So setting it makes a backward compatible \n + / / change . Going forward , if any incompatible change is added , we can change the UID back to 1 . \n + private static final long serialVersionUID = 3637540370352322684L ; \n guava \ src \ com \ google \ common \ reflect \ TypeToken . java \n + \n + / / This happens to be the hash of the class as of now . So setting it makes a backward compatible \n + / / change . Going forward , if any incompatible change is added , we can change the UID back to 1 . \n + private static final long serialVersionUID = 3637540370352322684L ; \n
android \ guava - tests \ test \ com \ google \ common \ reflect \ TypeTokenSubtypeTest . java \n + public void testGetSubtypeOf _ impossibleWildcard ( ) { \n + TypeToken < List < ? extends Number > > numberList = new TypeToken < List < ? extends Number > > ( ) { } ; \n + abstract class StringList implements List < String > { } \n + try { \n + numberList . getSubtype ( StringList . class ) ; \n + fail ( ) ; \n + } catch ( IllegalArgumentException expected ) { } \n + } \n + \n android \ guava \ src \ com \ google \ common \ reflect \ TypeToken . java \n + checkArgument ( \n + subtype . isSubtypeOf ( this ) , " % s does not appear to be a subtype of % s " , subtype , this ) ; \n guava - tests \ test \ com \ google \ common \ reflect \ TypeTokenSubtypeTest . java \n + public void testGetSubtypeOf _ impossibleWildcard ( ) { \n + TypeToken < List < ? extends Number > > numberList = new TypeToken < List < ? extends Number > > ( ) { } ; \n + abstract class StringList implements List < String > { } \n + try { \n + numberList . getSubtype ( StringList . class ) ; \n + fail ( ) ; \n + } catch ( IllegalArgumentException expected ) { } \n + } \n + \n guava \ src \ com \ google \ common \ reflect \ TypeToken . java \n + checkArgument ( \n + subtype . isSubtypeOf ( this ) , " % s does not appear to be a subtype of % s " , subtype , this ) ; \n
guava - testlib \ src \ com \ google \ common \ testing \ EqualsTester . java \n - * < p > To use , create a new EqualsTester and add equality groups where each group \n - * contains objects that are supposed to be equal to each other , and objects of \n - * different groups are expected to be unequal . For example : \n + * < p > The simplest use case is : \n + * \n + * < pre > \n + * new EqualsTester ( ) . addEqualityGroup ( foo ) . testEquals ( ) ; \n + * < / pre > \n + * \n + * < p > This tests { @ code foo . equals ( foo ) } , { @ code foo . equals ( null ) } , and a few \n + * other operations . \n + * \n + * < p > For more extensive testing , add multiple equality groups . Each group \n + * should contain objects that are equal to each other but unequal to the \n + * objects in any other group . For example : \n
android \ guava - testlib \ test \ com \ google \ common \ testing \ EqualsTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n android \ guava - testlib \ test \ com \ google \ common \ testing \ NullPointerTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n android \ guava - testlib \ test \ com \ google \ common \ testing \ SerializableTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n android \ guava - testlib \ test \ com \ google \ common \ testing \ anotherpackage \ ForwardingWrapperTesterTest . java \n + \n + @ SuppressWarnings ( " EqualsHashCode " ) \n guava - testlib \ test \ com \ google \ common \ testing \ EqualsTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n guava - testlib \ test \ com \ google \ common \ testing \ NullPointerTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n guava - testlib \ test \ com \ google \ common \ testing \ SerializableTesterTest . java \n + @ SuppressWarnings ( " EqualsHashCode " ) \n guava - testlib \ test \ com \ google \ common \ testing \ anotherpackage \ ForwardingWrapperTesterTest . java \n + \n + @ SuppressWarnings ( " EqualsHashCode " ) \n
gradle . properties \n - version = 1 . 1 . 5 - SNAPSHOT \n + version = 1 . 1 . 5 \n
gradle . properties \n - version = 1 . 1 . 5 \n + version = 1 . 1 . 6 - SNAPSHOT \n
gradle . properties \n - version = 1 . 0 . 0 \n + version = 1 . 0 . 1 - SNAPSHOT \n
gradle . properties \n - version = 1 . 0 . 1 - SNAPSHOT \n + version = 1 . 0 . 1 \n
pom . xml \n - < module > monostate < / module > \n + < module > monostate < / module > \n - < module > business - delegate < / module > \n - < module > half - sync - half - async < / module > \n + < module > business - delegate < / module > \n + < module > half - sync - half - async < / module > \n + < module > event - driven - architecture < / module > \n
event - driven - architecture \ src \ test \ java \ EventDrivenTest . java \n + import com . iluwatar . eda . event . Event ; \n - \n - \n - \n + \n + / * * \n + * Event Driven Pattern unit tests to assert and verify correct pattern behaviour \n + * / \n + / * * \n + * This unit test should register events and event handlers correctly with the event dispatcher \n + * and events should be dispatched accordingly . \n + * / \n - public void testEventDriverPattern ( ) { \n + public void testEventDriverPattern ( ) { \n - UserCreatedEventHandler userCreatedEventHandler = new UserCreatedEventHandler ( ) ; \n + UserCreatedEventHandler userCreatedEventHandler = new UserCreatedEventHandler ( ) ; \n - ( UserCreatedEventHandler ) dispatcher . getHandlers ( ) . get ( UserCreatedEvent . class ) ) ; \n + ( UserCreatedEventHandler ) dispatcher . getHandlers ( ) . get ( UserCreatedEvent . class ) ) ; \n - ( UserUpdatedEventHandler ) dispatcher . getHandlers ( ) . get ( UserUpdatedEvent . class ) ) ; \n + ( UserUpdatedEventHandler ) dispatcher . getHandlers ( ) . get ( UserUpdatedEvent . class ) ) ; \n + } \n + / * * \n + * This unit test should correctly return the { @ link Event } class type when calling the \n + * { @ link Event # getType ( ) getType } method . \n + * / \n + @ Test \n + public void testGetEventType ( ) { \n + User user = new User ( " iluwatar " ) ; \n + UserCreatedEvent userCreatedEvent = new UserCreatedEvent ( user ) ; \n + assertEquals ( UserCreatedEvent . class , userCreatedEvent . getType ( ) ) ; \n
util \ deploy _ snapshot . sh \n - [ " $ TRAVIS _ JDK _ VERSION " = = " oraclejdk8 " ] & & \ \n + [ " $ TRAVIS _ JDK _ VERSION " = = " openjdk8 " ] & & \ \n util \ update _ snapshot _ docs . sh \n - [ " $ TRAVIS _ JDK _ VERSION " = = " oraclejdk8 " ] & & \ \n + [ " $ TRAVIS _ JDK _ VERSION " = = " openjdk8 " ] & & \ \n
guava \ src \ com \ google \ common \ collect \ RangeMap . java \n + * \n + * @ since 28 . 1 \n
examples \ mongoDbRealmExample \ build . gradle \n + minifyEnabled true \n realm \ realm - library \ proguard - rules - consumer - common . pro \n - dontnote rx . Observable \n + \n + # Referenced from JNI \n + - keep class org . bson . types . Decimal128 \n + - keep class org . bson . types . ObjectId \n realm \ realm - library \ proguard - rules - consumer - objectServer . pro \n - dontnote sun . security . ssl . SSLContextImpl \n - - dontwarn okhttp3 . internal . platform . * \n + - dontwarn okhttp3 . internal . platform . * \n + \n + # Referenced from JNI \n + - keep class io . realm . internal . objectstore . OsJavaNetworkTransport $ Response { \n + int getHttpResponseCode ( ) ; \n + int getCustomResponseCode ( ) ; \n + java . lang . String [ ] getJNIFriendlyHeaders ( ) ; \n + java . lang . String getBody ( ) ; \n + } \n + \n + - keep class io . realm . internal . objectstore . OsJavaNetworkTransport $ Request { \n + < init > ( . . . ) ; \n + } \n + \n + - keep class io . realm . internal . OsSharedRealm $ SchemaChangedCallback { \n + void onSchemaChanged ( ) ; \n + } \n + \n + - keep class io . realm . internal . objectstore . OsApp { \n + io . realm . internal . objectstore . OsJavaNetworkTransport getNetworkTransport ( ) ; \n + } \n realm \ realm - library \ src \ objectServer \ java \ io \ realm \ internal \ jni \ OsJNIVoidResultCallback . java \n + import io . realm . internal . Keep ; \n + \n + @ Keep \n realm \ realm - library \ src \ objectServer \ java \ io \ realm \ mongodb \ AppException . java \n + import io . realm . internal . Keep ; \n + @ Keep \n realm \ realm - library \ src \ objectServer \ java \ io \ realm \ mongodb \ ErrorCode . java \n + import io . realm . internal . Keep ; \n + @ Keep \n
CHANGELOG . md \n - * None . \n + * Fixes concurrent modification exceptions in the schema when refreshing a Realm ( Issue [ # 6876 ] ( https : / / github . com / realm / realm - java / issues / 6876 ) ) \n - * None . \n + * Realm Object Server : 3 . 23 . 1 or later . \n + * File format : Generates Realms with format v11 ( Reads and upgrades all previous formats from Realm Java 2 . 0 and later ) . \n + * APIs are backwards compatible with all previous release of realm - java in the 7 . x . y series . \n realm \ realm - library \ src \ main \ java \ io \ realm \ internal \ ColumnIndices . java \n + import java . util . concurrent . ConcurrentHashMap ; \n - new HashMap < Class < ? extends RealmModel > , ColumnInfo > ( ) ; \n + new ConcurrentHashMap < Class < ? extends RealmModel > , ColumnInfo > ( ) ; \n
android \ guava \ src \ com \ google \ common \ util \ concurrent \ MoreExecutors . java \n - import com . google . common . util . concurrent . DirectExecutor ; \n - private static final class NeverSuccessfulListenableFutureTask extends AbstractFuture < Void > \n - implements Runnable { \n + private static final class NeverSuccessfulListenableFutureTask \n + extends AbstractFuture . TrustedFuture < Void > implements Runnable { \n guava \ src \ com \ google \ common \ util \ concurrent \ MoreExecutors . java \n - import com . google . common . util . concurrent . DirectExecutor ; \n - private static final class NeverSuccessfulListenableFutureTask extends AbstractFuture < Void > \n - implements Runnable { \n + private static final class NeverSuccessfulListenableFutureTask \n + extends AbstractFuture . TrustedFuture < Void > implements Runnable { \n
android \ guava - tests \ test \ com \ google \ common \ util \ concurrent \ AbstractFutureTest . java \n + @ SuppressWarnings ( { " DeprecatedThreadMethods " , " ThreadPriorityCheck " } ) \n guava - tests \ test \ com \ google \ common \ util \ concurrent \ AbstractFutureTest . java \n + @ SuppressWarnings ( { " DeprecatedThreadMethods " , " ThreadPriorityCheck " } ) \n
tools \ build _ defs \ pkg \ make _ deb . py \n - ( filename + ' / ' ) . ljust ( 16 ) , # filename ( SysV ) \n + ( six . ensure _ str ( filename ) + ' / ' ) . ljust ( 16 ) , # filename ( SysV ) \n - result = six . ensure _ str ( name ) + ' : ' \n + result = name + ' : ' \n - return six . ensure _ str ( result ) . replace ( ' \ n ' , ' \ n ' ) + ' \ n ' \n + return result . replace ( ' \ n ' , ' \ n ' ) + ' \ n ' \n - changes _ fh . write ( six . ensure _ binary ( changesdata , ' utf - 8 ' ) ) \n + changes _ fh . write ( six . ensure _ binary ( changesdata , ' utf - 8 ' ) . decode ( ' utf - 8 ' ) ) \n
site \ docs \ cc - toolchain - config - reference . md \n - Bazel does following changes to the features and their order to stay backwards \n - compatible : \n + Bazel applies the following changes to the toolchain ' s features for backwards \n + compatibility : \n
android \ guava \ src \ com \ google \ common \ collect \ MinMaxPriorityQueue . java \n + import org . checkerframework . checker . nullness . compatqual . NullableDecl ; \n - private Queue < E > forgetMeNot ; \n - private List < E > skipMe ; \n - private E lastFromForgetMeNot ; \n + @ MonotonicNonNullDecl private Queue < E > forgetMeNot ; \n + @ MonotonicNonNullDecl private List < E > skipMe ; \n + @ NullableDecl private E lastFromForgetMeNot ; \n guava \ src \ com \ google \ common \ collect \ MinMaxPriorityQueue . java \n + import org . checkerframework . checker . nullness . compatqual . NullableDecl ; \n - private Queue < E > forgetMeNot ; \n - private List < E > skipMe ; \n - private E lastFromForgetMeNot ; \n + @ MonotonicNonNullDecl private Queue < E > forgetMeNot ; \n + @ MonotonicNonNullDecl private List < E > skipMe ; \n + @ NullableDecl private E lastFromForgetMeNot ; \n
android \ guava \ src \ com \ google \ common \ util \ concurrent \ AbstractScheduledService . java \n + import org . checkerframework . checker . nullness . compatqual . MonotonicNonNullDecl ; \n - private volatile Future < ? > runningTask ; \n - private volatile ScheduledExecutorService executorService ; \n + @ MonotonicNonNullDecl private volatile Future < ? > runningTask ; \n + @ MonotonicNonNullDecl private volatile ScheduledExecutorService executorService ; \n guava \ src \ com \ google \ common \ util \ concurrent \ AbstractScheduledService . java \n + import org . checkerframework . checker . nullness . compatqual . MonotonicNonNullDecl ; \n - private volatile Future < ? > runningTask ; \n - private volatile ScheduledExecutorService executorService ; \n + @ MonotonicNonNullDecl private volatile Future < ? > runningTask ; \n + @ MonotonicNonNullDecl private volatile ScheduledExecutorService executorService ; \n
README . md \n - Guava is a set of core libraries that includes new collection types ( such as \n - multimap and multiset ) , immutable collections , a graph library , and utilities \n - for concurrency , I / O , hashing , primitives , strings , and more ! \n + Guava is a set of core Java libraries from Google that includes new collection types \n + ( such as multimap and multiset ) , immutable collections , a graph library , and \n + utilities for concurrency , I / O , hashing , caching , primitives , strings , and more ! It \n + is widely used on most Java projects within Google , and widely used by many \n + other companies as well . \n - # # Snapshots \n + # # Snapshots and Documentation \n
android \ guava \ src \ com \ google \ common \ util \ concurrent \ IgnoreJRERequirement . java \n + import static java . lang . annotation . ElementType . CONSTRUCTOR ; \n + import static java . lang . annotation . ElementType . METHOD ; \n + import static java . lang . annotation . ElementType . TYPE ; \n + \n + import java . lang . annotation . Target ; \n + \n + @ Target ( { METHOD , CONSTRUCTOR , TYPE } ) \n guava \ src \ com \ google \ common \ util \ concurrent \ IgnoreJRERequirement . java \n + import static java . lang . annotation . ElementType . CONSTRUCTOR ; \n + import static java . lang . annotation . ElementType . METHOD ; \n + import static java . lang . annotation . ElementType . TYPE ; \n + \n + import java . lang . annotation . Target ; \n + \n + @ Target ( { METHOD , CONSTRUCTOR , TYPE } ) \n
third _ party \ ijar \ zlib _ client . h \n + # include < limits > \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ java \ AndroidLintActionBuilder . java \n + for ( JavaPackageConfigurationProvider provider : androidLint . packageConfiguration ( ) ) { \n + if ( provider . matches ( ruleContext . getLabel ( ) ) ) { \n + cmd . addAll ( provider . javacopts ( ) ) ; \n + } \n + } \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ java \ AndroidLintTool . java \n + abstract ImmutableList < JavaPackageConfigurationProvider > packageConfiguration ( ) ; \n + \n - return create ( tool , options ) ; \n + ImmutableList < JavaPackageConfigurationProvider > packageConfiguration = \n + ImmutableList . copyOf ( \n + ruleContext . getPrerequisites ( \n + " android _ lint _ package _ configuration " , JavaPackageConfigurationProvider . class ) ) ; \n + return create ( tool , options , packageConfiguration ) ; \n - static AndroidLintTool create ( JavaToolchainTool tool , ImmutableList < String > options ) { \n - return new AutoValue _ AndroidLintTool ( tool , options ) ; \n + static AndroidLintTool create ( \n + JavaToolchainTool tool , \n + ImmutableList < String > options , \n + ImmutableList < JavaPackageConfigurationProvider > packageConfiguration ) { \n + return new AutoValue _ AndroidLintTool ( tool , options , packageConfiguration ) ; \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ java \ JavaToolchainRule . java \n + / * < ! - - # BLAZE _ RULE ( java _ toolchain ) . ATTRIBUTE ( android _ lint _ package _ configuration ) - - > \n + Android Lint Configuration that should be applied to the specified package groups . \n + < ! - - # END _ BLAZE _ RULE . ATTRIBUTE - - > * / \n + . add ( \n + attr ( " android _ lint _ package _ configuration " , LABEL _ LIST ) \n + . allowedFileTypes ( ) \n + . cfg ( ExecutionTransitionFactory . create ( ) ) \n + . mandatoryBuiltinProviders ( \n + ImmutableList . of ( JavaPackageConfigurationProvider . class ) ) ) \n
dubbo - registry \ dubbo - registry - nacos \ src \ main \ java \ org \ apache \ dubbo \ registry \ nacos \ NacosRegistry . java \n + import org . apache . dubbo . common . URLBuilder ; \n - import java . util . Collections ; \n - import static org . apache . dubbo . registry . Constants . ADMIN _ PROTOCOL ; \n + import static org . apache . dubbo . common . constants . RegistryConstants . EMPTY _ PROTOCOL ; \n + import static org . apache . dubbo . registry . Constants . ADMIN _ PROTOCOL ; \n - urls . addAll ( buildURLs ( url , instances ) ) ; \n + urls . addAll ( buildURLs ( url , serviceName , instances ) ) ; \n - notifySubscriber ( url , listener , instances ) ; \n + notifySubscriber ( url , serviceName , listener , instances ) ; \n - private List < URL > buildURLs ( URL consumerURL , Collection < Instance > instances ) { \n + private List < URL > buildURLs ( URL consumerURL , String serviceName , Collection < Instance > instances ) { \n - return Collections . emptyList ( ) ; \n + return emptyURL ( consumerURL , serviceName ) ; \n - notifySubscriber ( url , listener , e . getInstances ( ) ) ; \n + notifySubscriber ( url , serviceName , listener , e . getInstances ( ) ) ; \n + * @ param serviceName \n - private void notifySubscriber ( URL url , NotifyListener listener , Collection < Instance > instances ) { \n + private void notifySubscriber ( URL url , String serviceName , NotifyListener listener , Collection < Instance > instances ) { \n - List < URL > urls = buildURLs ( url , healthyInstances ) ; \n + List < URL > urls = buildURLs ( url , serviceName , healthyInstances ) ; \n + private List < URL > emptyURL ( URL consumerURL , String serviceName ) { \n + int i = serviceName . indexOf ( SERVICE _ NAME _ SEPARATOR ) ; \n + String category = i < 0 ? serviceName : serviceName . substring ( 0 , i ) ; \n + URL empty = URLBuilder . from ( consumerURL ) \n + . setProtocol ( EMPTY _ PROTOCOL ) \n + . addParameter ( CATEGORY _ KEY , category ) \n + . build ( ) ; \n + List < URL > result = new ArrayList < URL > ( ) ; \n + result . add ( empty ) ; \n + return result ; \n + } \n + \n
dubbo - bom \ pom . xml \n + < dependency > \n + < groupId > org . apache . dubbo < / groupId > \n + < artifactId > dubbo - metadata - definition - protobuf < / artifactId > \n + < version > $ { project . version } < / version > \n + < / dependency > \n
CHANGES \n - API Change : ParticleEmitter getSprite , setSprite , getImagePath , setImagePath are now getSprites , setSprites , getImagePaths , setImagePaths . \n - Added support for 2d particles independant scale X and Y . \n - API Change : ParticleEmitter getScale , matchSize are now getScaleX / getScaleY , matchSizeX / matchSizeY . Added scaleSize ( float scaleX , float scaleY ) \n + - API Change : Added iconDropped ( ) callback to AndroidWallpaperListener . \n - Fix performance regression in LWJGL3 backend , use java . nio instead of BufferUtils . Those are intrinsics and quite a bit faster than BufferUtils on HotSpot . \n CONTRIBUTORS \n + cypherdare https : / / github . com / cypherdare \n
gdx \ src \ com \ badlogic \ gdx \ assets \ loaders \ SkinLoader . java \n - Skin skin = new Skin ( atlas ) ; \n + Skin skin = generateSkin ( atlas ) ; \n + \n + / * * Override to allow subclasses of Skin to be loaded . \n + * @ param atlas The TextureAtlas that the skin will use . \n + * @ return A new Skin ( or subclass of Skin ) instance based on the provided TextureAtlas . * / \n + protected Skin generateSkin ( TextureAtlas atlas ) { \n + return new Skin ( atlas ) ; \n + } \n - } \n + } \n
gradle . properties \n - VERSION _ NAME = 1 . 1 . 6 \n - VERSION _ CODE = 17 \n + VERSION _ NAME = 1 . 1 . 7 \n + VERSION _ CODE = 18 \n library \ src \ main \ java \ com \ daimajia \ swipe \ adapters \ SimpleCursorSwipeAdapter . java \n - import android . annotation . TargetApi ; \n + import android . support . v4 . widget . SimpleCursorAdapter ; \n - import android . widget . SimpleCursorAdapter ; \n - @ TargetApi ( 11 ) \n
demo \ src \ main \ java \ com \ daimajia \ swipedemo \ MyActivity . java \n - import com . daimajia . swipe . SimpleSwipeListener ; \n - sample1 . addSwipeListener ( new SimpleSwipeListener ( ) { \n - @ Override \n - public void onOpen ( SwipeLayout layout ) { \n - Toast . makeText ( MyActivity . this , " Opened " , Toast . LENGTH _ SHORT ) . show ( ) ; \n - } \n - } ) ; \n gradle . properties \n - VERSION _ NAME = 1 . 0 . 8 \n - VERSION _ CODE = 9 \n + VERSION _ NAME = 1 . 1 . 0 \n + VERSION _ CODE = 11 \n library \ src \ main \ java \ com \ daimajia \ swipe \ SwipeLayout . java \n - import android . widget . HeaderViewListAdapter ; \n + private boolean mSwipeEnabled = true ; \n + \n + \n + if ( ! isEnabled ( ) | | ! isEnabledInAdapterView ( ) ) { \n + return true ; \n + } \n + \n + if ( ! isSwipeEnabled ( ) ) { \n + return false ; \n + } \n + \n - \n - if ( ! isEnabledInAdapterView ( ) ) \n + if ( ! isEnabledInAdapterView ( ) | | ! isEnabled ( ) ) \n + if ( ! isSwipeEnabled ( ) ) \n + return super . onTouchEvent ( event ) ; \n + \n + \n - enable & = ( ( BaseAdapter ) adapter ) . isEnabled ( p ) ; \n + enable = ( ( BaseAdapter ) adapter ) . isEnabled ( p ) ; \n - enable & = ( ( ListAdapter ) adapter ) . isEnabled ( p ) ; \n - } else if ( adapter instanceof HeaderViewListAdapter ) { \n - enable & = ( ( HeaderViewListAdapter ) adapter ) . isEnabled ( p ) ; \n + enable = ( ( ListAdapter ) adapter ) . isEnabled ( p ) ; \n + public void setSwipeEnabled ( boolean enabled ) { \n + mSwipeEnabled = enabled ; \n + } \n + \n + public boolean isSwipeEnabled ( ) { \n + return mSwipeEnabled ; \n + } \n + \n
. github \ workflows \ build . yml \n + if : " ! contains ( github . event . head _ commit . message , ' ci skip ' ) " \n - uses : actions / checkout @ v2 \n + if : " ! contains ( github . event . head _ commit . message , ' ci skip ' ) " \n
CHANGES \n - [ BREAKING CHANGE ] iOS : IOSUIViewController has been moved to its own separate class \n - [ BREAKING CHANGE ] API Change : G3D AnimationDesc # update now returns - 1 ( instead of 0 ) if animation not finished . \n - [ BREAKING CHANGE ] InputEventQueue no longer implements InputProcessor , pass InputProcessor to # drain . \n + - [ BREAKING CHANGE ] HeadlessApplicationConfiguration # renderInterval was changed to # updatesPerSecond \n - API addition : Added Pixmap # setPixels ( ByteBuffer ) . \n - API change : ScreenUtils # getFrameBufferPixmap is deprecated in favor to new method Pixmap # createFromFrameBuffer . \n - API Addition : Added overridable createFiles ( ) methods to backend application classes to allow initializing custom module implementations . \n - API Addition : Add a Graphics # setForegroundFPS ( ) method . \n - - API Change : HeadlessApplicationConfiguration # renderInterval was changed to # updatesPerSecond \n - [ BREAKING CHANGE ] Fixed keycode representations for ESCAPE , END , INSERT and F1 to F12 . These keys are working on Android now , but if you hardcoded or saved the values you might need to migrate . \n
docs \ reference \ api - conventions . asciidoc \n - Some indices ( hereafter " system indices " ) are used by various system \n - modules and / or plugins to store state or configuration . These indices \n - are not intended to be accessed directly , and accessing them directly is \n - deprecated . In the next major version , access to these indices will no longer be \n - allowed to prevent accidental operations that may cause problems with \n - Elasticsearch features which depend on the consistency of data in these \n - indices . \n - \n + [ [ hidden - indices ] ] \n + = = = = Hidden indices \n + \n + Indices that are configured to be hidden with the < < index - hidden , index . hidden > > setting are \n + excluded from mult - target queries by default . \n + To include hidden indices , you must specify the ` expand _ wildcards ` parameter . \n + \n + The backing indices for data streams are hidden indices , \n + and some features like { ml } store information in hidden indices . \n + \n + Global index templates that match all indices are not applied to hidden indices . \n + \n + [ [ system - indices ] ] \n + = = = = System indices \n + \n + { es } modules and plugins can store configuration and state information in internal _ system indices _ . \n + You should not directly access or modify system indices \n + as they contain data essential to the operation of the system . \n + \n + IMPORTANT : Direct access to system indices is deprecated and \n + will no longer be allowed in the next major version . \n + \n docs \ reference \ rest - api \ common - parms . asciidoc \n - Expand to open and closed indices , including < < index - hidden , hidden indices > > . \n + Expand to open and closed indices , including < < hidden - indices , hidden indices > > . \n - Expansion of wildcards will include < < index - hidden , hidden indices > > . \n + Expansion of wildcards will include hidden indices . \n
new file \n docs \ reference \ dependencies - versions . asciidoc \n + [ " appendix " , id = " dependencies - versions " ] \n + = Dependencies and versions \n + \n + [ source , text ] \n + - - - - \n + include : : { dependencies - dir } / version . properties [ ] \n + - - - - \n docs \ reference \ index . asciidoc \n + : dependencies - dir : { elasticsearch - root } / buildSrc \n + include : : dependencies - versions . asciidoc [ ] \n + \n
build . gradle \n - ext . animalSnifferVersion = " 1 . 5 . 2 " \n + ext . animalSnifferVersion = " 1 . 5 . 3 " \n
build . gradle \n - ext . bndVersion = " 5 . 2 . 0 " \n + ext . bndVersion = " 5 . 3 . 0 " \n
pom . xml \n - < version > 4 . 0 . 2 < / version > \n + < version > 5 . 0 . 0 < / version > \n suppressed - cves . xml \n + < suppress > \n + < notes > < ! [ CDATA [ False positive : Liquibase ( CVE - 2015 - 9251 , CVE - 2018 - 14040 , CVE - 2018 - 14041 , CVE - 2018 - 14042 , CVE - 2019 - 11358 , CVE - 2019 - 8331 ) ] ] > < / notes > \n + < cve > CVE - 2015 - 9251 < / cve > \n + < cve > CVE - 2018 - 14040 < / cve > \n + < cve > CVE - 2018 - 14041 < / cve > \n + < cve > CVE - 2018 - 14042 < / cve > \n + < cve > CVE - 2019 - 11358 < / cve > \n + < cve > CVE - 2019 - 8331 < / cve > \n + < / suppress > \n
dropwizard - bom \ pom . xml \n - < version > 9 . 0 . 20 < / version > \n + < version > 9 . 0 . 21 < / version > \n
dropwizard - dependencies \ pom . xml \n - < liquibase - core . version > 4 . 2 . 2 < / liquibase - core . version > \n + < liquibase - core . version > 4 . 3 . 0 < / liquibase - core . version > \n
dropwizard - dependencies \ pom . xml \n - < jackson . version > 2 . 12 . 0 < / jackson . version > \n + < jackson . version > 2 . 12 . 1 < / jackson . version > \n
pom . xml \n - < mockito . version > 2 . 25 . 1 < / mockito . version > \n + < mockito . version > 2 . 26 . 0 < / mockito . version > \n
dropwizard - bom \ pom . xml \n - < version > 2 . 7 . 0 < / version > \n + < version > 2 . 8 . 0 < / version > \n
docs \ requirements . txt \n - Sphinx = = 1 . 8 . 3 \n + Sphinx = = 1 . 8 . 4 \n
dropwizard - bom \ pom . xml \n - < jackson . version > 2 . 9 . 8 < / jackson . version > \n + < jackson . version > 2 . 9 . 9 < / jackson . version > \n
guava - gwt \ test \ com \ google \ common \ collect \ testModule . gwt . xml \n - < inherits name = " com . google . common . truth . Truth8 " / > \n
guava - gwt \ test \ com \ google \ common \ base \ SplitterTest _ gwt . java \n + public void testCharacterSimpleSplitToStream ( ) throws Exception { \n + com . google . common . base . SplitterTest testCase = new com . google . common . base . SplitterTest ( ) ; \n + testCase . testCharacterSimpleSplitToStream ( ) ; \n + } \n + \n guava - tests \ test \ com \ google \ common \ base \ SplitterTest . java \n + import static com . google . common . collect . ImmutableList . toImmutableList ; \n + public void testCharacterSimpleSplitToStream ( ) { \n + String simple = " a , b , c " ; \n + List < String > letters = COMMA _ SPLITTER . splitToStream ( simple ) . collect ( toImmutableList ( ) ) ; \n + assertThat ( letters ) . containsExactly ( " a " , " b " , " c " ) . inOrder ( ) ; \n + } \n + \n guava \ src \ com \ google \ common \ base \ Splitter . java \n + import java . util . stream . Stream ; \n + import java . util . stream . StreamSupport ; \n - * { @ link # splitToList ( CharSequence ) } . \n + * { @ link # splitToList ( CharSequence ) } . Java 8 users may prefer { @ link # splitToStream } instead . \n + / * * \n + * Splits { @ code sequence } into string components and makes them available through an { @ link \n + * Stream } , which may be lazily evaluated . If you want an eagerly computed { @ link List } , use \n + * { @ link # splitToList ( CharSequence ) } . \n + * \n + * @ param sequence the sequence of characters to split \n + * @ return a stream over the segments split from the parameter \n + * @ since NEXT \n + * / \n + @ Beta \n + public Stream < String > splitToStream ( CharSequence sequence ) { \n + / / Can ' t use Streams . stream ( ) from base \n + return StreamSupport . stream ( split ( sequence ) . spliterator ( ) , false ) ; \n + } \n + \n
picasso \ src \ main \ java \ com \ squareup \ picasso \ BitmapHunter . java \n - Transformation transformation = transformations . get ( i ) ; \n + final Transformation transformation = transformations . get ( i ) ; \n - StringBuilder builder = new StringBuilder ( ) / / \n + final StringBuilder builder = new StringBuilder ( ) / / \n - throw new NullPointerException ( builder . toString ( ) ) ; \n + Picasso . HANDLER . post ( new Runnable ( ) { \n + @ Override public void run ( ) { \n + throw new NullPointerException ( builder . toString ( ) ) ; \n + } \n + } ) ; \n + return null ; \n - throw new IllegalStateException ( \n - " Transformation " + transformation . key ( ) + " returned input Bitmap but recycled it . " ) ; \n + Picasso . HANDLER . post ( new Runnable ( ) { \n + @ Override public void run ( ) { \n + throw new IllegalStateException ( \n + " Transformation " + transformation . key ( ) + " returned input Bitmap but recycled it . " ) ; \n + } \n + } ) ; \n + return null ; \n - throw new IllegalStateException ( " Transformation " \n - + transformation . key ( ) \n - + " mutated input Bitmap but failed to recycle the original . " ) ; \n + Picasso . HANDLER . post ( new Runnable ( ) { \n + @ Override public void run ( ) { \n + throw new IllegalStateException ( " Transformation " \n + + transformation . key ( ) \n + + " mutated input Bitmap but failed to recycle the original . " ) ; \n + } \n + } ) ; \n + return null ; \n + \n picasso \ src \ test \ java \ com \ squareup \ picasso \ BitmapHunterTest . java \n - @ Test public void reusedBitmapIsNotRecycled ( ) { \n + @ Test public void reusedBitmapIsNotRecycled ( ) throws Exception { \n
picasso \ src \ main \ java \ com \ squareup \ picasso \ BitmapHunter . java \n - int inWidth = result . getWidth ( ) ; \n - int inHeight = result . getHeight ( ) ; \n + boolean swapDimens = exifRotation = = 90 | | exifRotation = = 270 ; \n + int inWidth = swapDimens ? result . getHeight ( ) : result . getWidth ( ) ; \n + int inHeight = swapDimens ? result . getWidth ( ) : result . getHeight ( ) ; \n picasso \ src \ test \ java \ com \ squareup \ picasso \ BitmapHunterTest . java \n + @ Test public void exif90SwapsDimensions ( ) throws Exception { \n + Request data = new Request . Builder ( URI _ 1 ) . build ( ) ; \n + Bitmap in = Bitmap . createBitmap ( 30 , 40 , null ) ; \n + Bitmap out = transformResult ( data , in , 90 ) ; \n + assertThat ( out ) . hasWidth ( 40 ) . hasHeight ( 30 ) ; \n + } \n + \n + @ Test public void exif270SwapsDimensions ( ) throws Exception { \n + Request data = new Request . Builder ( URI _ 1 ) . build ( ) ; \n + Bitmap in = Bitmap . createBitmap ( 30 , 40 , null ) ; \n + Bitmap out = transformResult ( data , in , 270 ) ; \n + assertThat ( out ) . hasWidth ( 40 ) . hasHeight ( 30 ) ; \n + } \n + \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ cpp \ CppModuleMapAction . java \n - / * makeExecutable = * / false ) ; \n + / / In theory , module maps should not be executable but , in practice , we don ' t care . As \n + / / ' executable ' is the default ( see ActionMetadataHandler . setPathReadOnlyAndExecutable ( ) ) , \n + / / we want to avoid the extra file operation of making this file non - executable . \n + / * makeExecutable = * / true ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ cpp \ CcCompilationHelper . java \n - false ) ; \n + / / If we generate pic actions , we prefer the header actions to use the pic mode . \n + generatePicAction ) ; \n
hystrix - contrib \ hystrix - javanica \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ javanica \ aop \ aspectj \ HystrixCommandAspect . java \n + import com . netflix . hystrix . contrib . javanica . exception . CommandActionExecutionException ; \n + import com . netflix . hystrix . exception . HystrixRuntimeException ; \n + } catch ( HystrixRuntimeException e ) { \n + throw getCauseOrDefault ( e , e ) ; \n + private Throwable getCauseOrDefault ( RuntimeException e , RuntimeException defaultException ) { \n + if ( e . getCause ( ) = = null ) return defaultException ; \n + if ( e . getCause ( ) instanceof CommandActionExecutionException ) { \n + CommandActionExecutionException commandActionExecutionException = ( CommandActionExecutionException ) e . getCause ( ) ; \n + return Optional . fromNullable ( commandActionExecutionException . getCause ( ) ) . or ( defaultException ) ; \n + } \n + return e . getCause ( ) ; \n + } \n + \n hystrix - contrib \ hystrix - javanica \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ javanica \ command \ AbstractHystrixCommand . java \n - if ( cause instanceof Exception ) { \n + if ( cause instanceof RuntimeException ) { \n + throw ( RuntimeException ) cause ; \n + } else if ( cause instanceof Exception ) { \n - throw Throwables . propagate ( cause ) ; \n + / / instance of Throwable \n + throw new CommandActionExecutionException ( cause ) ; \n hystrix - contrib \ hystrix - javanica \ src \ test \ java \ com \ netflix \ hystrix \ contrib \ javanica \ test \ common \ error \ BasicDefaultIgnoreExceptionsTest . java \n - @ Test ( expected = HystrixRuntimeException . class ) \n + @ Test ( expected = BadRequestException . class ) \n - @ Test ( expected = HystrixRuntimeException . class ) \n + @ Test ( expected = SpecificException . class ) \n hystrix - contrib \ hystrix - javanica \ src \ test \ java \ com \ netflix \ hystrix \ contrib \ javanica \ test \ common \ error \ BasicErrorPropagationTest . java \n - @ Test ( expected = HystrixRuntimeException . class ) \n + @ Test ( expected = OperationException . class ) \n + @ Test ( expected = NotFoundException . class ) \n + public void testPropagateCauseException ( ) throws NotFoundException { \n + userService . deleteUser ( " " ) ; \n + } \n + \n + @ HystrixCommand \n + public Object deleteUser ( String id ) throws NotFoundException { \n + throw new NotFoundException ( " " ) ; \n + } \n + \n
hystrix - contrib \ hystrix - javanica \ src \ main \ java \ com \ netflix \ hystrix \ contrib \ javanica \ utils \ AopUtils . java \n + info . append ( " Declaring class : \ n " ) ; \n + info . append ( m . getDeclaringClass ( ) . getCanonicalName ( ) ) . append ( " \ n " ) ; \n + \n
guava - tests \ test \ com \ google \ common \ escape \ ArrayBasedCharEscaperTest . java \n - import java . util . Map ; \n - private static final Map < Character , String > NO _ REPLACEMENTS = \n - ImmutableMap . of ( ) ; \n - private static final Map < Character , String > SIMPLE _ REPLACEMENTS = \n + private static final ImmutableMap < Character , String > NO _ REPLACEMENTS = ImmutableMap . of ( ) ; \n + private static final ImmutableMap < Character , String > SIMPLE _ REPLACEMENTS = \n
guava - tests \ test \ com \ google \ common \ net \ HostSpecifierTest . java \n - import java . util . List ; \n - private static final List < String > GOOD _ IPS = ImmutableList . of ( \n - " 1 . 2 . 3 . 4 " , " 2001 : db8 : : 1 " , " [ 2001 : db8 : : 1 ] " ) ; \n + private static final ImmutableList < String > GOOD _ IPS = \n + ImmutableList . of ( " 1 . 2 . 3 . 4 " , " 2001 : db8 : : 1 " , " [ 2001 : db8 : : 1 ] " ) ; \n - private static final List < String > BAD _ IPS = ImmutableList . of ( \n - " 1 . 2 . 3 " , " 2001 : db8 : : 1 : : : : : : 0 " , " [ 2001 : db8 : : 1 " , " [ : : ] : 80 " ) ; \n + private static final ImmutableList < String > BAD _ IPS = \n + ImmutableList . of ( " 1 . 2 . 3 " , " 2001 : db8 : : 1 : : : : : : 0 " , " [ 2001 : db8 : : 1 " , " [ : : ] : 80 " ) ; \n - private static final List < String > GOOD _ DOMAINS = ImmutableList . of ( \n - " com " , " google . com " , " foo . co . uk " ) ; \n + private static final ImmutableList < String > GOOD _ DOMAINS = \n + ImmutableList . of ( " com " , " google . com " , " foo . co . uk " ) ; \n - private static final List < String > BAD _ DOMAINS = ImmutableList . of ( \n - " foo . blah " , " " , " [ google . com ] " ) ; \n + private static final ImmutableList < String > BAD _ DOMAINS = \n + ImmutableList . of ( " foo . blah " , " " , " [ google . com ] " ) ; \n
android \ guava - tests \ test \ com \ google \ common \ base \ SuppliersTest . java \n - private void memoizeExceptionThrownTest ( ThrowingSupplier memoizedSupplier ) { \n + private void memoizeExceptionThrownTest ( ThrowingSupplier throwingSupplier ) { \n + Supplier < Integer > memoizedSupplier = Suppliers . memoize ( throwingSupplier ) ; \n guava - tests \ test \ com \ google \ common \ base \ SuppliersTest . java \n - private void memoizeExceptionThrownTest ( ThrowingSupplier memoizedSupplier ) { \n + private void memoizeExceptionThrownTest ( ThrowingSupplier throwingSupplier ) { \n + Supplier < Integer > memoizedSupplier = Suppliers . memoize ( throwingSupplier ) ; \n
android \ guava - tests \ test \ com \ google \ common \ cache \ EmptyCachesTest . java \n - values . toArray ( null ) ; \n + values . toArray ( ( Object [ ] ) null ) ; \n - entries . toArray ( null ) ; \n + entries . toArray ( ( Entry < Object , Object > [ ] ) null ) ; \n guava - tests \ test \ com \ google \ common \ cache \ EmptyCachesTest . java \n - values . toArray ( null ) ; \n + values . toArray ( ( Object [ ] ) null ) ; \n - entries . toArray ( null ) ; \n + entries . toArray ( ( Entry < Object , Object > [ ] ) null ) ; \n
spring - boot - project \ spring - boot - tools \ spring - boot - test - support \ src \ main \ java \ org \ springframework \ boot \ testsupport \ testcontainers \ DockerImageNames . java \n - * Copyright 2012 - 2020 the original author or authors . \n + * Copyright 2012 - 2021 the original author or authors . \n - private static final String CASSANDRA _ VERSION = " 3 . 11 . 2 " ; \n + private static final String CASSANDRA _ VERSION = " 3 . 11 . 10 " ; \n - private static final String MONGO _ VERSION = " 4 . 0 . 10 " ; \n + private static final String MONGO _ VERSION = " 4 . 0 . 23 " ; \n - private static final String POSTGRESQL _ VERSION = " 9 . 6 . 12 " ; \n + private static final String POSTGRESQL _ VERSION = " 9 . 6 . 21 " ; \n - private static final String REDIS _ VERSION = " 4 . 0 . 6 " ; \n + private static final String REDIS _ VERSION = " 4 . 0 . 14 " ; \n
spring - boot - project \ spring - boot \ src \ main \ java \ org \ springframework \ boot \ context \ properties \ source \ PrefixedConfigurationPropertySource . java \n - String prefix = ( StringUtils . hasText ( this . prefix ) ) ? this . prefix + " . " : " " ; \n + if ( ! StringUtils . hasText ( this . prefix ) ) { \n + return name ; \n + } \n + String prefix = this . prefix + " . " ; \n spring - boot - project \ spring - boot \ src \ main \ java \ org \ springframework \ boot \ context \ properties \ source \ PrefixedIterableConfigurationPropertySource . java \n + import org . springframework . util . StringUtils ; \n + \n + if ( ! StringUtils . hasText ( getPrefix ( ) ) ) { \n + return getSource ( ) . stream ( ) ; \n + } \n spring - boot - project \ spring - boot \ src \ test \ java \ org \ springframework \ boot \ context \ properties \ source \ PrefixedIterableConfigurationPropertySourceTests . java \n + @ Test \n + void emptyPrefixShouldReturnOriginalStream ( ) { \n + MockConfigurationPropertySource source = new MockConfigurationPropertySource ( ) ; \n + source . put ( " my . foo . bar " , " bing " ) ; \n + source . put ( " my . foo . baz " , " biff " ) ; \n + source . put ( " hello . bing " , " blah " ) ; \n + IterableConfigurationPropertySource prefixed = source . withPrefix ( " " ) ; \n + assertThat ( prefixed . stream ( ) ) . containsExactly ( ConfigurationPropertyName . of ( " my . foo . bar " ) , \n + ConfigurationPropertyName . of ( " my . foo . baz " ) , ConfigurationPropertyName . of ( " hello . bing " ) ) ; \n + } \n + \n
src \ main \ java \ org \ junit \ internal \ runners \ ErrorReportingRunner . java \n + import org . junit . runner . notification . Failure ; \n - notifier . testAborted ( describeChild ( child ) , child ) ; \n + Description description = describeChild ( child ) ; \n + notifier . fireTestStarted ( description ) ; \n + notifier . fireTestFailure ( new Failure ( description , child ) ) ; \n + notifier . fireTestFinished ( description ) ; \n src \ main \ java \ org \ junit \ runner \ Description . java \n - * Description of a Runner which runs no tests \n + * Describes a Runner which runs no tests \n - \n + / * * \n + * Describes a step in the test - running mechanism that goes so wrong no \n + * other description can be used ( for example , an exception thrown from a Runner ' s \n + * constructor \n + * / \n + / * * \n + * @ return true if this is a description of a Runner that runs no tests \n + * / \n + / * * \n + * @ return a copy of this description , with no children ( on the assumption that some of the \n + * children will be added back ) \n + * / \n + / / TODO : should include annotations \n + / * * \n + * @ return the annotation of type annotationType that is attached to this description node , \n + * or null if none exists \n + * / \n + / * * \n + * @ return all of the annotations attached to this description node \n + * / \n src \ main \ java \ org \ junit \ runner \ notification \ RunNotifier . java \n - \n - public void testAborted ( Description description , Throwable cause ) { \n - fireTestStarted ( description ) ; \n - fireTestFailure ( new Failure ( description , cause ) ) ; \n - fireTestFinished ( description ) ; \n - } \n
build . xml \n - < property name = " version " value = " 4 . 6 - SNAPSHOT - $ { DSTAMP } - $ { TSTAMP } " / > \n + < property name = " version " value = " 4 . 5 " / > \n
android \ AndroidManifest . xml \n - - > \n - android : versionName = " 4 . 11 beta 1 " \n - android : versionCode = " 82 " \n + android : versionName = " 4 . 2 beta 1 " \n + android : versionCode = " 83 " \n android \ assets \ html - en \ whatsnew . html \n - < p > < strong > New in version 4 . 11 : < / strong > < / p > \n + < p > < strong > New in version 4 . 2 : < / strong > < / p > \n + < li > Rewrote the autofocus code to be more reliable . < / li > \n + < li > Started using continuous focus mode on devices which support it . < / li > \n + < li > Made the volume buttons turn the front light on and off . < / li > \n + < li > Added support for 2 digit EAN extension codes . < / li > \n - < / ul > \n - < p > < strong > New in version 4 . 1 : < / strong > < / p > \n - < ul > \n - < li > Made compatibility fixes for Optimus V and Galaxy Tab devices . < / li > \n - < li > Improved QR Code character set detection . < / li > \n - < li > Made more translation fixes . < / li > \n - < li > Improved URL handling for bitcoin and others . < / li > \n - < li > Fixed a few rare crashes . < / li > \n - < li > Improved scanning speed a little . < / li > \n + < li > Improved French , Dutch , and Finnish translations . < / li > \n
android \ AndroidManifest . xml \n - - > \n - android : versionName = " 4 . 2 beta 1 " \n - android : versionCode = " 83 " \n + android : versionName = " 4 . 2 " \n + android : versionCode = " 84 " \n
junit \ runner \ TestRunListener . java \n - package junit . runner ; \n - / * * \n - * A listener interface for observing the \n - * execution of a test run . Unlike TestListener , \n - * this interface using only primitive objects , \n - * making it suitable for remote test execution . \n - * / \n - public interface TestRunListener { \n - / * test status constants * / \n - public static final int STATUS _ ERROR = 1 ; \n - public static final int STATUS _ FAILURE = 2 ; \n - \n - public void testRunStarted ( String testSuiteName , int testCount ) ; \n - public void testRunEnded ( long elapsedTime ) ; \n - public void testRunStopped ( long elapsedTime ) ; \n - public void testStarted ( String testName ) ; \n - public void testEnded ( String testName ) ; \n - public void testFailed ( int status , String testName , String trace ) ; \n - } \n + package junit . runner ; \n + / * * \n + * A listener interface for observing the \n + * execution of a test run . Unlike TestListener , \n + * this interface using only primitive objects , \n + * making it suitable for remote test execution . \n + * / \n + public interface TestRunListener { \n + / * test status constants * / \n + public static final int STATUS _ ERROR = 1 ; \n + public static final int STATUS _ FAILURE = 2 ; \n + \n + public void testRunStarted ( String testSuiteName , int testCount ) ; \n + public void testRunEnded ( long elapsedTime ) ; \n + public void testRunStopped ( long elapsedTime ) ; \n + public void testStarted ( String testName ) ; \n + public void testEnded ( String testName ) ; \n + public void testFailed ( int status , String testName , String trace ) ; \n + } \n
junit \ awtui \ TestRunner . java \n - private static final String SUITE _ METHODNAME = " suite " ; \n junit \ framework \ Assert . java \n - failSame ( message , expected , actual ) ; \n + failSame ( message ) ; \n - static private void failSame ( String message , Object expected , Object actual ) { \n + static private void failSame ( String message ) { \n junit \ swingui \ CounterPanel . java \n - private String asString ( int value ) { \n - return Integer . toString ( value ) ; \n - } \n - \n junit \ swingui \ TestRunner . java \n - private static Font PLAIN _ FONT = StatusLine . PLAIN _ FONT ; \n - private static Font BOLD _ FONT = StatusLine . BOLD _ FONT ; \n - appendFailure ( " Error " , test , t ) ; \n + appendFailure ( test , t ) ; \n - appendFailure ( " Failure " , test , t ) ; \n + appendFailure ( test , t ) ; \n - private void appendFailure ( String kind , Test test , Throwable t ) { \n + private void appendFailure ( Test test , Throwable t ) { \n junit \ tests \ runner \ TextRunnerTest . java \n - import junit . framework . * ; \n - import junit . framework . TestResult ; \n - \n - import java . io . * ; \n + import java . io . File ; \n + import java . io . InputStream ; \n + import java . io . OutputStream ; \n + import java . io . PrintStream ; \n + \n + import junit . framework . TestCase ; \n + import junit . framework . TestResult ; \n + import junit . framework . TestSuite ; \n
doc \ cookbook \ cookbook . htm \n + < p > \n + Kent Beck , Erich Gamma < / p > \n + \n + < li > \n + Create a constructor which accepts a String as a parameter and passes it to the superclass . < / li > \n + \n - When you want to check a value , call < tt > assert < / tt > ( ) and pass a boolean \n + When you want to check a value , call < tt > assertTrue < / tt > ( ) and pass a boolean \n - & nbsp ; & nbsp ; & nbsp ; assert ( expected . equals ( result ) ) ; \n + & nbsp ; & nbsp ; & nbsp ; assertTrue ( expected . equals ( result ) ) ; \n + < li > \n + Create a constructor which accepts a String as a parameter and passes it to the superclass . < / li > \n + \n
doc \ cookbook \ cookbook . htm \n - < pre > < tt > < font size = - 2 > public void testSimpleAdd ( ) { \n - < / font > & nbsp ; & nbsp ; & nbsp ; Money m12CHF = new Money ( 12 , & quot ; CHF & quot ; ) ; & nbsp ; \n + < pre > < tt > public void testSimpleAdd ( ) { \n + & nbsp ; & nbsp ; & nbsp ; Money m12CHF = new Money ( 12 , & quot ; CHF & quot ; ) ; & nbsp ; \n - tool . Start it by typing < tt > java < / tt > < tt > < a href = " . . / . . / javadoc / junit / awtui / TestRunner . html " > junit . awtui . TestRunner < / a > \n - or < a href = " . . / . . / javadoc / junit / swingui / TestRunner . html " > junit . swingui . TestRunner < / a > < / tt > . \n + tool . Start it by typing < tt > java < / tt > < tt > < a href = " http : / / www . junit . org / junit / javadoc / 3 . 8 / junit / awtui / TestRunner . html " > junit . awtui . TestRunner < / a > \n + or < a href = " http : / / www . junit . org / junit / javadoc / 3 . 8 / junit / swingui / TestRunner . html " > junit . swingui . TestRunner < / a > < / tt > . \n - < a href = " . . / . . / javadoc / junit / runner / LoadingTestCollector . html " > junit . runner . LoadingTestCollector \n + < a href = " http : / / www . junit . org / junit / javadoc / 3 . 8 / junit / runner / LoadingTestCollector . html " > junit . runner . LoadingTestCollector \n - < p > There is a batch interface to JUnit , also . To use it type < tt > java < a href = " . . / . . / javadoc / junit / textui / TestRunner . html " > junit . textui . TestRunner < / a > < / tt > \n + < p > There is a batch interface to JUnit , also . To use it type < tt > java < a href = " http : / / www . junit . org / junit / javadoc / 3 . 8 / junit / textui / TestRunner . html " > junit . textui . TestRunner < / a > < / tt > \n
ReactCommon \ jsi \ Android . mk \n + ifeq ( $ ( BUILD _ FABRIC ) , true ) \n + LOCAL _ CFLAGS + = - DRN _ FABRIC _ ENABLED \n + endif \n + \n
ReactCommon \ react \ renderer \ core \ tests \ TestComponent . h \n - using ViewProps : : ViewProps ; \n + TestProps ( ) = default ; \n
codec - http2 \ src \ main \ java \ io \ netty \ handler \ codec \ http2 \ HpackDynamicTable . java \n - size + = header . size ( ) ; \n + size + = headerSize ; \n codec - http2 \ src \ test \ java \ io \ netty \ handler \ codec \ http2 \ HpackDynamicTableTest . java \n + \n + @ Test \n + public void testAdd ( ) { \n + HpackDynamicTable table = new HpackDynamicTable ( 100 ) ; \n + assertEquals ( 0 , table . size ( ) ) ; \n + HpackHeaderField entry1 = new HpackHeaderField ( " foo " , " bar " ) ; / / size : 3 + 3 + 32 = 38 \n + HpackHeaderField entry2 = new HpackHeaderField ( " hello " , " world " ) ; \n + table . add ( entry1 ) ; / / success \n + assertEquals ( entry1 . size ( ) , table . size ( ) ) ; \n + table . setCapacity ( 32 ) ; / / entry1 is removed from table \n + assertEquals ( 0 , table . size ( ) ) ; \n + assertEquals ( 0 , table . length ( ) ) ; \n + table . add ( entry1 ) ; / / fail quietly \n + assertEquals ( 0 , table . size ( ) ) ; \n + assertEquals ( 0 , table . length ( ) ) ; \n + table . setCapacity ( 64 ) ; \n + table . add ( entry1 ) ; / / success \n + assertEquals ( entry1 . size ( ) , table . size ( ) ) ; \n + assertEquals ( 1 , table . length ( ) ) ; \n + table . add ( entry2 ) ; / / entry2 is added , but entry1 is removed from table \n + assertEquals ( entry2 . size ( ) , table . size ( ) ) ; \n + assertEquals ( 1 , table . length ( ) ) ; \n + assertEquals ( entry2 , table . getEntry ( 1 ) ) ; \n + } \n
common \ src \ main \ java \ io \ netty \ util \ internal \ PromiseNotificationUtil . java \n - } else { \n + } else if ( logger . isWarnEnabled ( ) ) { \n
src \ clj \ clojure \ core _ print . clj \n - ; ; Types \n - \n - ( defn - print - deftype [ o ^ Writer w ] \n - ( . write w " # " ) \n - ( . write w ( . getName ( class o ) ) ) \n - ( let [ basii ( for [ fld ( map str ( clojure . lang . Reflector / invokeStaticMethod ( class o ) " getBasis " ( to - array [ ] ) ) ) ] \n - ( clojure . lang . Reflector / getInstanceField o fld ) ) ] \n - ( print - sequential " [ " pr - on " , " " ] " basii w ) ) ) \n - \n - ( defmethod print - method clojure . lang . IType [ o ^ Writer w ] \n - ( print - deftype o w ) ) \n - \n - ( defmethod print - dup clojure . lang . IType [ o ^ Writer w ] \n - ( print - deftype o w ) ) \n - \n - \n test \ clojure \ test _ clojure \ protocols . clj \n - ( binding [ * print - dup * true * verbose - defrecords * true ] ( pr - str r ) ) ) ) \n - ( is ( = " # clojure . test _ clojure . protocols . TypeToTestLiterals [ 42 ] " \n - ( binding [ * print - dup * true ] ( pr - str ( TypeToTestLiterals . 42 ) ) ) ) ) ) ) ) \n + ( binding [ * print - dup * true * verbose - defrecords * true ] ( pr - str r ) ) ) ) ) ) ) \n
test \ clojure \ test _ clojure \ java _ interop . clj \n + ; ( . target - prop ) \n + ( are [ x y ] ( = x y ) \n + ( let [ p ( java . awt . Point . 1 2 ) ] \n + 1 ( . - x p ) \n + 2 ( . - y p ) \n + 1 ( . p - x ) \n + 2 ( . p - y ) \n + 1 ( . ( java . awt . Point . 1 2 ) - x ) \n + 2 ( . ( java . awt . Point . 1 2 ) - y ) ) ) \n + \n
samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ vito \ FrescoVitoLithoSimpleFragment . java \n - \n - return FrescoVitoImage2 . create ( c ) . uri ( uri ) . imageOptions ( IMAGE _ OPTIONS ) \n - . onFadeListener ( new FadeDrawable . OnFadeListener ( ) { \n + return FrescoVitoImage2 . create ( c ) \n + . uri ( uri ) \n + . imageOptions ( IMAGE _ OPTIONS ) \n + . onFadeListener ( \n + new FadeDrawable . OnFadeListener ( ) { \n - Log . d ( " pewpew " , " f start " ) ; \n + Log . d ( " pewpew " , " f start " ) ; \n - Log . d ( " pewpew " , " f finished " ) ; \n + Log . d ( " pewpew " , " f finished " ) ; \n - } ) . build ( ) ; \n + } ) \n + . build ( ) ; \n vito \ core \ src \ main \ java \ com \ facebook \ fresco \ vito \ core \ FrescoController2 . java \n - \n
drawee - backends \ drawee - pipeline \ src \ main \ java \ com \ facebook \ drawee \ backends \ pipeline \ info \ ImagePerfMonitor . java \n - import java . util . LinkedList ; \n
vito \ litho - slideshow \ src \ main \ java \ com \ facebook \ fresco \ vito \ litho \ slideshow \ FrescoVitoSlideshowComponentSpec . java \n - \n
samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ imageformat \ svg \ ImageFormatSvgFragment . java \n + \n samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ settings \ SettingsFragment . java \n - import androidx . annotation . Nullable ; \n samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ vito \ FrescoVitoLithoGalleryFragment . java \n - import com . facebook . fresco . samples . showcase . R ; \n samples \ showcase \ src \ main \ java \ com \ facebook \ fresco \ samples \ showcase \ vito \ FrescoVitoLithoSectionsFragment . java \n - import com . facebook . fresco . samples . showcase . R ; \n
android \ guava - tests \ test \ com \ google \ common \ util \ concurrent \ SequentialExecutorTest . java \n - assertThat ( Thread . currentThread ( ) . interrupted ( ) ) . isTrue ( ) ; \n + assertThat ( Thread . interrupted ( ) ) . isTrue ( ) ; \n - assertThat ( Thread . currentThread ( ) . interrupted ( ) ) . isTrue ( ) ; \n + assertThat ( Thread . interrupted ( ) ) . isTrue ( ) ; \n guava - tests \ test \ com \ google \ common \ util \ concurrent \ SequentialExecutorTest . java \n - assertThat ( Thread . currentThread ( ) . interrupted ( ) ) . isTrue ( ) ; \n + assertThat ( Thread . interrupted ( ) ) . isTrue ( ) ; \n - assertThat ( Thread . currentThread ( ) . interrupted ( ) ) . isTrue ( ) ; \n + assertThat ( Thread . interrupted ( ) ) . isTrue ( ) ; \n
android \ guava \ src \ com \ google \ common \ cache \ LocalCache . java \n + @ SuppressWarnings ( " GuardedBy " ) \n guava \ src \ com \ google \ common \ cache \ LocalCache . java \n + @ SuppressWarnings ( " GuardedBy " ) \n
android \ guava - tests \ benchmark \ com \ google \ common \ io \ ByteSourceAsCharSourceReadBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n android \ guava - tests \ benchmark \ com \ google \ common \ io \ CharStreamsCopyBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n android \ guava - tests \ benchmark \ com \ google \ common \ util \ concurrent \ SingleThreadAbstractFutureBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n guava - tests \ benchmark \ com \ google \ common \ io \ ByteSourceAsCharSourceReadBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n guava - tests \ benchmark \ com \ google \ common \ io \ CharStreamsCopyBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n guava - tests \ benchmark \ com \ google \ common \ util \ concurrent \ SingleThreadAbstractFutureBenchmark . java \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n - @ SuppressWarnings ( " GoodTime " ) / / b / 130759882 \n
android \ guava \ src \ com \ google \ common \ io \ Files . java \n + * < p > Depending on the environmment that this code is run in , the system temporary directory ( and \n + * thus the directory this method creates ) may be more visible that a program would like - files \n + * written to this directory may be read or overwritten by hostile programs running on the same \n + * machine . \n + * \n + * @ deprecated For Android users , see the < a \n + * href = " https : / / developer . android . com / training / data - storage " target = " _ blank " > Data and File \n + * Storage overview < / a > to select an appropriate temporary directory ( perhaps { @ code \n + * context . getCacheDir ( ) } ) . For developers on Java 7 or later , use { @ link \n + * java . nio . file . Files # createTempDirectory } , transforming it to a { @ link File } using { @ link \n + * java . nio . file . Path # toFile ( ) toFile ( ) } if needed . \n + @ Deprecated \n guava \ src \ com \ google \ common \ io \ Files . java \n + * < p > Depending on the environmment that this code is run in , the system temporary directory ( and \n + * thus the directory this method creates ) may be more visible that a program would like - files \n + * written to this directory may be read or overwritten by hostile programs running on the same \n + * machine . \n + * \n + * @ deprecated For Android users , see the < a \n + * href = " https : / / developer . android . com / training / data - storage " target = " _ blank " > Data and File \n + * Storage overview < / a > to select an appropriate temporary directory ( perhaps { @ code \n + * context . getCacheDir ( ) } ) . For developers on Java 7 or later , use { @ link \n + * java . nio . file . Files # createTempDirectory } , transforming it to a { @ link File } using { @ link \n + * java . nio . file . Path # toFile ( ) toFile ( ) } if needed . \n + @ Deprecated \n
README . md \n + repositories { \n + mavenCentral ( ) \n + } \n - compile project ( ' org . greenrobot : greendao : 3 . 0 . 1 ' ) \n + compile ' org . greenrobot : greendao : 3 . 0 . 1 ' \n
. travis . yml \n - ANDROID _ SDKS = android - 23 , sysimg - 23 ANDROID _ TARGET = android - 19 ANDROID _ ABI = armeabi - v7a \n - - build - tools - 23 . 0 . 1 \n + - build - tools - 23 . 0 . 3 \n - android - 23 \n - extra - android - m2repository \n build . gradle \n - buildToolsVersion = ' 23 . 0 . 1 ' \n + buildToolsVersion = ' 23 . 0 . 3 ' \n - } \n + } \n
build . gradle \n - compileSdkVersion = 27 \n + compileSdkVersion = 29 \n examples \ DaoExample \ build . gradle \n - compileSdkVersion 27 \n + compileSdkVersion 29 \n - targetSdkVersion 27 \n + targetSdkVersion 29 \n examples \ RxDaoExample \ build . gradle \n - compileSdkVersion 27 \n + compileSdkVersion 29 \n - targetSdkVersion 27 \n + targetSdkVersion 29 \n
examples \ DaoExample \ build . gradle \n + / / To use deprecated test classes on SDK 28 + . https : / / developer . android . com / training / testing / set - up - project \n + useLibrary ' android . test . runner ' \n + useLibrary ' android . test . base ' \n + \n tests \ DaoTest \ build . gradle \n + / / To use deprecated test classes on SDK 28 + . https : / / developer . android . com / training / testing / set - up - project \n + useLibrary ' android . test . runner ' \n + useLibrary ' android . test . base ' \n + \n tests \ DaoTestEntityAnnotation \ build . gradle \n + / / To use deprecated test classes on SDK 28 + . https : / / developer . android . com / training / testing / set - up - project \n + useLibrary ' android . test . runner ' \n + useLibrary ' android . test . base ' \n + \n tests \ DaoTestPerformance \ build . gradle \n + / / To use deprecated test classes on SDK 28 + . https : / / developer . android . com / training / testing / set - up - project \n + useLibrary ' android . test . runner ' \n + useLibrary ' android . test . base ' \n + \n
DaoCore \ build . gradle \n - version = ' 3 . 0 . 0 - 6 - SNAPSHOT ' \n + version = ' 3 . 0 . 0 - 7 - SNAPSHOT ' \n DaoGenerator \ build . gradle \n - version = ' 3 . 0 . 0 - 6 - SNAPSHOT ' \n + version = ' 3 . 0 . 0 - 7 - SNAPSHOT ' \n
DaoCore \ build . gradle \n - version = ' 3 . 0 . 0 - 7 - SNAPSHOT ' \n + version = ' 3 . 0 . 0 - 8 - SNAPSHOT ' \n DaoGenerator \ build . gradle \n - version = ' 3 . 0 . 0 - 7 - SNAPSHOT ' \n + version = ' 3 . 0 . 0 - 8 - SNAPSHOT ' \n
site \ docs \ configurable - attributes . md \n - settings ] ( skylark / config . html # user - defined - build - settings ) . Unlike built - in \n - flags , these are defined as build targets , so Bazel references them with target \n - labels . \n + settings ] [ BuildSettings ] . Unlike built - in flags , these are defined as build \n + targets , so Bazel references them with target labels . \n + \n + [ BuildSettings ] : skylark / config . html # user - defined - build - settings \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ SingleToolchainResolutionFunction . java \n - " Type % s : % s % s : Rejected toolchain % s % s % s " , \n + " Type % s : % s platform % s : Rejected toolchain % s % s % s " , \n
language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ subscriptions \ SerialSubscription . scala \n - class SerialSubscription private [ scala ] ( serial : rx . subscriptions . SerialSubscription ) extends Subscription { \n + class SerialSubscription private [ scala ] ( override val asJavaSubscription : rx . subscriptions . SerialSubscription ) extends Subscription { \n - / * \n - * As long as rx . subscriptions . SerialSubscription has no isUnsubscribed , \n - * we need to intercept and do it ourselves . \n - * / \n - override val asJavaSubscription : rx . subscriptions . SerialSubscription = new rx . subscriptions . SerialSubscription ( ) { \n - override def unsubscribe ( ) : Unit = { \n - if ( unsubscribed . compareAndSet ( false , true ) ) { serial . unsubscribe ( ) } \n - } \n - override def setSubscription ( subscription : rx . Subscription ) : Unit = serial . setSubscription ( subscription ) \n - override def getSubscription ( ) : rx . Subscription = serial . getSubscription ( ) \n - } \n + override def unsubscribe ( ) : Unit = asJavaSubscription . unsubscribe ( ) \n + override def isUnsubscribed : Boolean = asJavaSubscription . isUnsubscribed \n - def subscription _ = ( value : Subscription ) : this . type = { asJavaSubscription . setSubscription ( value . asJavaSubscription ) ; this } \n + def subscription _ = ( value : Subscription ) : this . type = { \n + asJavaSubscription . setSubscription ( value . asJavaSubscription ) \n + this \n + } \n
rxjava - core \ src \ main \ java \ rx \ Observable . java \n - * Note : the items will be immediately emitted each time an { @ link Observer } \n - * subscribes . Since this occurs before the { @ link Subscription } is \n - * returned , it is not possible to unsubscribe from the sequence before it \n - * completes . \n - * \n - * Note : the entire range is immediately emitted each time an \n - * { @ link Observer } subscribes . Since this occurs before the \n - * { @ link Subscription } is returned , it is not possible to unsubscribe from \n - * the sequence before it completes . \n - * \n rxjava - core \ src \ test \ java \ rx \ ObservableWindowTests . java \n - / * \n - Observable . from ( 1 , 2 , 3 , 4 , 5 , 6 ) \n - . window ( 3 ) . map ( new Func1 < Observable < Integer > , List < Integer > > ( ) { \n - \n - @ Override \n - public List < Integer > call ( Observable < Integer > o ) { \n - return o . toList ( ) . toBlockingObservable ( ) . single ( ) ; \n - } \n - \n - } ) . toBlockingObservable ( ) . forEach ( new Action1 < List < Integer > > ( ) { \n - \n - @ Override \n - public void call ( List < Integer > t ) { \n - lists . add ( t ) ; \n - } \n - } ) ; \n - * / \n
dubbo - remoting \ dubbo - remoting - http \ src \ main \ java \ org \ apache \ dubbo \ remoting \ http \ tomcat \ TomcatHttpServer . java \n + import org . apache . catalina . connector . Connector ; \n - tomcat . setBaseDir ( baseDir ) ; \n - tomcat . setPort ( url . getPort ( ) ) ; \n - tomcat . getConnector ( ) . setProperty ( \n - " maxThreads " , String . valueOf ( url . getParameter ( THREADS _ KEY , DEFAULT _ THREADS ) ) ) ; \n - / / tomcat . getConnector ( ) . setProperty ( \n - / / " minSpareThreads " , String . valueOf ( url . getParameter ( Constants . THREADS _ KEY , Constants . DEFAULT _ THREADS ) ) ) ; \n - \n - tomcat . getConnector ( ) . setProperty ( \n - " maxConnections " , String . valueOf ( url . getParameter ( ACCEPTS _ KEY , - 1 ) ) ) ; \n - tomcat . getConnector ( ) . setProperty ( " URIEncoding " , " UTF - 8 " ) ; \n - tomcat . getConnector ( ) . setProperty ( " connectionTimeout " , " 60000 " ) ; \n + Connector connector = new Connector ( " org . apache . coyote . http11 . Http11NioProtocol " ) ; \n + connector . setPort ( url . getPort ( ) ) ; \n + connector . setProperty ( " maxThreads " , String . valueOf ( url . getParameter ( THREADS _ KEY , DEFAULT _ THREADS ) ) ) ; \n + connector . setProperty ( " maxConnections " , String . valueOf ( url . getParameter ( ACCEPTS _ KEY , - 1 ) ) ) ; \n + connector . setProperty ( " URIEncoding " , " UTF - 8 " ) ; \n + connector . setProperty ( " connectionTimeout " , " 60000 " ) ; \n + connector . setProperty ( " maxKeepAliveRequests " , " - 1 " ) ; \n + tomcat . setConnector ( connector ) ; \n - tomcat . getConnector ( ) . setProperty ( " maxKeepAliveRequests " , " - 1 " ) ; \n - tomcat . getConnector ( ) . setProtocol ( " org . apache . coyote . http11 . Http11NioProtocol " ) ; \n + tomcat . setBaseDir ( baseDir ) ; \n + tomcat . setPort ( url . getPort ( ) ) ; \n
dubbo - dependencies - bom \ pom . xml \n - < revision > 2 . 7 . 7 < / revision > \n + < revision > 2 . 7 . 8 - SNAPSHOT < / revision > \n dubbo - dependencies \ dubbo - dependencies - zookeeper \ pom . xml \n - < revision > 2 . 7 . 7 < / revision > \n + < revision > 2 . 7 . 8 - SNAPSHOT < / revision > \n pom . xml \n - < revision > 2 . 7 . 7 < / revision > \n + < revision > 2 . 7 . 8 - SNAPSHOT < / revision > \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractConfig . java \n - / * * \n - * We only check boolean value at this moment . \n - * \n - * @ param type \n - * @ param value \n - * @ return \n - * / \n - private static boolean isTypeMatch ( Class < ? > type , String value ) { \n - if ( ( type = = boolean . class | | type = = Boolean . class ) \n - & & ! ( " true " . equals ( value ) | | " false " . equals ( value ) ) ) { \n - return false ; \n - } \n - return true ; \n - } \n - compositeConfiguration . addConfiguration ( 3 , config ) ; \n + compositeConfiguration . addConfiguration ( 3 , config ) ; \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ common \ bytecode \ Proxy . java \n + if ( ics [ i ] . isInterface ( ) & & Modifier . isStatic ( method . getModifiers ( ) ) ) { \n + continue ; \n + } \n dubbo - common \ src \ test \ java \ org \ apache \ dubbo \ common \ bytecode \ ProxyTest . java \n + \n + static String sayBye ( ) { \n + return " Bye ! " ; \n + } \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ java \ JavaOptions . java \n + host . dontCollectSoArtifacts = dontCollectSoArtifacts ; \n + \n
third _ party \ ijar \ test \ BUILD \n - srcs = [ " : liblocal _ and _ anonymous _ lib . jar " ] , \n + srcs = [ " : local _ and _ anonymous _ lib " ] , \n
gdx \ src \ com \ badlogic \ gdx \ graphics \ g3d \ particles \ ParticleSystem . java \n + / * * \n + * @ deprecated Please directly use the constructor \n + * / \n - private ParticleSystem ( ) { \n + public ParticleSystem ( ) { \n
backends \ gdx - backend - lwjgl3 \ src \ com \ badlogic \ gdx \ backends \ lwjgl3 \ Lwjgl3Application . java \n + import java . util . Iterator ; \n - window . update ( lifecycleListeners ) ; \n + window . update ( ) ; \n - closedWindow . dispose ( ) ; \n + if ( windows . size = = 1 ) { / / Lifecyclelistener methods have to be called before ApplicationListener methods . The \n + / / application will be disposed when _ all _ windows have been disposed , which is the case , \n + / / when there is only 1 window left , which is in the process of being disposed . \n + Iterator < LifecycleListener > it = lifecycleListeners . iterator ( ) ; \n + while ( it . hasNext ( ) ) { \n + LifecycleListener l = it . next ( ) ; \n + l . pause ( ) ; \n + l . dispose ( ) ; \n + it . remove ( ) ; \n + } \n + } \n + closedWindow . dispose ( ) ; \n + \n + synchronized ( lifecycleListeners ) { \n + for ( LifecycleListener lifecycleListener : lifecycleListeners ) { \n + lifecycleListener . pause ( ) ; \n + lifecycleListener . dispose ( ) ; \n + } \n + } \n - lifecycleListeners . add ( listener ) ; \n + lifecycleListeners . removeValue ( listener , true ) ; \n backends \ gdx - backend - lwjgl3 \ src \ com \ badlogic \ gdx \ backends \ lwjgl3 \ Lwjgl3Window . java \n - void update ( Array < LifecycleListener > lifecycleListeners ) { \n + void update ( ) { \n
backends \ gdx - backends - gwt \ src \ com \ badlogic \ gdx \ backends \ gwt \ emu \ com \ badlogic \ gdx \ graphics \ Pixmap . java \n - Composite composite = getComposite ( ) ; \n - for ( Pixmap pixmap : pixmaps . values ( ) ) { \n - pixmap . ensureCanvasExists ( ) ; \n - pixmap . context . setGlobalCompositeOperation ( composite ) ; \n - } \n + this . ensureCanvasExists ( ) ; \n + this . context . setGlobalCompositeOperation ( getComposite ( ) ) ; \n
extensions \ gdx - freetype \ src \ com \ badlogic \ gdx \ graphics \ g2d \ freetype \ FreeType . java \n - float alpha = ( srcRow [ x ] & 0xff ) / 255f ; \n - alpha = ( float ) Math . pow ( alpha , gamma ) ; / / Inverse gamma . \n + float alpha ; \n + \n + / / Zero raised to any power is always zero . \n + / / 255 ( = one ) raised to any power is always one \n + / / This means that we only have to calculate Math . pow ( ) when alpha is NOT zero and NOT one \n + if ( ( srcRow [ x ] & 0xff ) = = 0 ) { \n + alpha = 0f ; \n + } else if ( ( srcRow [ x ] & 0xff ) = = 255 ) { \n + alpha = 1f ; \n + } else { \n + alpha = ( float ) Math . pow ( ( ( srcRow [ x ] & 0xff ) / 255f ) , gamma ) ; / / Inverse gamma . \n + } \n
spring - boot - project \ spring - boot - autoconfigure \ src \ main \ java \ org \ springframework \ boot \ autoconfigure \ jdbc \ DataSourceTransactionManagerAutoConfiguration . java \n - return environment . getProperty ( " spring . dao . exceptiontranslation . enable " , Boolean . class , Boolean . TRUE ) \n + return environment . getProperty ( " spring . dao . exceptiontranslation . enabled " , Boolean . class , Boolean . TRUE ) \n spring - boot - project \ spring - boot - autoconfigure \ src \ test \ java \ org \ springframework \ boot \ autoconfigure \ jdbc \ DataSourceTransactionManagerAutoConfigurationTests . java \n - . withPropertyValues ( " spring . dao . exceptiontranslation . enable = false " ) \n + . withPropertyValues ( " spring . dao . exceptiontranslation . enabled = false " ) \n - . withPropertyValues ( " spring . dao . exceptiontranslation . enable = true " ) \n + . withPropertyValues ( " spring . dao . exceptiontranslation . enabled = true " ) \n
spring - boot - project \ spring - boot - autoconfigure \ src \ test \ java \ org \ springframework \ boot \ autoconfigure \ dao \ PersistenceExceptionTranslationAutoConfigurationTests . java \n + import static org . assertj . core . api . Assertions . assertThatIllegalArgumentException ; \n - / / @ Test \n - / / public void \n - / / persistOfNullThrowsIllegalArgumentExceptionWithoutExceptionTranslation ( ) { \n - / / this . context = new AnnotationConfigApplicationContext ( \n - / / EmbeddedDataSourceConfiguration . class , \n - / / HibernateJpaAutoConfiguration . class , TestConfiguration . class ) ; \n - / / assertThatExceptionOfType ( IllegalArgumentException . class ) . isThrownBy ( \n - / / ( ) - > this . context . getBean ( TestRepository . class ) . doSomething ( ) ) ; \n - / / } \n + @ Test \n + void persistOfNullThrowsIllegalArgumentExceptionWithoutExceptionTranslation ( ) { \n + this . context = new AnnotationConfigApplicationContext ( EmbeddedDataSourceConfiguration . class , \n + HibernateJpaAutoConfiguration . class , TestConfiguration . class ) ; \n + assertThatIllegalArgumentException ( ) . isThrownBy ( ( ) - > this . context . getBean ( TestRepository . class ) . doSomething ( ) ) ; \n + } \n
src \ test \ java \ com \ google \ devtools \ build \ lib \ buildtool \ util \ BlazeRuntimeWrapper . java \n + import com . google . devtools . build . lib . runtime . BlazeCommandUtils ; \n + additionalOptionsClasses . addAll ( \n + BlazeCommandUtils . getOptions ( \n + command , runtime . getBlazeModules ( ) , runtime . getRuleClassProvider ( ) ) ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ vfs \ FileSystem . java \n - Preconditions . checkArgument ( pathFragment . isAbsolute ( ) ) ; \n + Preconditions . checkArgument ( pathFragment . isAbsolute ( ) , " Not absolute : % s " , pathFragment ) ; \n
guava \ src \ com \ google \ common \ graph \ AbstractGraph . java \n - return new GraphEdges ( ) ; \n + return new AbstractSet < EndpointPair < N > > ( ) { \n + @ Override \n + public UnmodifiableIterator < EndpointPair < N > > iterator ( ) { \n + return EndpointPairIterator . of ( AbstractGraph . this ) ; \n + } \n + \n + @ Override \n + public int size ( ) { \n + return Ints . saturatedCast ( edgeCount ( ) ) ; \n + } \n + \n + @ Override \n + public boolean contains ( @ Nullable Object obj ) { \n + if ( ! ( obj instanceof EndpointPair ) ) { \n + return false ; \n + } \n + EndpointPair < ? > endpointPair = ( EndpointPair < ? > ) obj ; \n + return isDirected ( ) = = endpointPair . isOrdered ( ) \n + & & nodes ( ) . contains ( endpointPair . nodeU ( ) ) \n + & & successors ( endpointPair . nodeU ( ) ) . contains ( endpointPair . nodeV ( ) ) ; \n + } \n + } ; \n - \n - private class GraphEdges extends AbstractSet < EndpointPair < N > > { \n - @ Override \n - public UnmodifiableIterator < EndpointPair < N > > iterator ( ) { \n - return EndpointPairIterator . of ( AbstractGraph . this ) ; \n - } \n - \n - @ Override \n - public int size ( ) { \n - return Ints . saturatedCast ( edgeCount ( ) ) ; \n - } \n - \n - @ Override \n - public boolean contains ( @ Nullable Object obj ) { \n - if ( ! ( obj instanceof EndpointPair ) ) { \n - return false ; \n - } \n - EndpointPair < ? > endpointPair = ( EndpointPair < ? > ) obj ; \n - return isDirected ( ) = = endpointPair . isOrdered ( ) \n - & & contains ( endpointPair . nodeU ( ) , endpointPair . nodeV ( ) ) ; \n - } \n - \n - / * * Returns true iff this set contains an edge connecting { @ code nodeU } to { @ code nodeV } . * / \n - private boolean contains ( @ Nullable Object nodeU , @ Nullable Object nodeV ) { \n - return nodes ( ) . contains ( nodeU ) & & successors ( nodeU ) . contains ( nodeV ) ; \n - } \n - } \n
guava \ src \ com \ google \ common \ graph \ Graph . java \n - * with an undirected graph , where an edge that connects node A to node B also connects node B to \n - * node A . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n + * with an undirected graph , where an edge that connects node U to node V also connects node V to \n + * node U . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n guava \ src \ com \ google \ common \ graph \ Network . java \n - * with an undirected graph , where an edge that connects node A to node B also connects node B to \n - * node A . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n + * with an undirected graph , where an edge that connects node U to node V also connects node V to \n + * node U . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n guava \ src \ com \ google \ common \ graph \ ValueGraph . java \n - * with an undirected graph , where an edge that connects node A to node B also connects node B to \n - * node A . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n + * with an undirected graph , where an edge that connects node U to node V also connects node V to \n + * node U . If the relation to be modeled is asymmetric ( such as " employees managed " ) , that can be \n
stetho \ build . gradle \n - afterEvaluate { \n - configurations . compile . each { \n - if ( it . getName ( ) = = ' commons - cli - 1 . 2 . jar ' ) { \n - def depJarPath = it . getPath ( ) \n - task " tidyCommonsCli $ { name } " ( type : Copy ) { \n - from zipTree ( depJarPath ) \n - into " build / commons - cli - tidy - $ { name } " \n - rename ' LICENSE ' , ' commons - cli - LICENSE ' \n - rename ' NOTICE ' , ' commons - cli - NOTICE ' \n - } \n + task " tidyCommonsCli $ { name } " ( type : Copy ) { \n + from { \n + variant . javaCompile . classpath . findAll { \n + it . getName ( ) = = ' commons - cli - 1 . 2 . jar ' \n + } . collect { \n + zipTree ( it ) \n + into " build / commons - cli - tidy - $ { name } " \n + rename ' LICENSE ' , ' commons - cli - LICENSE ' \n + rename ' NOTICE ' , ' commons - cli - NOTICE ' \n - exclude ' android / support / * * / * ' \n + exclude " android / support / * * / * " \n
stetho \ build . gradle \n - afterEvaluate { \n - configurations . compile . each { \n - if ( it . getName ( ) = = ' commons - cli - 1 . 2 . jar ' ) { \n - def depJarPath = it . getPath ( ) \n - task " tidyCommonsCli $ { name } " ( type : Copy ) { \n - from zipTree ( depJarPath ) \n - into " build / commons - cli - tidy - $ { name } " \n - rename ' LICENSE ' , ' commons - cli - LICENSE ' \n - rename ' NOTICE ' , ' commons - cli - NOTICE ' \n - } \n + task " tidyCommonsCli $ { name } " ( type : Copy ) { \n + from { \n + variant . javaCompile . classpath . findAll { \n + it . getName ( ) = = ' commons - cli - 1 . 2 . jar ' \n + } . collect { \n + zipTree ( it ) \n + into " build / commons - cli - tidy - $ { name } " \n + rename ' LICENSE ' , ' commons - cli - LICENSE ' \n + rename ' NOTICE ' , ' commons - cli - NOTICE ' \n - exclude ' android / support / * * / * ' \n + exclude " android / support / * * / * " \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ bazel \ rules \ android \ BazelAndroidBinaryRule . java \n - import com . google . devtools . build . lib . rules . cpp . CppRuleClasses ; \n - . addRequiredToolchains ( CppRuleClasses . ccToolchainTypeAttribute ( environment ) ) \n src \ main \ java \ com \ google \ devtools \ build \ lib \ bazel \ rules \ android \ BazelAndroidLibraryRule . java \n - import com . google . devtools . build . lib . rules . cpp . CppRuleClasses ; \n - . addRequiredToolchains ( CppRuleClasses . ccToolchainTypeAttribute ( env ) ) \n src \ main \ java \ com \ google \ devtools \ build \ lib \ bazel \ rules \ android \ BazelAndroidLocalTestRule . java \n - import com . google . devtools . build . lib . rules . cpp . CppRuleClasses ; \n - . addRequiredToolchains ( CppRuleClasses . ccToolchainTypeAttribute ( environment ) ) \n
src \ test \ java \ com \ google \ devtools \ build \ lib \ packages \ util \ BazelMockAndroidSupport . java \n - Pair . of ( " ld - gold " , " x86 / bin / i686 - linux - android - ld . gold " ) ) ; \n + Pair . of ( " ld - gold " , " x86 / bin / i686 - linux - android - ld . gold " ) ) \n + . withToolchainTargetConstraints ( \n + TestConstants . CONSTRAINTS _ PACKAGE _ ROOT + " cpu : x86 _ 32 " , \n + TestConstants . CONSTRAINTS _ PACKAGE _ ROOT + " os : android " ) ; \n - Pair . of ( " ld - gold " , " arm / bin / arm - linux - androideabi - ld . gold " ) ) ; \n + Pair . of ( " ld - gold " , " arm / bin / arm - linux - androideabi - ld . gold " ) ) \n + . withToolchainTargetConstraints ( \n + TestConstants . CONSTRAINTS _ PACKAGE _ ROOT + " cpu : arm " , \n + TestConstants . CONSTRAINTS _ PACKAGE _ ROOT + " os : android " ) ; \n
library \ src \ com \ slidingmenu \ lib \ CustomViewAbove . java \n - int topPadding = mContent . getPaddingTop ( ) + insets . top ; \n - int bottomPadding = mContent . getPaddingBottom ( ) + insets . bottom ; \n + int topPadding = insets . top ; \n + int bottomPadding = insets . bottom ; \n library \ src \ com \ slidingmenu \ lib \ SlidingMenu . java \n - int topPadding = getPaddingTop ( ) + insets . top ; \n - int bottomPadding = getPaddingBottom ( ) + insets . bottom ; \n + int topPadding = insets . top ; \n + int bottomPadding = insets . bottom ; \n
library \ AndroidManifest . xml \n - android : minSdkVersion = " 4 " \n + android : minSdkVersion = " 5 " \n library \ src \ com \ slidingmenu \ lib \ CustomViewAbove . java \n + if ( action = = MotionEvent . ACTION _ DOWN ) \n + Log . v ( TAG , " Received ACTION _ DOWN " ) ; \n + \n - if ( action ! = MotionEvent . ACTION _ DOWN ) \n + if ( action ! = MotionEvent . ACTION _ DOWN ) { \n + } \n - mActivePointerId = MotionEventCompat . getPointerId ( ev , 0 ) ; \n + mActivePointerId = ev . getAction ( ) & ( ( Build . VERSION . SDK _ INT > = 8 ) ? MotionEvent . ACTION _ POINTER _ INDEX _ MASK : \n + MotionEvent . ACTION _ POINTER _ ID _ MASK ) ; \n + Log . v ( TAG , " active pointer id : " + mActivePointerId ) ; \n - \n - requestLayout ( ) ; \n - invalidate ( ) ; \n + if ( mShadowDrawable ! = null | | mSelectorDrawable ! = null ) \n + invalidate ( ) ; \n - / / mIsUnableToDrag = false ; \n + mIsUnableToDrag = false ; \n + mLastTouchAllowed = false ; \n library \ src \ com \ slidingmenu \ lib \ CustomViewBehind . java \n + \n + @ Override \n + public void scrollTo ( int x , int y ) { \n + super . scrollTo ( x , y ) ; \n + if ( mTransformer ! = null ) \n + invalidate ( ) ; \n + } \n library \ src \ com \ slidingmenu \ lib \ app \ SlidingActivityHelper . java \n + import android . content . res . Resources . Theme ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ actions \ ArtifactRoot . java \n - ! execPath . getSegments ( ) . contains ( " . . " ) , \n + ! execPath . containsUplevelReferences ( ) , \n src \ main \ java \ com \ google \ devtools \ build \ lib \ vfs \ PathFragment . java \n - return normalizedPath . equals ( " . . " ) | | normalizedPath . startsWith ( " . . " + SEPARATOR _ CHAR ) ; \n + return normalizedPath . startsWith ( " . . " ) \n + & & ( normalizedPath . length ( ) = = 2 | | normalizedPath . charAt ( 2 ) = = SEPARATOR _ CHAR ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ vfs \ OsPathPolicy . java \n + / / We * should * use a case - insensitive policy for OS . DARWIN , but we currently don ' t handle this . \n + OsPathPolicy HOST _ POLICY = \n + OS . getCurrent ( ) = = OS . WINDOWS ? WindowsOsPathPolicy . INSTANCE : UnixOsPathPolicy . INSTANCE ; \n + \n - switch ( OS . getCurrent ( ) ) { \n - case LINUX : \n - case FREEBSD : \n - case OPENBSD : \n - case UNKNOWN : \n - return UnixOsPathPolicy . INSTANCE ; \n - case DARWIN : \n - / / NOTE : We * should * return a path policy that is case insensitive , \n - / / but we currently don ' t handle this \n - return UnixOsPathPolicy . INSTANCE ; \n - case WINDOWS : \n - return WindowsOsPathPolicy . INSTANCE ; \n - default : \n - throw new AssertionError ( " Not covering all OSs " ) ; \n - } \n + return HOST _ POLICY ; \n
CONTRIBUTING . md \n - Read how to [ contribute to Bazel ] ( https : / / bazel . build / contributing . html ) \n + Read how to [ contribute to Bazel ] ( https : / / bazel . build / contributing . html ) , \n + the [ acceptance process for your pull request ] ( https : / / bazel . build / basics / patching . html ) , \n + and the lifecycle of a Bazel [ issue ] ( https : / / www . bazel . build / maintaining / maintainers - guide . html # lifecycle - of - an - issue ) \n + and [ pull request ] ( https : / / www . bazel . build / maintaining / maintainers - guide . html # lifecycle - of - a - pull - request ) . \n
site \ docs \ cquery . html \n - the Bazel team at one of < a href = " / support . html " > these channels < / a > . \n + the Bazel team at one of < a href = " https : / / bazel . build / support . html " > these channels < / a > . \n
library \ src \ main \ java \ com \ bumptech \ glide \ load \ model \ GlideUrl . java \n + private int hashCode ; \n + \n - int hashCode = getCacheKey ( ) . hashCode ( ) ; \n - hashCode = 31 * hashCode + headers . hashCode ( ) ; \n + if ( hashCode = = 0 ) { \n + hashCode = getCacheKey ( ) . hashCode ( ) ; \n + hashCode = 31 * hashCode + headers . hashCode ( ) ; \n + } \n
library \ src \ main \ java \ com \ bumptech \ glide \ load \ engine \ executor \ GlideExecutor . java \n - * A { @ link java . util . concurrent . ThreadFactory } that builds threads with priority { @ link \n + * A { @ link java . util . concurrent . ThreadFactory } that builds threads slightly above priority { @ link \n - android . os . Process . setThreadPriority ( android . os . Process . THREAD _ PRIORITY _ BACKGROUND ) ; \n + android . os . Process . setThreadPriority ( \n + android . os . Process . THREAD _ PRIORITY _ BACKGROUND \n + + android . os . Process . THREAD _ PRIORITY _ MORE _ FAVORABLE ) ; \n
android \ guava - tests \ test \ com \ google \ common \ graph \ AbstractGraphTest . java \n - final void putEdge ( EndpointPair < Integer > endpoints ) { \n - putEdge ( endpoints . nodeU ( ) , endpoints . nodeV ( ) ) ; \n - } \n - \n guava - tests \ test \ com \ google \ common \ graph \ AbstractGraphTest . java \n - final void putEdge ( EndpointPair < Integer > endpoints ) { \n - putEdge ( endpoints . nodeU ( ) , endpoints . nodeV ( ) ) ; \n - } \n - \n
android \ guava - tests \ test \ com \ google \ common \ graph \ AbstractStandardDirectedNetworkTest . java \n - assume ( ) . that ( graphIsMutable ( ) ) . isTrue ( ) ; \n - \n guava - tests \ test \ com \ google \ common \ graph \ AbstractStandardDirectedNetworkTest . java \n - assume ( ) . that ( graphIsMutable ( ) ) . isTrue ( ) ; \n - \n
android \ guava \ src \ com \ google \ common \ graph \ ValueGraph . java \n - * @ since 23 . 0 \n guava \ src \ com \ google \ common \ graph \ ValueGraph . java \n - * @ since 23 . 0 \n
android \ guava \ src \ com \ google \ common \ graph \ Traverser . java \n - * of nodes reachable from the start node ) . \n + * of nodes that have thus far been visited ) , plus < i > O ( H ) < / i > space ( where < i > H < / i > is the \n + * number of nodes that have been seen but not yet visited , that is , the " horizon " ) . \n - * < li > While traversing , the traverser will use < i > O ( H ) < / i > space where < i > H < / i > is the number \n - * of nodes in the search horizon ( the nodes seen by the algorithm that have not yet been \n - * traversed ) . \n + * < li > While traversing , the traverser will use < i > O ( H ) < / i > space ( where < i > H < / i > is the number \n + * of nodes that have been seen but not yet visited , that is , the " horizon " ) . \n guava \ src \ com \ google \ common \ graph \ Traverser . java \n - * of nodes reachable from the start node ) . \n + * of nodes that have thus far been visited ) , plus < i > O ( H ) < / i > space ( where < i > H < / i > is the \n + * number of nodes that have been seen but not yet visited , that is , the " horizon " ) . \n - * < li > While traversing , the traverser will use < i > O ( H ) < / i > space where < i > H < / i > is the number \n - * of nodes in the search horizon ( the nodes seen by the algorithm that have not yet been \n - * traversed ) . \n + * < li > While traversing , the traverser will use < i > O ( H ) < / i > space ( where < i > H < / i > is the number \n + * of nodes that have been seen but not yet visited , that is , the " horizon " ) . \n
library \ src \ main \ java \ com \ bumptech \ glide \ request \ RequestListener . java \n + import android . widget . ImageView ; \n + * < p > All methods in this interface will be called from a background thread if the \n + * { @ code RequestListener } is added to a request that is started with \n + * { @ link RequestBuilder # submit ( ) } , { @ link RequestBuilder # submit ( int , int ) } , or \n + * { @ link RequestBuilder # into ( int , int ) } . Those methods no longer post results back to the main \n + * thread to avoid the unnecessary thread interactions and corresponding latency . As a side affect \n + * though , listeners added to those requests are no longer called on the main thread . \n + * { @ code RequestListeners } added to requests started with { @ link RequestBuilder # into ( Target ) } or \n + * { @ link RequestBuilder # into ( ImageView ) } will continue to be called back on the main thread . \n + * \n + * < p > For threading guarantees , see the class comment . \n + * \n + * \n + * < p > For threading guarantees , see the class comment . \n + * \n
library \ src \ main \ java \ com \ bumptech \ glide \ load \ engine \ Engine . java \n - public static class LoadStatus { \n + public class LoadStatus { \n - engineJob . removeCallback ( cb ) ; \n + / / Acquire the Engine lock so that a new request can ' t get access to a particular EngineJob \n + / / just after the EngineJob has been cancelled . Without this lock , we ' d allow new requests \n + / / to find the cancelling EngineJob in our Jobs data structure . With this lock , the EngineJob \n + / / is both cancelled and removed from Jobs atomically . \n + synchronized ( Engine . this ) { \n + engineJob . removeCallback ( cb ) ; \n + } \n
site \ docs \ exec - groups . md \n - During rule definition , rule authors can declare a set of execution groups . On \n - each execution group , the rule author can specify everything needed to select \n - an execution platform for that execution group , namely any constraints via \n - ` exec _ compatible _ with ` and toolchain types via ` toolchain ` . If an execution group \n - is created as empty ( no specified toolchains or constraints ) it will \n - automatically inherit these \n + During rule definition , rule authors can \n + [ declare ] ( https : / / docs . bazel . build / versions / master / skylark / lib / globals . html # exec _ group ) \n + a set of execution groups . On each execution group , the rule author can specify \n + everything needed to select an execution platform for that execution group , \n + namely any constraints via ` exec _ compatible _ with ` and toolchain types via \n + ` toolchain ` . If an execution group is created as empty ( no specified toolchains \n + or constraints ) it will automatically inherit these \n - TODO ( juliexxia ) : link to exec _ group method docs when they get released in bazel . \n - \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ starlarkbuildapi \ StarlarkConfigApi . java \n - " Note : This API is experimental and may change at any time . " \n - + " " \n - + " < p > This is a top - level module for creating build setting descriptors which describe " \n - + " what kind of build setting ( if any ) a rule is . " \n + " This is a top - level module for creating configuration transitions and build " \n + + " setting descriptors which describe what kind of build setting ( if any ) a rule is . " \n + " " \n + " < p > ex : the following rule is marked as a build setting by setting the " \n + " < code > build _ setting < / code > parameter of the < code > rule ( ) < / code > function . " \n
core \ api \ system - current . txt \n + field public static final int NET _ CAPABILITY _ NOT _ VCN _ MANAGED = 28 ; / / 0x1c \n packages \ Connectivity \ framework \ src \ android \ net \ NetworkCapabilities . java \n - * Indicates that this network is not managed by a Virtual Carrier Network ( VCN ) . \n - * \n - * TODO ( b / 177299683 ) : Add additional clarifying javadoc . \n + * Indicates that this network is not subsumed by a Virtual Carrier Network ( VCN ) . \n + * < p > \n + * To provide an experience on a VCN similar to a single traditional carrier network , in \n + * some cases the system sets this bit is set by default in application ' s network requests , \n + * and may choose to remove it at its own discretion when matching the request to a network . \n + * < p > \n + * Applications that want to know about a Virtual Carrier Network ' s underlying networks , \n + * for example to use them for multipath purposes , should remove this bit from their network \n + * requests ; the system will not add it back once removed . \n + @ SystemApi \n
services \ tests \ mockingservicestests \ src \ com \ android \ server \ job \ controllers \ ConnectivityControllerTest . java \n + import static android . net . NetworkCapabilities . NET _ CAPABILITY _ NOT _ VCN _ MANAGED ; \n + . addCapability ( NET _ CAPABILITY _ NOT _ VCN _ MANAGED ) \n
CHANGELOG . md \n + # # Version 3 . 8 . 1 \n + \n + _ 2017 - 06 - 18 _ \n + \n + * Fix : Recover gracefully from stale coalesced connections . We had a bug where \n + connection coalescing ( introduced in OkHttp 3 . 7 . 0 ) and stale connection \n + recovery could interact to cause a ` NoSuchElementException ` crash in the \n + ` RouteSelector ` . \n + \n + \n README . md \n - < version > 3 . 8 . 0 < / version > \n + < version > 3 . 8 . 1 < / version > \n - compile ' com . squareup . okhttp3 : okhttp : 3 . 8 . 0 ' \n + compile ' com . squareup . okhttp3 : okhttp : 3 . 8 . 1 ' \n - < version > 3 . 8 . 0 < / version > \n + < version > 3 . 8 . 1 < / version > \n - testCompile ' com . squareup . okhttp3 : mockwebserver : 3 . 8 . 0 ' \n + testCompile ' com . squareup . okhttp3 : mockwebserver : 3 . 8 . 1 ' \n
samples \ crawler \ src \ main \ java \ okhttp3 \ sample \ Crawler . java \n + Thread currentThread = Thread . currentThread ( ) ; \n + String originalName = currentThread . getName ( ) ; \n + currentThread . setName ( " Crawler " + url . toString ( ) ) ; \n + } finally { \n + currentThread . setName ( originalName ) ; \n - if ( link ! = null ) queue . add ( link ) ; \n + if ( link = = null ) continue ; / / URL is either invalid or its scheme isn ' t http / https . \n + queue . add ( link . newBuilder ( ) . fragment ( null ) . build ( ) ) ; \n
guava - gwt \ test \ com \ google \ common \ testing \ FakeTickerTest _ gwt . java \n - public void testAdvance ( ) throws Exception { \n - com . google . common . testing . FakeTickerTest testCase = new com . google . common . testing . FakeTickerTest ( ) ; \n - testCase . testAdvance ( ) ; \n - } \n - \n guava - testlib \ src \ com \ google \ common \ testing \ FakeTicker . java \n + import com . google . common . annotations . GwtIncompatible ; \n + / * * \n + * Advances the ticker value by { @ code duration } . \n + * \n + * @ since NEXT \n + * / \n + @ GwtIncompatible \n + public FakeTicker advance ( java . time . Duration duration ) { \n + return advance ( duration . toNanos ( ) ) ; \n + } \n + \n + / * * \n + * Sets the increment applied to the ticker whenever it is queried . \n + * \n + * < p > The default behavior is to auto increment by zero . i . e : The ticker is left unchanged when \n + * queried . \n + * \n + * @ since NEXT \n + * / \n + @ GwtIncompatible \n + public FakeTicker setAutoIncrementStep ( java . time . Duration autoIncrementStep ) { \n + return setAutoIncrementStep ( autoIncrementStep . toNanos ( ) , TimeUnit . NANOSECONDS ) ; \n + } \n + \n guava - testlib \ test \ com \ google \ common \ testing \ FakeTickerTest . java \n + @ GwtIncompatible / / java . time . Duration \n + ticker . advance ( java . time . Duration . ofMillis ( 1 ) ) ; \n + assertEquals ( 2000010L , ticker . read ( ) ) ; \n + @ GwtIncompatible / / java . time . Duration \n + public void testAutoIncrementStep _ duration ( ) { \n + FakeTicker ticker = new FakeTicker ( ) . setAutoIncrementStep ( java . time . Duration . ofMillis ( 1 ) ) ; \n + assertEquals ( 0 , ticker . read ( ) ) ; \n + assertEquals ( 1000000 , ticker . read ( ) ) ; \n + assertEquals ( 2000000 , ticker . read ( ) ) ; \n + } \n + \n
android \ guava - tests \ test \ com \ google \ common \ collect \ FluentIterableTest . java \n - @ SuppressWarnings ( " deprecation " ) / / test of deprecated method \n + @ SuppressWarnings ( { " deprecation " , " DoNotCall " } ) / / test of deprecated method \n android \ guava \ src \ com \ google \ common \ collect \ FluentIterable . java \n + import com . google . errorprone . annotations . DoNotCall ; \n + @ DoNotCall ( " instances of FluentIterable don ' t need to be converetd to a FluentIterable " ) \n guava - tests \ test \ com \ google \ common \ collect \ FluentIterableTest . java \n - @ SuppressWarnings ( " deprecation " ) / / test of deprecated method \n + @ SuppressWarnings ( { " deprecation " , " DoNotCall " } ) / / test of deprecated method \n guava \ src \ com \ google \ common \ collect \ FluentIterable . java \n + import com . google . errorprone . annotations . DoNotCall ; \n + @ DoNotCall ( " instances of FluentIterable don ' t need to be converetd to a FluentIterable " ) \n
src \ main \ java \ org \ junit \ experimental \ theories \ Theories . java \n - new BlockJUnit4ClassRunner ( getTestClass ( ) ) { \n + new BlockJUnit4ClassRunner ( getTestClass ( ) . getJavaClass ( ) ) { \n src \ main \ java \ org \ junit \ internal \ runners \ ParentRunner . java \n - } \n + } \n src \ main \ java \ org \ junit \ runners \ BlockJUnit4ClassRunner . java \n - this ( new TestClass ( klass ) ) ; \n - } \n - \n - public BlockJUnit4ClassRunner ( TestClass testClass ) throws InitializationError { \n - super ( testClass ) ; \n + super ( new TestClass ( klass ) ) ; \n - \n + \n
src \ main \ java \ org \ junit \ runner \ JUnitCore . java \n + import org . junit . tests . experimental . max . CouldNotReadCoreException ; \n + import org . junit . tests . experimental . max . MaxCore ; \n - return run ( request . getRunner ( ) ) ; \n - / / MaxCore max = null ; \n - / / try { \n - / / max = MaxCore . forFolder ( " defaultMaxCore " ) ; \n - / / } catch ( CouldNotReadCoreException e ) { \n - / / e . printStackTrace ( ) ; \n - / / } \n - / / max . run ( request ) ; \n - / / return null ; \n + / / return run ( request . getRunner ( ) ) ; \n + MaxCore max = null ; \n + try { \n + max = MaxCore . forFolder ( " defaultMaxCore " ) ; \n + } catch ( CouldNotReadCoreException e ) { \n + e . printStackTrace ( ) ; \n + } \n + return max . run ( request , this ) ; \n src \ test \ java \ org \ junit \ tests \ experimental \ max \ MaxCore . java \n + import org . junit . internal . requests . SortingRequest ; \n + import org . junit . runner . Result ; \n - JUnitCore core = new JUnitCore ( ) ; \n + run ( request , new JUnitCore ( ) ) ; \n + } \n + \n + public Result run ( Request request , JUnitCore core ) { \n - public void testStarted ( Description description ) throws Exception { \n + public void testStarted ( Description description ) throws Exception { \n - core . run ( request ) ; \n - try { \n - save ( ) ; \n - } catch ( FileNotFoundException e ) { \n - / / TODO \n - e . printStackTrace ( ) ; \n - } catch ( IOException e ) { \n - / / TODO \n - e . printStackTrace ( ) ; \n + try { \n + return core . run ( sortRequest ( request ) . getRunner ( ) ) ; \n + } finally { \n + try { \n + save ( ) ; \n + } catch ( FileNotFoundException e ) { \n + / / TODO \n + e . printStackTrace ( ) ; \n + } catch ( IOException e ) { \n + / / TODO \n + e . printStackTrace ( ) ; \n + } \n + } \n + } \n + \n + private Request sortRequest ( Request request ) { \n + if ( request instanceof SortingRequest ) { / / We ' ll pay big karma points for this \n + return request ; \n + return request . sortWith ( new TestComparator ( ) ) ; \n
dubbo - rpc \ dubbo - rpc - api \ src \ main \ java \ org \ apache \ dubbo \ rpc \ protocol \ ProtocolFilterWrapper . java \n - for ( Filter filter : filters ) { \n + for ( int i = filters . size ( ) - 1 ; i > = 0 ; i - - ) { \n + final Filter filter = filters . get ( i ) ; \n
dubbo - config \ dubbo - config - spring \ src \ main \ java \ org \ apache \ dubbo \ config \ spring \ beans \ factory \ annotation \ ServiceClassPostProcessor . java \n + import org . apache . dubbo . config . spring . context . DubboBootstrapApplicationListener ; \n + import static com . alibaba . spring . util . BeanRegistrar . registerInfrastructureBean ; \n + / / @ since 2 . 7 . 5 \n + registerInfrastructureBean ( registry , DubboBootstrapApplicationListener . BEAN _ NAME , DubboBootstrapApplicationListener . class ) ; \n + \n
android \ guava \ src \ com \ google \ common \ base \ Verify . java \n - import com . google . common . annotations . Beta ; \n - @ Beta \n android \ guava \ src \ com \ google \ common \ base \ VerifyException . java \n - import com . google . common . annotations . Beta ; \n - @ Beta \n guava \ src \ com \ google \ common \ base \ Verify . java \n - import com . google . common . annotations . Beta ; \n - @ Beta \n guava \ src \ com \ google \ common \ base \ VerifyException . java \n - import com . google . common . annotations . Beta ; \n - @ Beta \n
guava \ src \ com \ google \ common \ collect \ TopKSelector . java \n + import java . util . stream . Stream ; \n - * < p > If your input data is available as an { @ link Iterable } or { @ link Iterator } , prefer \n - * { @ link Ordering # leastOf ( Iterable , int ) } , which provides the same implementation with an \n - * interface tailored to that use case . \n + * < p > If your input data is available as a { @ link Stream } , prefer passing { @ link \n + * Comparators # least ( int ) } to { @ link Stream # collect ( java . util . stream . Collector ) } . If it is available \n + * as an { @ link Iterable } or { @ link Iterator } , prefer { @ link Ordering # leastOf ( Iterable , int ) } . \n - * offering expected O ( n + k log k ) performance ( worst case O ( n log k ) ) for n calls to \n - * { @ link # offer } and a call to { @ link # topK } , with O ( k ) memory . In comparison , quickselect has the \n - * same asymptotics but requires O ( n ) memory , and a { @ code PriorityQueue } implementation takes O ( n \n - * log k ) . In benchmarks , this implementation performs at least as well as either implementation , \n - * and degrades more gracefully for worst - case input . \n + * offering expected O ( n + k log k ) performance ( worst case O ( n log k ) ) for n calls to { @ link \n + * # offer } and a call to { @ link # topK } , with O ( k ) memory . In comparison , quickselect has the same \n + * asymptotics but requires O ( n ) memory , and a { @ code PriorityQueue } implementation takes O ( n log \n + * k ) . In benchmarks , this implementation performs at least as well as either implementation , and \n + * degrades more gracefully for worst - case input . \n
pom . xml \n - - Djava . net . preferIPv4Stack = true \n + - Djava . net . preferIPv4Stack = true - XX : MetaspaceSize = 64m - XX : MaxMetaspaceSize = 128m \n - < profile > \n - < id > java6 < / id > \n - < properties > \n - < maven _ jar _ version > 3 . 0 . 2 < / maven _ jar _ version > \n - < maven _ surefire _ version > 2 . 22 . 1 < / maven _ surefire _ version > \n - < maven _ deploy _ version > 2 . 7 < / maven _ deploy _ version > \n - < maven _ compiler _ version > 3 . 1 < / maven _ compiler _ version > \n - < maven _ source _ version > 3 . 0 . 1 < / maven _ source _ version > \n - < maven _ javadoc _ version > 2 . 10 . 1 < / maven _ javadoc _ version > \n - < / properties > \n - < / profile > \n - < profile > \n - < id > hudson < / id > \n - < build > \n - < plugins > \n - < plugin > \n - < groupId > org . apache . maven . plugins < / groupId > \n - < artifactId > maven - surefire - plugin < / artifactId > \n - < configuration > \n - < testFailureIgnore > true < / testFailureIgnore > \n - < / configuration > \n - < / plugin > \n - < / plugins > \n - < / build > \n - < / profile > \n - < profile > \n - < id > java8 - vm - args < / id > \n - < activation > \n - < jdk > [ 1 . 8 , ) < / jdk > \n - < / activation > \n - < properties > \n - < ! - - Build args - - > \n - < ! - - if you run dubbo on java8 + , please use these vm args - - > \n - < argline > - server - Xms256m - Xmx512m - XX : MetaspaceSize = 64m - XX : MaxMetaspaceSize = 128m - Dfile . encoding = UTF - 8 \n - - Djava . net . preferIPv4Stack = true \n - < / argline > \n - < / properties > \n - < / profile > \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ ServiceConfig . java \n - ProviderModel providerModel = new ProviderModel ( getUniqueServiceName ( ) , ref , interfaceClass ) ; \n - ApplicationModel . initProviderModel ( getUniqueServiceName ( ) , providerModel ) ; \n + String uniqueServiceName = getUniqueServiceName ( ) ; \n + ProviderModel providerModel = new ProviderModel ( uniqueServiceName , ref , interfaceClass ) ; \n + ApplicationModel . initProviderModel ( uniqueServiceName , providerModel ) ; \n
src \ main \ java \ com \ alibaba \ fastjson \ JSON . java \n - public static String DEFFAULT _ LOCAL _ DATE _ TIME _ FORMAT = " yyyy - MM - dd ' T ' HH : mm : ss . SSSSSS " ; \n + / / public static String DEFFAULT _ LOCAL _ DATE _ TIME _ FORMAT = " yyyy - MM - dd ' T ' HH : mm : ss . SSSSSS " ; \n src \ test \ java \ com \ alibaba \ json \ bvt \ jdk8 \ LocalDateTimeTest . java \n - vo . setDate ( LocalDateTime . now ( ) ) ; \n + vo . setDate ( LocalDateTime . now ( ) . minusNanos ( 10L ) ) ; \n
src \ main \ java \ com \ alibaba \ fastjson \ support \ jaxrs \ FastJsonProvider . java \n - / / add Content - Length \n - if ( fastJsonConfig . isWriteContentLength ( ) ) { \n - httpHeaders . add ( " Content - Length " , String . valueOf ( len ) ) ; \n - } \n + / / / / add Content - Length \n + / / if ( fastJsonConfig . isWriteContentLength ( ) ) { \n + / / httpHeaders . add ( " Content - Length " , String . valueOf ( len ) ) ; \n + / / } \n src \ test \ java \ com \ alibaba \ json \ bvt \ support \ spring \ mock \ testcase \ FastJsonHttpMessageConverterJSONPCaseTest . java \n + @ Test \n + public void test3 _ Jsonp _ ContentLength ( ) throws Exception { \n + ResultActions actions1 = this . mockMvc . perform ( post ( " / jsonp - fastjsonview / test3 ? callback = func " ) ) . andDo ( print ( ) ) ; \n + Object obj1 = actions1 . andReturn ( ) . getResponse ( ) . getHeaderValue ( " Content - Length " ) ; \n + Assert . assertNotNull ( obj1 ) ; \n + Assert . assertEquals ( 81 , obj1 ) ; \n + \n + ResultActions actions2 = this . mockMvc . perform ( post ( " / jsonp - fastjsonview / test3 ? callback = fnUpdateSome " ) ) . andDo ( print ( ) ) ; \n + Object obj2 = actions2 . andReturn ( ) . getResponse ( ) . getHeaderValue ( " Content - Length " ) ; \n + Assert . assertNotNull ( obj2 ) ; \n + Assert . assertEquals ( 89 , obj2 ) ; \n + } \n + \n
README . md \n + # # Installation \n + \n + ` ` ` groovy \n + dependencies { \n + compile ' com . github . ksoichiro : android - observablescrollview : 1 . 0 . 0 ' \n + } \n + ` ` ` \n + \n gradle . properties \n - VERSION _ NAME = 1 . 0 . 0 - SNAPSHOT \n + VERSION _ NAME = 1 . 0 . 0 \n
README . md \n + To install : \n + \n + ` ` ` sh \n + $ . / gradlew installDebug \n + ` ` ` \n
guava \ src \ com \ google \ common \ collect \ MapMakerInternalMap . java \n - final E entry ; \n + @ Weak final E entry ; \n
guava \ src \ com \ google \ common \ collect \ RegularImmutableAsList . java \n - import com . google . j2objc . annotations . Weak ; \n - @ Weak private final ImmutableCollection < E > delegate ; \n + private final ImmutableCollection < E > delegate ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ dynamic \ DynamicExecutionOptions . java \n - defaultValue = " true " , \n + defaultValue = " false " , \n + " new version in that this version cannot stop a local spawn once it has started " \n src \ main \ java \ com \ google \ devtools \ build \ lib \ dynamic \ DynamicSpawnStrategy . java \n + import com . google . devtools . build . lib . events . Event ; \n + * @ param options The options for dynamic execution . \n + * @ param context The context of this action execution . \n + * @ param spawn The spawn being executed . \n - AtomicReference < DynamicMode > strategyThatCancelled ) \n + AtomicReference < DynamicMode > strategyThatCancelled , \n + DynamicExecutionOptions options , \n + ActionExecutionContext context , \n + Spawn spawn ) \n + if ( options . debugSpawnScheduler ) { \n + context \n + . getEventHandler ( ) \n + . handle ( \n + Event . info ( \n + String . format ( \n + " % s action finished % sly " , \n + spawn . getMnemonic ( ) , strategyThatCancelled . get ( ) ) ) ) ; \n + } \n + \n - strategyThatCancelled ) ) ; \n + strategyThatCancelled , \n + DynamicSpawnStrategy . this . options , \n + actionExecutionContext , \n + spawn ) ) ; \n - strategyThatCancelled ) ) ; \n + strategyThatCancelled , \n + DynamicSpawnStrategy . this . options , \n + actionExecutionContext , \n + spawn ) ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ worker \ WorkerMultiplexer . java \n + / * * The implementation of the worker protocol ( JSON or Proto ) . * / \n + private WorkerProtocolImpl workerProtocol ; \n + recordingStream = new RecordingInputStream ( process . getInputStream ( ) ) ; \n + recordingStream . startRecording ( 4096 ) ; \n + if ( workerProtocol = = null ) { \n + switch ( workerKey . getProtocolFormat ( ) ) { \n + case JSON : \n + workerProtocol = new JsonWorkerProtocol ( process . getOutputStream ( ) , recordingStream ) ; \n + break ; \n + case PROTO : \n + workerProtocol = new ProtoWorkerProtocol ( process . getOutputStream ( ) , recordingStream ) ; \n + break ; \n + } \n + } \n - request . writeDelimitedTo ( process . getOutputStream ( ) ) ; \n - process . getOutputStream ( ) . flush ( ) ; \n + workerProtocol . putRequest ( request ) ; \n - recordingStream = new RecordingInputStream ( process . getInputStream ( ) ) ; \n - recordingStream . startRecording ( 4096 ) ; \n - parsedResponse = WorkResponse . parseDelimitedFrom ( recordingStream ) ; \n + parsedResponse = workerProtocol . getResponse ( ) ; \n - / / A null parsedResponse can happen if the input stream is closed , in which case we \n + \n + / / A null parsedResponse can only happen if the input stream is closed , in which case we \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ actions \ CompletionContext . java \n - import com . google . devtools . build . lib . actions . Artifact . ArchivedTreeArtifact ; \n - import com . google . devtools . build . lib . actions . Artifact . ArtifactExpander ; \n - import com . google . devtools . build . lib . actions . Artifact . ArtifactExpanderImpl ; \n - import com . google . devtools . build . lib . actions . Artifact . MissingExpansionException ; \n - import com . google . devtools . build . lib . actions . Artifact . SpecialArtifact ; \n + import com . google . common . collect . ImmutableMap ; \n - import java . util . ArrayList ; \n - import java . util . List ; \n - null , ( artifact , output ) - > { } , ArtifactPathResolver . IDENTITY , false , false ) ; \n + null , ImmutableMap . of ( ) , ImmutableMap . of ( ) , ArtifactPathResolver . IDENTITY , false , false ) ; \n - private final ArtifactExpander expander ; \n - \n + private final Map < Artifact , ImmutableCollection < Artifact > > expandedArtifacts ; \n + private final Map < Artifact , ImmutableList < FilesetOutputSymlink > > expandedFilesets ; \n - ArtifactExpander expander , \n + Map < Artifact , ImmutableCollection < Artifact > > expandedArtifacts , \n + Map < Artifact , ImmutableList < FilesetOutputSymlink > > expandedFilesets , \n - this . expander = expander ; \n + this . expandedArtifacts = expandedArtifacts ; \n + this . expandedFilesets = expandedFilesets ; \n - Map < SpecialArtifact , ArchivedTreeArtifact > archivedTreeArtifacts , \n - ArtifactExpander expander = \n - new ArtifactExpanderImpl ( expandedArtifacts , archivedTreeArtifacts , expandedFilesets ) ; \n - execRoot , expander , pathResolver , expandFilesets , fullyResolveFilesetSymlinks ) ; \n + execRoot , \n + expandedArtifacts , \n + expandedFilesets , \n + pathResolver , \n + expandFilesets , \n + fullyResolveFilesetSymlinks ) ; \n - List < Artifact > expandedArtifacts = new ArrayList < > ( ) ; \n - expander . expand ( artifact , expandedArtifacts ) ; \n + ImmutableCollection < Artifact > expandedArtifacts = this . expandedArtifacts . get ( artifact ) ; \n - ImmutableList < FilesetOutputSymlink > links ; \n - try { \n - links = expander . getFileset ( filesetArtifact ) ; \n - } catch ( MissingExpansionException e ) { \n - throw new IllegalStateException ( e ) ; \n - } \n + ImmutableList < FilesetOutputSymlink > links = expandedFilesets . get ( filesetArtifact ) ; \n src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ CompletionFunction . java \n - archivedTreeArtifacts , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ includescanning \ IncludeScanningModule . java \n + spawnScannerSupplier . get ( ) . setOutputService ( env . getOutputService ( ) ) ; \n src \ main \ java \ com \ google \ devtools \ build \ lib \ includescanning \ SpawnIncludeScanner . java \n + import com . google . devtools . build . lib . vfs . OutputService ; \n + private OutputService outputService ; \n + public void setOutputService ( OutputService outputService ) { \n + Preconditions . checkState ( this . outputService = = null ) ; \n + this . outputService = outputService ; \n + } \n + \n - / / Output files are generally not locally available should be scanned remotely to avoid the \n + / / Files written remotely that are not locally available should be scanned remotely to avoid the \n - / / remotely when the file size exceeds a certain size . \n - if ( remoteExtractionThreshold = = 0 | | ! file . isSourceArtifact ( ) ) { \n + / / remotely when explicitly directed to via a flag . \n + if ( remoteExtractionThreshold = = 0 \n + | | ( outputService ! = null & & outputService . isRemoteFile ( file ) ) ) { \n src \ main \ java \ com \ google \ devtools \ build \ lib \ remote \ RemoteOutputService . java \n + import com . google . devtools . build . lib . vfs . Path ; \n + @ Override \n + public boolean isRemoteFile ( Artifact artifact ) { \n + Path path = artifact . getPath ( ) ; \n + return path . getFileSystem ( ) instanceof RemoteActionFileSystem \n + & & ( ( RemoteActionFileSystem ) path . getFileSystem ( ) ) . isRemote ( path ) ; \n + } \n + \n src \ main \ java \ com \ google \ devtools \ build \ lib \ vfs \ OutputService . java \n + / * * @ return true iff the file actually lives on a remote server * / \n + boolean isRemoteFile ( Artifact file ) ; \n + \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ ActionExecutionFunction . java \n - / / If there ' s a missing value . \n - if ( inputDeps = = null ) { \n - return null ; \n - } \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ buildtool \ buildevent \ ExecRootPreparedEvent . java \n - ; \n
README - cn . md \n + # # # # 下拉刷新 + 加载更多？ \n + \n + 本类库是单纯的下拉刷新。如果你需要用到 ` 加载更多 ` ，看这个项目 : https : / / github . com / liaohuqiu / android - cube - app \n + \n template \ README - cn . md \n + # # # # 下拉刷新 + 加载更多？ \n + \n + 本类库是单纯的下拉刷新。如果你需要用到 ` 加载更多 ` ，看这个项目 : https : / / github . com / liaohuqiu / android - cube - app \n + \n
new file \n ptr - demo - debug . apk \n Binary files / dev / null and b / ptr - demo - debug . apk differ \n
src \ test \ java \ com \ google \ mockwebserver \ MockWebServerTest . java \n + import java . io . ByteArrayInputStream ; \n + \n + public void testStreamingResponseBody ( ) throws Exception { \n + InputStream responseBody = new ByteArrayInputStream ( " ABC " . getBytes ( " UTF - 8 " ) ) ; \n + server . enqueue ( new MockResponse ( ) . setBody ( responseBody , 3 ) ) ; \n + server . play ( ) ; \n + \n + InputStream in = server . getUrl ( " / " ) . openConnection ( ) . getInputStream ( ) ; \n + assertEquals ( ' A ' , in . read ( ) ) ; \n + assertEquals ( ' B ' , in . read ( ) ) ; \n + assertEquals ( ' C ' , in . read ( ) ) ; \n + \n + assertEquals ( - 1 , responseBody . read ( ) ) ; / / The body is exhausted . \n + } \n
pom . xml \n - < version > 20130303 < / version > \n + < version > 20130403 < / version > \n src \ main \ java \ com \ google \ mockwebserver \ MockResponse . java \n + / * * \n + * Returns the raw HTTP payload , or null if this response is streamed . \n + * / \n + public byte [ ] getBody ( ) { \n + return body ; \n + } \n + \n
guava - tests \ test \ com \ google \ common \ cache \ LocalCacheTest . java \n + import java . util . ArrayList ; \n + public void testComputeIfAbsent _ RemovalListener ( ) { \n + List < RemovalNotification < Object , Object > > notifications = new ArrayList < > ( ) ; \n + RemovalListener < Object , Object > removalListener = \n + new RemovalListener < Object , Object > ( ) { \n + @ Override \n + public void onRemoval ( RemovalNotification < Object , Object > notification ) { \n + notifications . add ( notification ) ; \n + } \n + } ; \n + Cache < Object , Object > cache = \n + CacheBuilder . newBuilder ( ) . removalListener ( removalListener ) . build ( ) ; \n + cache . put ( " a " , " b " ) ; \n + cache . asMap ( ) . computeIfAbsent ( " a " , k - > " c " ) ; \n + assertTrue ( notifications . toString ( ) , notifications . isEmpty ( ) ) ; \n + } \n + \n guava \ src \ com \ google \ common \ cache \ LocalCache . java \n + if ( valueReference ! = null & & newValue = = valueReference . get ( ) ) { \n + return newValue ; \n + } \n
guava - tests \ test \ com \ google \ common \ cache \ LocalCacheTest . java \n + import java . util . ArrayList ; \n + public void testComputeIfAbsent _ RemovalListener ( ) { \n + List < RemovalNotification < Object , Object > > notifications = new ArrayList < > ( ) ; \n + RemovalListener < Object , Object > removalListener = \n + new RemovalListener < Object , Object > ( ) { \n + @ Override \n + public void onRemoval ( RemovalNotification < Object , Object > notification ) { \n + notifications . add ( notification ) ; \n + } \n + } ; \n + Cache < Object , Object > cache = \n + CacheBuilder . newBuilder ( ) . removalListener ( removalListener ) . build ( ) ; \n + cache . put ( " a " , " b " ) ; \n + cache . asMap ( ) . computeIfAbsent ( " a " , k - > " c " ) ; \n + assertTrue ( notifications . toString ( ) , notifications . isEmpty ( ) ) ; \n + } \n + \n guava \ src \ com \ google \ common \ cache \ LocalCache . java \n + if ( valueReference ! = null & & newValue = = valueReference . get ( ) ) { \n + loadingValueReference . set ( newValue ) ; \n + setValue ( e , key , newValue , now ) ; \n + return newValue ; \n + } \n
services \ core \ java \ com \ android \ server \ ConnectivityService . java \n - import android . os . INetworkManagementService ; \n - private INetworkManagementService mNMS ; \n - public ConnectivityService ( Context context , INetworkManagementService netManager , \n - INetworkStatsService statsService ) { \n - this ( context , netManager , statsService , getDnsResolver ( context ) , new IpConnectivityLog ( ) , \n + public ConnectivityService ( Context context , INetworkStatsService statsService ) { \n + this ( context , statsService , getDnsResolver ( context ) , new IpConnectivityLog ( ) , \n - protected ConnectivityService ( Context context , INetworkManagementService netManager , \n - INetworkStatsService statsService , IDnsResolver dnsresolver , IpConnectivityLog logger , \n + protected ConnectivityService ( Context context , INetworkStatsService statsService , \n + IDnsResolver dnsresolver , IpConnectivityLog logger , \n - mNMS = Objects . requireNonNull ( netManager , " missing INetworkManagementService " ) ; \n - mTNS = new TestNetworkService ( mContext , mNMS ) ; \n + mTNS = new TestNetworkService ( mContext ) ; \n services \ core \ java \ com \ android \ server \ ConnectivityServiceInitializer . java \n - import android . os . INetworkManagementService ; \n - mConnectivity = new ConnectivityService ( context , getNetworkManagementService ( ) , \n - getNetworkStatsService ( ) ) ; \n + mConnectivity = new ConnectivityService ( context , getNetworkStatsService ( ) ) ; \n - private INetworkManagementService getNetworkManagementService ( ) { \n - return INetworkManagementService . Stub . asInterface ( \n - ServiceManager . getService ( Context . NETWORKMANAGEMENT _ SERVICE ) ) ; \n - } \n - \n services \ core \ java \ com \ android \ server \ TestNetworkService . java \n - import android . os . INetworkManagementService ; \n - @ NonNull private final INetworkManagementService mNMS ; \n - protected TestNetworkService ( \n - @ NonNull Context context , @ NonNull INetworkManagementService netManager ) { \n + protected TestNetworkService ( @ NonNull Context context ) { \n - mNMS = Objects . requireNonNull ( netManager , " missing INetworkManagementService " ) ; \n tests \ net \ integration \ src \ com \ android \ server \ net \ integrationtests \ ConnectivityServiceIntegrationTest . kt \n - context , netManager , statsService , dnsResolver , log , netd , deps ) \n + context , statsService , dnsResolver , log , netd , deps ) \n tests \ net \ java \ com \ android \ server \ ConnectivityServiceTest . java \n - mNetworkManagementService , \n - reset ( mNetworkManagementService ) ; \n - reset ( mNetworkManagementService ) ; \n - reset ( mNetworkManagementService ) ; \n - reset ( mNetworkManagementService ) ; \n
services \ core \ java \ com \ android \ server \ ConnectivityService . java \n - public void onInterfaceClassActivityChanged ( boolean isActive , int timerLabel , \n + public void onInterfaceClassActivityChanged ( boolean isActive , int transportType , \n - mNetworkActivityTracker . setAndReportNetworkActive ( isActive , timerLabel , timestampNs ) ; \n + mNetworkActivityTracker . setAndReportNetworkActive ( isActive , transportType , timestampNs ) ; \n - for ( NetworkAgentInfo nai : mNetworkAgentInfos ) { \n + for ( NetworkAgentInfo nai : mNetworkAgentInfos ) { \n - for ( NetworkAgentInfo nai : mNetworkAgentInfos ) { \n + for ( NetworkAgentInfo nai : mNetworkAgentInfos ) { \n
guava \ src \ com \ google \ common \ collect \ ImmutableList . java \n - case 1 : \n - return of ( get ( fromIndex ) ) ; \n
android \ guava \ src \ com \ google \ common \ util \ concurrent \ AggregateFuture . java \n - if ( wasInterrupted ( ) ) { \n + if ( wasInterrupted ) { \n guava \ src \ com \ google \ common \ util \ concurrent \ AggregateFuture . java \n - if ( wasInterrupted ( ) ) { \n + if ( wasInterrupted ) { \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ bazel \ repository \ starlark \ StarlarkRepositoryContext . java \n + import java . nio . file . Files ; \n + import java . nio . file . Paths ; \n - / / Download to outputDirectory and delete it after extraction \n + Path downloadDirectory ; \n + \n + / / Download to temp directory inside the outputDirectory and delete it after extraction \n + java . nio . file . Path tempDirectory = \n + Files . createTempDirectory ( Paths . get ( outputPath . toString ( ) ) , " temp " ) ; \n + downloadDirectory = \n + outputDirectory . getFileSystem ( ) . getPath ( tempDirectory . toFile ( ) . getAbsolutePath ( ) ) ; \n + \n - outputPath . getPath ( ) , \n + downloadDirectory , \n - if ( downloadedPath . exists ( ) ) { \n - downloadedPath . delete ( ) ; \n + if ( downloadDirectory . exists ( ) ) { \n + downloadDirectory . deleteTree ( ) ; \n - " Couldn ' t delete temporary file ( " + downloadedPath . getPathString ( ) + " ) " , e ) , \n + " Couldn ' t delete temporary directory ( " + downloadDirectory . getPathString ( ) + " ) " , e ) , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ analysis \ config \ CoreOptions . java \n - " Specifies the set of environment variables available to actions . " \n - + " Variables can be either specified by name , in which case the value will be " \n - + " taken from the invocation environment , or by the name = value pair which sets " \n - + " the value independent of the invocation environment . This option can be used " \n - + " multiple times ; for options given for the same variable , the latest wins , options " \n - + " for different variables accumulate . " ) \n + " Specifies the set of environment variables available to actions with target " \n + + " configuration . Variables can be either specified by name , in which case the " \n + + " value will be taken from the invocation environment , or by the name = value pair " \n + + " which sets the value independent of the invocation environment . This option can " \n + + " be used multiple times ; for options given for the same variable , the latest " \n + + " wins , options for different variables accumulate . " ) \n + @ Option ( \n + name = " host _ action _ env " , \n + converter = Converters . OptionalAssignmentConverter . class , \n + allowMultiple = true , \n + defaultValue = " null " , \n + documentationCategory = OptionDocumentationCategory . OUTPUT _ PARAMETERS , \n + effectTags = { OptionEffectTag . ACTION _ COMMAND _ LINES } , \n + help = \n + " Specifies the set of environment variables available to actions with host or execution " \n + + " configurations . Variables can be either specified by name , in which case the " \n + + " value will be taken from the invocation environment , or by the name = value pair " \n + + " which sets the value independent of the invocation environment . This option can " \n + + " be used multiple times ; for options given for the same variable , the latest " \n + + " wins , options for different variables accumulate . " ) \n + public List < Map . Entry < String , String > > hostActionEnvironment ; \n + \n + / / Pass host action environment variables \n + host . actionEnvironment = hostActionEnvironment ; \n + \n
maven _ push . gradle \n + task installArchives ( type : Upload ) { \n + description " Installs the artifacts to the local Maven repository . " \n + configuration = configurations [ ' archives ' ] \n + repositories { \n + mavenDeployer { \n + pom . groupId = GROUP \n + pom . artifactId = POM _ ARTIFACT _ ID \n + pom . version = VERSION _ NAME \n + \n + repository url : " file : / / $ { System . properties [ ' user . home ' ] } / . m2 / repository " \n + } \n + } \n + } \n + \n
library \ src \ main \ java \ com \ loopj \ android \ http \ AsyncHttpClient . java \n + List < RequestHandle > requestList ; \n - List < RequestHandle > requestList = requestMap . get ( context ) ; \n + requestList = requestMap . get ( context ) ; \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ com \ googlecode \ androidannotations \ processing \ BackgroundProcessor . java \n - import java . util . ArrayList ; \n - import java . util . List ; \n - import javax . lang . model . element . VariableElement ; \n - import com . sun . codemodel . JExpression ; \n - String backgroundMethodName = element . getSimpleName ( ) . toString ( ) ; \n - JMethod backgroundMethod = holder . eBean . method ( JMod . PUBLIC , codeModel . VOID , backgroundMethodName ) ; \n - backgroundMethod . annotate ( Override . class ) ; \n - \n - / / Method parameters \n - List < JVar > parameters = new ArrayList < JVar > ( ) ; \n - for ( VariableElement parameter : executableElement . getParameters ( ) ) { \n - String parameterName = parameter . getSimpleName ( ) . toString ( ) ; \n - JClass parameterClass = helper . typeMirrorToJClass ( parameter . asType ( ) , holder ) ; \n - JVar param = backgroundMethod . param ( JMod . FINAL , parameterClass , parameterName ) ; \n - parameters . add ( param ) ; \n - } \n + JMethod backgroundMethod = helper . overrideAnnotatedMethod ( executableElement , holder ) ; \n - JExpression activitySuper = holder . eBean . staticRef ( " super " ) ; \n + helper . callSuperMethod ( backgroundMethod , codeModel , holder , runTry . body ( ) ) ; \n - JInvocation superCall = runTry . body ( ) . invoke ( activitySuper , backgroundMethod ) ; \n - for ( JVar param : parameters ) { \n - superCall . arg ( param ) ; \n - } \n
AndroidAnnotations \ androidannotations \ src \ main \ java \ com \ googlecode \ androidannotations \ processing \ UiThreadProcessor . java \n - import java . util . ArrayList ; \n - import java . util . List ; \n - import javax . lang . model . element . VariableElement ; \n - import com . sun . codemodel . JExpression ; \n - String backgroundMethodName = element . getSimpleName ( ) . toString ( ) ; \n - JMethod method = holder . eBean . method ( JMod . PUBLIC , codeModel . VOID , backgroundMethodName ) ; \n - method . annotate ( Override . class ) ; \n - \n - / / Method parameters \n - List < JVar > parameters = new ArrayList < JVar > ( ) ; \n - for ( VariableElement parameter : executableElement . getParameters ( ) ) { \n - String parameterName = parameter . getSimpleName ( ) . toString ( ) ; \n - JClass parameterClass = helper . typeMirrorToJClass ( parameter . asType ( ) , holder ) ; \n - JVar param = method . param ( JMod . FINAL , parameterClass , parameterName ) ; \n - parameters . add ( param ) ; \n - } \n + JMethod method = helper . overrideAnnotatedMethod ( executableElement , holder ) ; \n - JExpression activitySuper = holder . eBean . staticRef ( " super " ) ; \n - \n - JInvocation superCall = runTry . body ( ) . invoke ( activitySuper , method ) ; \n - for ( JVar param : parameters ) { \n - superCall . arg ( param ) ; \n - } \n + helper . callSuperMethod ( method , codeModel , holder , runTry . body ( ) ) ; \n + \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ runtime \ commands \ RunCommand . java \n - / / TODO ( bazel - team ) : audit the use of null values by caller . It looks unsafe . \n - private List < String > computeArgs ( \n - CommandEnvironment env , ConfiguredTarget targetToRun , List < String > commandLineArgs ) { \n + private List < String > computeArgs ( ConfiguredTarget targetToRun , List < String > commandLineArgs ) \n + throws InterruptedException , CommandLineExpansionException { \n - try { \n - Iterables . addAll ( args , targetArgs . arguments ( ) ) ; \n - } catch ( InterruptedException ex ) { \n - / / TODO ( b / 173521404 ) : report a specific FailureDetail for " interrupted " . \n - env . getReporter ( ) . handle ( Event . error ( " Interrupted while expanding target command line " ) ) ; \n - return null ; \n - } catch ( CommandLineExpansionException e ) { \n - env . getReporter ( ) . handle ( Event . error ( " Could not expand target command line : " + e ) ) ; \n - return null ; \n - } \n + Iterables . addAll ( args , targetArgs . arguments ( ) ) ; \n - String message = " run : argument expansion interrupted " ; \n + String message = " run : command line expansion interrupted " ; \n - List < String > args = computeArgs ( env , targetToRun , commandLineArgs ) ; \n + List < String > args = computeArgs ( targetToRun , commandLineArgs ) ; \n + " - - shell _ executable = < path > flag to specify its path , e . g . " \n + " - - shell _ executable = / bin / bash " , \n + } catch ( InterruptedException e ) { \n + String message = " run : command line expansion interrupted " ; \n + env . getReporter ( ) . handle ( Event . error ( message ) ) ; \n + return BlazeCommandResult . detailedExitCode ( \n + InterruptedFailureDetails . detailedExitCode ( message ) ) ; \n + } catch ( CommandLineExpansionException e ) { \n + return reportAndCreateFailureResult ( \n + env , Strings . nullToEmpty ( e . getMessage ( ) ) , Code . COMMAND _ LINE _ EXPANSION _ FAILURE ) ; \n
site \ docs \ guide . md \n - ` 36 ` - Local Environmental Issue , suspected permanent . \n - ` 37 ` - Unhandled Exception / Internal Bazel Error . \n - ` 38 ` - Reserved for Google - internal use . \n - - ` 40 - 44 ` - Reserved for errors in Bazel ' s command line launcher , \n - ` bazel . cc ` that are not command line \n - related . Typically these are related to bazel server \n - being unable to launch itself . \n + - ` 41 - 44 ` - Reserved for Google - internal use . \n - ` 45 ` - Error publishing results to the Build Event Service . \n src \ main \ java \ com \ google \ devtools \ build \ lib \ util \ ExitCode . java \n - public static final ExitCode RESERVED = ExitCode . createInfrastructureFailure ( 40 , " RESERVED " ) ; \n - \n - / * \n - exit codes [ 50 . . 60 ] and 253 are reserved for site specific wrappers to Bazel . \n - * / \n - \n src \ test \ java \ com \ google \ devtools \ build \ lib \ bugreport \ BugReportTest . java \n - functionForStackFrameTest ( ) , ExitCode . RESERVED ) ) ; \n + functionForStackFrameTest ( ) , ExitCode . BLAZE _ INTERNAL _ ERROR ) ) ; \n - assertThat ( strings ) . containsExactly ( " 40 " ) ; \n + assertThat ( strings ) . containsExactly ( " 37 " ) ; \n - assertThat ( exitCode . getExitCode ( ) ) . isEqualTo ( ExitCode . RESERVED ) ; \n + assertThat ( exitCode . getExitCode ( ) ) . isEqualTo ( ExitCode . BLAZE _ INTERNAL _ ERROR ) ; \n
okhttp \ src \ test \ java \ okhttp3 \ CallTest . java \n - Response response = client . newCall ( request ) . execute ( ) ; \n + client . newCall ( request ) . execute ( ) ; \n okhttp \ src \ test \ java \ okhttp3 \ ConnectionSpecTest . java \n - ConnectionSpec tlsSpec = new ConnectionSpec . Builder ( ConnectionSpec . MODERN _ TLS ) \n + new ConnectionSpec . Builder ( ConnectionSpec . MODERN _ TLS ) \n okhttp \ src \ test \ java \ okhttp3 \ EventListenerTest . java \n - private Matcher < Long > lessThan ( final long value ) { \n - return new BaseMatcher < Long > ( ) { \n - @ Override public void describeTo ( Description description ) { \n - description . appendText ( " < " + value ) ; \n - } \n - \n - @ Override public boolean matches ( Object o ) { \n - return ( ( Long ) o ) < value ; \n - } \n - } ; \n - } \n - \n okhttp \ src \ test \ java \ okhttp3 \ HeadersTest . java \n - Headers headers = new Headers . Builder ( ) \n + new Headers . Builder ( ) \n okhttp \ src \ test \ java \ okhttp3 \ internal \ connection \ ConnectionPoolTest . java \n - RealConnection c1 = newConnection ( pool , routeA1 , Long . MAX _ VALUE ) ; \n + newConnection ( pool , routeA1 , Long . MAX _ VALUE ) ; \n okhttp \ src \ test \ java \ okhttp3 \ internal \ http2 \ Http2ConnectionTest . java \n - / * * Reads { @ code prefix } from { @ code source } . * / \n - private void assertStreamPrefix ( String prefix , BufferedSource source ) throws IOException { \n - assertThat ( source . readUtf8 ( Utf8 . size ( prefix ) ) ) . isEqualTo ( prefix ) ; \n - } \n - \n
okhttp \ src \ test \ java \ okhttp3 \ CacheTest . java \n - assertThat ( ( double ) ( response2 . receivedResponseAtMillis ( ) - t1 ) ) . isCloseTo ( \n + Long originalTimestamp = response2 . receivedResponseAtMillis ( ) ; \n + assertThat ( ( double ) ( originalTimestamp - t1 ) ) . isCloseTo ( \n - assertThat ( ( double ) ( response3 . receivedResponseAtMillis ( ) - t1 ) ) . isCloseTo ( \n - ( double ) 0 , offset ( 250 . 0 ) ) ; \n + assertThat ( response3 . receivedResponseAtMillis ( ) ) . isEqualTo ( originalTimestamp ) ; \n
src \ test \ shell \ integration \ minimal _ jdk _ test . sh \n - # Bazel ' s install base is < 275MB with minimal JDK and > 300MB with an all \n + # Bazel ' s install base is < 280MB with minimal JDK and > 300MB with an all \n - function test _ size _ less _ than _ 275MB ( ) { \n + function test _ size _ less _ than _ 280MB ( ) { \n - maxsize = $ ( ( 1024 * 275 ) ) \n + maxsize = $ ( ( 1024 * 280 ) ) \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ remote \ RemoteOutputService . java \n - boolean rewindingEnabled ) { \n + boolean trackFailedRemoteReads ) { \n src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ SkyframeActionExecutor . java \n - boolean rewindingEnabled ) { \n + boolean trackFailedRemoteReads ) { \n - rewindingEnabled ) ; \n + trackFailedRemoteReads ) ; \n src \ main \ java \ com \ google \ devtools \ build \ lib \ vfs \ OutputService . java \n - * @ param rewindingEnabled whether to track failed remote reads to enable action rewinding \n + * @ param trackFailedRemoteReads whether to track failed remote reads to make LostInput exceptions \n - boolean rewindingEnabled ) { \n + boolean trackFailedRemoteReads ) { \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ BzlCompileValue . java \n + \n + @ Override \n + public String toString ( ) { \n + return String . format ( " % s : [ % s ] % s " , functionName ( ) , root , label ) ; \n + } \n
src \ main \ java \ com \ google \ devtools \ build \ skyframe \ SkyFunctionEnvironment . java \n - * The current values of the direct deps this node had at the previous version . \n + * The current entries of the direct deps this node had at the previous version . \n - * < p > Used only when { @ link # PREFETCH _ AND _ RETAIN _ OLD _ DEPS } is { @ code true } . \n + * < p > Used only when { @ link # PREFETCH _ AND _ RETAIN _ OLD _ DEPS } is { @ code true } , and used only for the \n + * values stored in the entries ; do not do any NodeEntry operations on these . \n - private ImmutableMap < SkyKey , SkyValue > oldDepsValues = ImmutableMap . of ( ) ; \n + private ImmutableMap < SkyKey , ? extends NodeEntry > oldDepsEntries = ImmutableMap . of ( ) ; \n - ImmutableMap . Builder < SkyKey , SkyValue > oldDepValuesBuilder = \n - ImmutableMap . builderWithExpectedSize ( oldDeps . size ( ) ) ; \n - Map < SkyKey , ? extends NodeEntry > map = \n - evaluatorContext . getBatchValues ( requestor , Reason . PREFETCH , oldDeps ) ; \n - for ( Entry < SkyKey , ? extends NodeEntry > entry : map . entrySet ( ) ) { \n - SkyValue valueMaybeWithMetadata = entry . getValue ( ) . getValueMaybeWithMetadata ( ) ; \n - if ( valueMaybeWithMetadata ! = null ) { \n - oldDepValuesBuilder . put ( entry . getKey ( ) , valueMaybeWithMetadata ) ; \n - } \n - } \n - this . oldDepsValues = oldDepValuesBuilder . build ( ) ; \n + this . oldDepsEntries = \n + ImmutableMap . copyOf ( evaluatorContext . getBatchValues ( requestor , Reason . PREFETCH , oldDeps ) ) ; \n - * < li > { @ link # oldDepsValues } \n + * < li > { @ link # oldDepsEntries } \n - * < li > { @ link # oldDepsValues } \n + * < li > { @ link # oldDepsEntries } \n - SkyValue maybeGetValueFromErrorOrDeps ( SkyKey key ) { \n + SkyValue maybeGetValueFromErrorOrDeps ( SkyKey key ) throws InterruptedException { \n - SkyValue oldDepsValue = oldDepsValues . get ( key ) ; \n - if ( oldDepsValue ! = null ) { \n - return oldDepsValue ; \n + SkyValue oldDepsValueOrNullMarker = getValueOrNullMarker ( oldDepsEntries . get ( key ) ) ; \n + if ( oldDepsValueOrNullMarker ! = NULL _ MARKER ) { \n + return oldDepsValueOrNullMarker ; \n
android \ PhysicalWeb \ build . gradle \n - classpath ' com . android . tools . build : gradle : 1 . 0 . 0 ' \n + classpath ' com . android . tools . build : gradle : 1 . 3 . 0 ' \n
android \ PhysicalWeb \ app \ src \ main \ java \ org \ physical _ web \ physicalweb \ BeaconConfigFragment . java \n + import java . net . URI ; \n + / * * \n + * Check if the given URL would fit in the UriBeacon uri field . \n + * @ param url URL to check \n + * @ return True if the URL length is within bounds \n + * / \n + private static boolean hasValidUrlLength ( String url ) { \n + int uriLength = ConfigUriBeacon . uriLength ( url ) ; \n + return 0 < = uriLength & & uriLength < = ConfigUriBeacon . MAX _ URI _ LENGTH ; \n + } \n + \n + / * * \n + * Check if the given URL only uses characters from the set defined in RFC 3986 section 2 \n + * https : / / tools . ietf . org / html / rfc3986 # section - 2 \n + * @ param url URL to check \n + * @ return True if the URL is RFC 3986 compliant \n + * / \n + private static boolean isAsciiUrl ( String url ) { \n + boolean isCompliant = false ; \n + try { \n + URI uri = new URI ( url ) ; \n + String urlString = uri . toASCIIString ( ) ; \n + isCompliant = url . equals ( urlString ) ; \n + } \n + catch ( URISyntaxException e ) { \n + / / bad url \n + } \n + return isCompliant ; \n + } \n + \n - Toast . makeText ( getActivity ( ) , R . string . url _ shortening _ error , Toast . LENGTH _ SHORT ) . show ( ) ; \n + / / Avoid showing a " URL too long " error if we shortened due to non - ASCII chars in url \n + int errorMessageStringId = R . string . url _ shortening _ error ; \n + if ( hasValidUrlLength ( oldUrl ) & & ! isAsciiUrl ( oldUrl ) ) { \n + errorMessageStringId = R . string . url _ charset _ error ; \n + } \n + Toast . makeText ( getActivity ( ) , errorMessageStringId , Toast . LENGTH _ SHORT ) . show ( ) ; \n - if ( ConfigUriBeacon . uriLength ( url ) > ConfigUriBeacon . MAX _ URI _ LENGTH ) { \n + if ( ! hasValidUrlLength ( url ) | | ! isAsciiUrl ( url ) ) { \n android \ PhysicalWeb \ app \ src \ main \ res \ values \ strings . xml \n + < string name = " url _ charset _ error " > Non - ASCII characters unsupported in URL . Please use a shortener . < / string > \n
build . gradle \n - classpath ' com . android . tools . build : gradle : 3 . 3 . 2 ' \n + classpath ' com . android . tools . build : gradle : 3 . 4 . 0 ' \n gradle \ wrapper \ gradle - wrapper . properties \n - # Mon Apr 08 16 : 35 : 19 MSK 2019 \n + # Tue Apr 23 15 : 38 : 19 MSK 2019 \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 10 . 1 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 5 . 1 . 1 - all . zip \n library \ build . gradle \n - sourceCompatibility JavaVersion . VERSION _ 1 _ 6 \n - targetCompatibility JavaVersion . VERSION _ 1 _ 6 \n + sourceCompatibility JavaVersion . VERSION _ 1 _ 8 \n + targetCompatibility JavaVersion . VERSION _ 1 _ 8 \n deleted file \n sample \ src \ main \ res \ drawable - ldpi \ ic _ empty . png \n Binary files a / sample / src / main / res / drawable - ldpi / ic _ empty . png and / dev / null differ \n deleted file \n sample \ src \ main \ res \ drawable - ldpi \ ic _ error . png \n Binary files a / sample / src / main / res / drawable - ldpi / ic _ error . png and / dev / null differ \n deleted file \n sample \ src \ main \ res \ drawable - ldpi \ ic _ launcher . png \n Binary files a / sample / src / main / res / drawable - ldpi / ic _ launcher . png and / dev / null differ \n deleted file \n sample \ src \ main \ res \ drawable - ldpi \ ic _ stub . png \n Binary files a / sample / src / main / res / drawable - ldpi / ic _ stub . png and / dev / null differ \n
build . gradle \n + google ( ) \n - classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' \n + classpath ' com . android . tools . build : gradle : 3 . 3 . 2 ' \n + google ( ) \n gradle \ wrapper \ gradle - wrapper . properties \n - # Sat Jun 06 16 : 36 : 13 FET 2015 \n + # Mon Apr 08 16 : 35 : 19 MSK 2019 \n - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 5 - all . zip \n + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 10 . 1 - all . zip \n library \ build . gradle \n - compileSdkVersion 23 \n - buildToolsVersion " 23 . 0 . 2 " \n + compileSdkVersion 28 \n + buildToolsVersion " 28 . 0 . 3 " \n - minSdkVersion 5 \n - targetSdkVersion 22 \n + minSdkVersion 14 \n + targetSdkVersion 28 \n - testCompile ' junit : junit : 4 . 12 ' \n - testCompile ' org . robolectric : robolectric : 3 . 0 - rc3 ' \n - testCompile ' com . squareup . assertj : assertj - android : 1 . 0 . 0 ' \n + testImplementation ' junit : junit : 4 . 12 ' \n + testImplementation ' org . robolectric : robolectric : 3 . 0 - rc3 ' \n + testImplementation ' com . squareup . assertj : assertj - android : 1 . 0 . 0 ' \n sample \ build . gradle \n - compileSdkVersion 23 \n - buildToolsVersion " 23 . 0 . 2 " \n + compileSdkVersion 28 \n + buildToolsVersion " 28 . 0 . 3 " \n - minSdkVersion 5 \n - targetSdkVersion 22 \n + minSdkVersion 14 \n + targetSdkVersion 28 \n - compile project ( ' : library ' ) \n - compile ' com . android . support : support - v4 : 23 . 1 . 1 ' \n - compile ' com . squareup . okhttp : okhttp : 2 . 4 . 0 ' \n + implementation project ( ' : library ' ) \n + implementation ' com . android . support : appcompat - v7 : 28 . 0 . 0 ' \n + implementation ' com . squareup . okhttp : okhttp : 2 . 4 . 0 ' \n
pom . xml \n - < android . version > 7 . 1 < / android . version > \n + < android . version > 9 . 0 < / android . version > \n
CHANGES \n - [ BREAKING CHANGE ] Fixed keycode representations for ESCAPE , END , INSERT and F1 to F12 . These keys are working on Android now , but if you hardcoded or saved the values you might need to migrate . \n - [ BREAKING CHANGE ] TextureAtlas . AtlasRegion and Region splits and pads fields have been removed and moved to name / value pairs , use # findValue ( " split " ) and # findValue ( " pad " ) instead . \n + - iOS : Update to MobiVM 2 . 3 . 12 \n - GWT : Key codes set with Gdx . input . setCatchKey prevent default browser behaviour \n - Added Scaling . contain mode : Scales the source to fit the target while keeping the same aspect ratio , but the source is not scaled at all if smaller in both directions . \n - API Addition : Added hasContents ( ) to Clipboard interface , to reduce clipboard notifications on iOS 14 \n extensions \ gdx - setup \ src \ com \ badlogic \ gdx \ setup \ DependencyBank . java \n - static String roboVMVersion = " 2 . 3 . 11 " ; \n + static String roboVMVersion = " 2 . 3 . 12 " ; \n fetch . xml \n - < property name = " robovm - version " value = " 2 . 3 . 11 " / > \n + < property name = " robovm - version " value = " 2 . 3 . 12 " / > \n gradle \ dependencies . gradle \n - versions . robovm = " 2 . 3 . 11 " \n + versions . robovm = " 2 . 3 . 12 " \n pom . xml \n - < robovm . version > 2 . 3 . 11 < / robovm . version > \n + < robovm . version > 2 . 3 . 12 < / robovm . version > \n
tests \ net \ integration \ src \ com \ android \ server \ net \ integrationtests \ ConnectivityServiceIntegrationTest . kt \n + import android . os . UserHandle \n + import org . mockito . AdditionalAnswers \n + import org . mockito . Mockito . anyInt \n + import org . mockito . Mockito . eq \n - doNothing ( ) . ` when ` ( context ) . sendStickyBroadcastAsUser ( any ( ) , any ( ) , any ( ) ) \n + val asUserCtx = mock ( Context : : class . java , AdditionalAnswers . delegatesTo < Context > ( context ) ) \n + doReturn ( UserHandle . ALL ) . ` when ` ( asUserCtx ) . user \n + doReturn ( asUserCtx ) . ` when ` ( context ) . createContextAsUser ( eq ( UserHandle . ALL ) , anyInt ( ) ) \n + doNothing ( ) . ` when ` ( context ) . sendStickyBroadcast ( any ( ) , any ( ) ) \n
core \ api \ system - current . txt \n + method @ NonNull @ RequiresPermission ( android . Manifest . permission . GET _ RUNTIME _ PERMISSIONS ) public int [ ] getSystemPermissionUids ( @ NonNull String ) ; \n core \ java \ android \ os \ ISystemConfig . aidl \n + \n + / * * \n + * @ see SystemConfigManager # getSystemPermissionUids \n + * / \n + int [ ] getSystemPermissionUids ( String permissionName ) ; \n core \ java \ android \ os \ SystemConfigManager . java \n + \n + / * * \n + * Get uids which have been granted given permission in system configuration . \n + * \n + * The uids and assigning permissions are defined on data / etc / platform . xml \n + * \n + * @ param permissionName The target permission . \n + * @ return The uids have been granted given permission in system configuration . \n + * / \n + @ RequiresPermission ( Manifest . permission . GET _ RUNTIME _ PERMISSIONS ) \n + @ NonNull \n + public int [ ] getSystemPermissionUids ( @ NonNull String permissionName ) { \n + try { \n + return mInterface . getSystemPermissionUids ( permissionName ) ; \n + } catch ( RemoteException e ) { \n + throw e . rethrowFromSystemServer ( ) ; \n + } \n + } \n services \ java \ com \ android \ server \ SystemConfigService . java \n + import android . util . ArraySet ; \n + import android . util . SparseArray ; \n + \n + import com . android . internal . util . ArrayUtils ; \n + \n + @ Override \n + public int [ ] getSystemPermissionUids ( String permissionName ) { \n + mContext . enforceCallingOrSelfPermission ( Manifest . permission . GET _ RUNTIME _ PERMISSIONS , \n + " getSystemPermissionUids requires GET _ RUNTIME _ PERMISSIONS " ) ; \n + final List < Integer > uids = new ArrayList < > ( ) ; \n + final SparseArray < ArraySet < String > > systemPermissions = \n + SystemConfig . getInstance ( ) . getSystemPermissions ( ) ; \n + for ( int i = 0 ; i < systemPermissions . size ( ) ; i + + ) { \n + final ArraySet < String > permissions = systemPermissions . valueAt ( i ) ; \n + if ( permissions ! = null & & permissions . contains ( permissionName ) ) { \n + uids . add ( systemPermissions . keyAt ( i ) ) ; \n + } \n + } \n + return ArrayUtils . convertToIntArray ( uids ) ; \n + } \n
src \ main \ native \ windows \ file . cc \n + # ifndef IO _ REPARSE _ TAG _ PROJFS \n + # define IO _ REPARSE _ TAG _ PROJFS 0x9000001C \n + # endif \n + \n
tools \ cpp \ windows _ cc _ configure . bzl \n - if result . return _ code ! = 0 : \n - auto _ configure _ fail ( " Failed to get clang version by running \ " % s - v \ " " % clang _ cl ) \n + first _ line = result . stderr . strip ( ) . splitlines ( ) [ 0 ] \n - # Stderr should look like " clang version X . X . X . . . " \n - return result . stderr . strip ( ) . split ( " " ) [ 2 ] \n + # The first line of stderr should look like " clang version X . X . X " \n + if result . return _ code ! = 0 or not first _ line . startswith ( " clang version " ) : \n + auto _ configure _ fail ( " Failed to get clang version by running \ " % s - v \ " " % clang _ cl ) \n + return first _ line . split ( " " ) [ 2 ] \n
android \ guava - tests \ test \ com \ google \ common \ collect \ ImmutableMapTest . java \n + / / TODO ( b / 172823566 ) : Use mainline testToImmutableMap once CollectorTester is usable to java7 . \n + public void testToImmutableMap _ java7 _ combine ( ) { \n + ImmutableMap . Builder < String , Integer > zis = \n + ImmutableMap . < String , Integer > builder ( ) . put ( " one " , 1 ) ; \n + ImmutableMap . Builder < String , Integer > zat = \n + ImmutableMap . < String , Integer > builder ( ) . put ( " two " , 2 ) . put ( " three " , 3 ) ; \n + assertMapEquals ( zis . combine ( zat ) . build ( ) , " one " , 1 , " two " , 2 , " three " , 3 ) ; \n + } \n + \n + / / TODO ( b / 172823566 ) : Use mainline testToImmutableMap once CollectorTester is usable to java7 . \n + public void testToImmutableMap _ exceptionOnDuplicateKey _ java7 _ combine ( ) { \n + ImmutableMap . Builder < String , Integer > zis = \n + ImmutableMap . < String , Integer > builder ( ) . put ( " one " , 1 ) . put ( " two " , 2 ) ; \n + ImmutableMap . Builder < String , Integer > zat = \n + ImmutableMap . < String , Integer > builder ( ) . put ( " two " , 22 ) . put ( " three " , 3 ) ; \n + try { \n + zis . combine ( zat ) . build ( ) ; \n + fail ( " Expected IllegalArgumentException " ) ; \n + } catch ( IllegalArgumentException expected ) { \n + / / expected \n + } \n + } \n + \n android \ guava \ src \ com \ google \ common \ collect \ ImmutableMap . java \n + @ CanIgnoreReturnValue \n + Builder < K , V > combine ( Builder < K , V > other ) { \n + checkNotNull ( other ) ; \n + ensureCapacity ( this . size + other . size ) ; \n + System . arraycopy ( \n + other . alternatingKeysAndValues , \n + 0 , \n + this . alternatingKeysAndValues , \n + this . size * 2 , \n + other . size * 2 ) ; \n + this . size + = other . size ; \n + return this ; \n + } \n + \n
guava - tests \ test \ com \ google \ common \ collect \ TableCollectorsTest . java \n - public class TableCollectorsTest extends TestCase { \n + public class TableCollectorsTest { \n + \n + private TableCollectorsTest ( ) { } \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ util \ BUILD \n - " / / third _ party : apache _ commons _ lang " , \n src \ main \ java \ com \ google \ devtools \ build \ lib \ util \ ResourceConverter . java \n + import com . google . common . primitives . Ints ; \n - import org . apache . commons . lang . math . NumberUtils ; \n - if ( NumberUtils . isNumber ( input ) ) { \n + if ( Ints . tryParse ( input ) ! = null ) { \n src \ test \ java \ com \ google \ devtools \ build \ lib \ runtime \ BuildEventStreamerTest . java \n + import com . google . common . base . Stopwatch ; \n - import org . apache . commons . lang . time . StopWatch ; \n - StopWatch watch = new StopWatch ( ) ; \n - watch . start ( ) ; \n + Stopwatch watch = Stopwatch . createStarted ( ) ; \n - time + = watch . getTime ( ) ; \n + time + = watch . elapsed ( ) . toMillis ( ) ; \n src \ test \ java \ com \ google \ devtools \ build \ lib \ util \ ResourceConverterTest . java \n - assertThat ( thrown ) . hasMessageThat ( ) . contains ( " not an int " ) ; \n + assertThat ( thrown ) . hasMessageThat ( ) . contains ( " This flag takes an integer " ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ skyframe \ BUILD \n + " : recursive _ pkg _ key " , \n + " : recursive _ pkg _ key " , \n + " : recursive _ pkg _ key " , \n
src \ main \ java \ org \ junit \ experimental \ theories \ PotentialAssignment . java \n + \n + public CouldNotGenerateValueException ( ) { \n + } \n + \n + public CouldNotGenerateValueException ( Throwable t ) { \n + super ( t ) ; \n + } \n src \ main \ java \ org \ junit \ experimental \ theories \ internal \ AllMembersSupplier . java \n - } catch ( Throwable e ) { \n + } catch ( Throwable t ) { \n - Assume . assumeThat ( e , not ( instanceOf ( ignorable ) ) ) ; \n + Assume . assumeThat ( t , not ( instanceOf ( ignorable ) ) ) ; \n - throw new CouldNotGenerateValueException ( ) ; \n + throw new CouldNotGenerateValueException ( t ) ; \n
src \ main \ java \ org \ junit \ experimental \ theories \ DataPoint . java \n - * DataPoints will only be considered as potential values for parameters for \n - * which their types are assignable . When multiple sets of DataPoints exist with \n - * overlapping types more control can be obtained by naming the DataPoints using \n - * the value of this annotation , e . g . with \n + * A DataPoint is only considered as a potential value for parameters for \n + * which its type is assignable . When multiple { @ code DataPoint } s exist \n + * with overlapping types more control can be obtained by naming each DataPoint \n + * using the value of this annotation , e . g . with \n - * & # 064 ; ParameterSuppliedBy } annotations ) will use all DataPoints that are \n + * & # 064 ; ParameterSuppliedBy } annotations ) will use all { @ code DataPoint } s that are \n - * DataPoints . \n + * { @ code DataPoint } s . \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ CompilationSupport . java \n - import com . google . devtools . build . lib . rules . cpp . UmbrellaHeaderAction ; \n - private CompilationSupport registerGenerateUmbrellaHeaderAction ( \n - Artifact umbrellaHeader , NestedSet < Artifact > publicHeaders ) { \n - ruleContext . registerAction ( \n - new UmbrellaHeaderAction ( \n - ruleContext . getActionOwner ( ) , \n - umbrellaHeader , \n - publicHeaders , \n - ImmutableList . < PathFragment > of ( ) ) ) ; \n - \n - return this ; \n - } \n - \n - CompilationSupport registerGenerateModuleMapAction ( CompilationArtifacts compilationArtifacts ) { \n + CompilationSupport registerGenerateModuleMapAction ( CompilationArtifacts compilationArtifacts ) \n + throws RuleErrorException , InterruptedException { \n + ObjcCppSemantics semantics = createObjcCppSemantics ( ) ; \n + CcCompilationHelper ccCompilationHelper = \n + new CcCompilationHelper ( \n + ruleContext , \n + ruleContext , \n + ruleContext . getLabel ( ) , \n + CppHelper . getGrepIncludes ( ruleContext ) , \n + semantics , \n + getFeatureConfiguration ( ruleContext , toolchain , buildConfiguration , semantics ) , \n + CcCompilationHelper . SourceCategory . CC _ AND _ OBJC , \n + toolchain , \n + toolchain . getFdoContext ( ) , \n + buildConfiguration , \n + TargetUtils . getExecutionInfo ( \n + ruleContext . getRule ( ) , ruleContext . isAllowTagsPropagation ( ) ) , \n + / * shouldProcessHeaders = * / false ) ; \n + \n + \n - registerGenerateModuleMapAction ( moduleMap , publicHeaders ) ; \n - Optional < Artifact > umbrellaHeader = moduleMap . getUmbrellaHeader ( ) ; \n - if ( umbrellaHeader . isPresent ( ) ) { \n - registerGenerateUmbrellaHeaderAction ( umbrellaHeader . get ( ) , publicHeaders ) ; \n - } \n + ccCompilationHelper . setCppModuleMap ( moduleMap ) . addPublicHeaders ( publicHeaders . toList ( ) ) ; \n + \n + ccCompilationHelper . compile ( ruleContext ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ cpp \ CcToolchainProvider . java \n + @ Override \n + public Depset getStripFilesForStarlark ( StarlarkThread thread ) throws EvalException { \n + CcModule . checkPrivateStarlarkificationAllowlist ( thread ) ; \n + return Depset . of ( Artifact . TYPE , getStripFiles ( ) ) ; \n + } \n + \n src \ main \ java \ com \ google \ devtools \ build \ lib \ starlarkbuildapi \ cpp \ CcToolchainProviderApi . java \n + @ StarlarkMethod ( name = " strip _ files " , documented = false , useStarlarkThread = true ) \n + Depset getStripFilesForStarlark ( StarlarkThread thread ) throws EvalException ; \n + \n src \ test \ java \ com \ google \ devtools \ build \ lib \ rules \ cpp \ StarlarkCcCommonTest . java \n - " toolchain . coverage _ files ( ) " ) ; \n + " toolchain . coverage _ files ( ) " , \n + " toolchain . strip _ files ( ) " ) ; \n
library \ src \ main \ java \ com \ afollestad \ materialdialogs \ prefs \ MaterialEditTextPreference . java \n + import android . support . v7 . widget . AppCompatEditText ; \n + private EditText mEditText ; \n + \n + mEditText = new AppCompatEditText ( context , attrs ) ; \n + mEditText . setEnabled ( true ) ; \n - ( ( ViewGroup ) getEditText ( ) . getParent ( ) ) . removeView ( editText ) ; \n + ( ( ViewGroup ) mEditText . getParent ( ) ) . removeView ( editText ) ; \n - getEditText ( ) . setText ( " " ) ; \n + mEditText . setText ( " " ) ; \n - getEditText ( ) . setText ( getText ( ) ) ; \n - ViewParent oldParent = getEditText ( ) . getParent ( ) ; \n + mEditText . setText ( getText ( ) ) ; \n + ViewParent oldParent = mEditText . getParent ( ) ; \n - ( ( ViewGroup ) oldParent ) . removeView ( getEditText ( ) ) ; \n - onAddEditTextToDialogView ( view , getEditText ( ) ) ; \n + ( ( ViewGroup ) oldParent ) . removeView ( mEditText ) ; \n + onAddEditTextToDialogView ( view , mEditText ) ; \n + } \n + } \n + \n + @ Override \n + protected void onDialogClosed ( boolean positiveResult ) { \n + if ( positiveResult ) { \n + String value = mEditText . getText ( ) . toString ( ) ; \n + if ( callChangeListener ( value ) ) { \n + setText ( value ) ; \n + } \n + public EditText getEditText ( ) { \n + return mEditText ; \n + } \n + \n - if ( getEditText ( ) . getText ( ) . length ( ) > 0 ) \n - getEditText ( ) . setSelection ( getEditText ( ) . length ( ) ) ; \n + if ( mEditText . getText ( ) . length ( ) > 0 ) \n + mEditText . setSelection ( mEditText . length ( ) ) ; \n - MDTintHelper . setTint ( getEditText ( ) , mColor ) ; \n + MDTintHelper . setTint ( mEditText , mColor ) ; \n - String value = getEditText ( ) . getText ( ) . toString ( ) ; \n + String value = mEditText . getText ( ) . toString ( ) ; \n
library \ src \ main \ res \ values - v11 \ styles . xml \n + < item name = " android : actionModeBackground " > @ color / primary _ material _ dark < / item > \n + < item name = " android : actionModeCloseDrawable " > @ drawable / abc _ ic _ ab _ back _ mtrl _ am _ alpha < / item > \n + \n + < item name = " android : actionModeBackground " > @ color / primary _ material _ dark < / item > \n + < item name = " android : actionModeCloseDrawable " > @ drawable / abc _ ic _ ab _ back _ mtrl _ am _ alpha < / item > \n + \n
dubbo - filter \ dubbo - filter - cache \ src \ main \ java \ com \ alibaba \ dubbo \ cache \ support \ lru \ LruCache . java \n + import com . alibaba . dubbo . common . utils . LRUCache ; \n - this . store = new LinkedHashMap < Object , Object > ( ) { \n - private static final long serialVersionUID = - 3834209229668463829L ; \n - \n - @ Override \n - protected boolean removeEldestEntry ( Entry < Object , Object > eldest ) { \n - return size ( ) > max ; \n - } \n - } ; \n + this . store = new LRUCache < Object , Object > ( max ) ; \n
dubbo - filter \ dubbo - filter - cache \ src \ main \ java \ com \ alibaba \ dubbo \ cache \ support \ lru \ LruCache . java \n - import java . util . LinkedHashMap ; \n - import java . util . Map . Entry ; \n - this . store = new LRUCache < Object , Object > ( max ) ; \n + this . store = new LRUCache < Object , Object > ( max ) ; \n - synchronized ( store ) { \n - store . put ( key , value ) ; \n - } \n + store . put ( key , value ) ; \n - synchronized ( store ) { \n - return store . get ( key ) ; \n - } \n + return store . get ( key ) ; \n
CHANGES . md \n + # # 2 . 7 . 6 \n + \n + # # # Features \n + * Support Service Authentication \n + \n + # # # Enhancement \n + * Removing the internal JDK API from FileSystemDynamicConfiguration \n + * Refactor the APT test - cases implementation of dubbo - metadata - processor in Java 9 + \n + * Remove feature envy \n + * JsonRpcProtocol support Generalization \n + * Reduce object allocation for ProtocolUtils . serviceKey \n + * Reduce object allocation for ContextFilter . invoke \n + \n + # # # Bugfixes \n + * check 2 . 7 . 6 milestone for details . \n + \n
README . md \n - < dubbo . version > 2 . 7 . 5 < / dubbo . version > \n + < dubbo . version > 2 . 7 . 6 < / dubbo . version > \n
presto - hive \ src \ test \ java \ com \ facebook \ presto \ hive \ TestHiveIntegrationSmokeTest . java \n + @ Test \n + public void testGroupByWithUnion ( ) \n + { \n + assertQuery ( " SELECT \ n " + \n + " linenumber , \ n " + \n + " ' xxx ' \ n " + \n + " FROM \ n " + \n + " ( \ n " + \n + " ( SELECT orderkey , linenumber FROM lineitem ) \ n " + \n + " UNION \ n " + \n + " ( SELECT orderkey , linenumber FROM lineitem ) \ n " + \n + " ) WHERE orderkey = 1 \ n " + \n + " GROUP BY \ n " + \n + " linenumber " ) ; \n + } \n + \n presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ PropertyDerivations . java \n - import static com . facebook . presto . sql . planner . optimizations . AddExchanges . computeIdentityTranslations ; \n - Map < VariableReferenceExpression , VariableReferenceExpression > identities = computeIdentityTranslations ( node . getAssignments ( ) , types ) ; \n + Map < VariableReferenceExpression , VariableReferenceExpression > identities = computeIdentityTranslations ( node . getAssignments ( ) . getMap ( ) , types ) ; \n + private static Map < VariableReferenceExpression , VariableReferenceExpression > computeIdentityTranslations ( Map < VariableReferenceExpression , Expression > assignments , TypeProvider types ) \n + { \n + Map < VariableReferenceExpression , VariableReferenceExpression > inputToOutput = new HashMap < > ( ) ; \n + for ( Map . Entry < VariableReferenceExpression , Expression > assignment : assignments . entrySet ( ) ) { \n + if ( assignment . getValue ( ) instanceof SymbolReference ) { \n + inputToOutput . put ( toVariableReference ( Symbol . from ( assignment . getValue ( ) ) , types ) , assignment . getKey ( ) ) ; \n + } \n + } \n + return inputToOutput ; \n + } \n + \n
presto - main \ src \ main \ java \ com \ facebook \ presto \ sql \ planner \ optimizations \ AddExchanges . java \n - PreferredProperties translatedPreferred = preferredProperties . translate ( variable - > node . getReplicateVariables ( ) . contains ( new Symbol ( variable . getName ( ) ) ) ? Optional . of ( variable ) : Optional . empty ( ) ) ; \n + PreferredProperties translatedPreferred = preferredProperties . translate ( variable - > node . getReplicateVariables ( ) . contains ( variable ) ? Optional . of ( variable ) : Optional . empty ( ) ) ; \n
util \ set _ version . sh \n - if [ [ " $ { version } " = ~ ^ ( . + ) - SNAPSHOT $ ] ] ; then \n - android _ version = " $ { BASH _ REMATCH [ 1 ] } - android - SNAPSHOT " \n - else \n - android _ version = " $ { version } - android " \n - fi \n - mvn versions : set versions : commit - DnewVersion = " $ { version } " \n - mvn versions : set versions : commit - DnewVersion = " $ { android _ version } " \ \n - - f android \n + mvn versions : set versions : commit - DnewVersion = " $ { version } - jre " \n + mvn versions : set versions : commit - DnewVersion = " $ { version } - android " - f android \n
README . md \n - [ guava - snapshot - api - docs ] : http : / / google . github . io / guava / releases / snapshot - jre / api / docs / \n - [ guava - snapshot - api - diffs ] : http : / / google . github . io / guava / releases / snapshot - jre / api / diffs / \n + [ guava - snapshot - api - docs ] : https : / / google . github . io / guava / releases / snapshot - jre / api / docs / \n + [ guava - snapshot - api - diffs ] : https : / / google . github . io / guava / releases / snapshot - jre / api / diffs / \n
command \ src \ main \ java \ com \ iluwatar \ Goblin . java \n - this . setSize ( Size . NORMAL ) ; \n - this . setVisibility ( Visibility . VISIBLE ) ; \n + setSize ( Size . NORMAL ) ; \n + setVisibility ( Visibility . VISIBLE ) ; \n command \ src \ main \ java \ com \ iluwatar \ InvisibilitySpell . java \n - public InvisibilitySpell ( ) { \n - target = null ; \n - } \n - \n command \ src \ main \ java \ com \ iluwatar \ ShrinkSpell . java \n - \n - public ShrinkSpell ( ) { \n - oldSize = null ; \n - target = null ; \n - } \n - \n command \ src \ main \ java \ com \ iluwatar \ Wizard . java \n - this . setSize ( Size . NORMAL ) ; \n - this . setVisibility ( Visibility . VISIBLE ) ; \n - previousSpell = null ; \n + setSize ( Size . NORMAL ) ; \n + setVisibility ( Visibility . VISIBLE ) ; \n
facade \ src \ main \ java \ com \ iluwatar \ DwarvenGoldmineFacade . java \n + import java . util . Collection ; \n - List < DwarvenMineWorker > workers ; \n + private final List < DwarvenMineWorker > workers ; \n - for ( DwarvenMineWorker worker : workers ) { \n - worker . wakeUp ( ) ; \n - worker . goToMine ( ) ; \n - } \n + makeActions ( workers , DwarvenMineWorker . Action . WAKE _ UP , DwarvenMineWorker . Action . GO _ TO _ MINE ) ; \n - for ( DwarvenMineWorker worker : workers ) { \n - worker . work ( ) ; \n - } \n + makeActions ( workers , DwarvenMineWorker . Action . WORK ) ; \n - for ( DwarvenMineWorker worker : workers ) { \n - worker . goHome ( ) ; \n - worker . goToSleep ( ) ; \n - } \n + makeActions ( workers , DwarvenMineWorker . Action . GO _ HOME , DwarvenMineWorker . Action . GO _ TO _ SLEEP ) ; \n + private void makeActions ( Collection < DwarvenMineWorker > workers , DwarvenMineWorker . Action . . . actions ) { \n + for ( DwarvenMineWorker worker : workers ) { \n + worker . action ( actions ) ; \n + } \n + } \n facade \ src \ main \ java \ com \ iluwatar \ DwarvenMineWorker . java \n + private void action ( Action action ) { \n + switch ( action ) { \n + case GO _ TO _ SLEEP : \n + goToSleep ( ) ; \n + break ; \n + case WAKE _ UP : \n + wakeUp ( ) ; \n + break ; \n + case GO _ HOME : \n + goHome ( ) ; \n + break ; \n + case GO _ TO _ MINE : \n + goToMine ( ) ; \n + break ; \n + case WORK : \n + work ( ) ; \n + break ; \n + default : \n + System . out . println ( " Undefined action " ) ; \n + break ; \n + } \n + } \n + \n + public void action ( Action . . . actions ) { \n + for ( Action action : actions ) { \n + action ( action ) ; \n + } \n + } \n + \n + static enum Action { \n + GO _ TO _ SLEEP , WAKE _ UP , GO _ HOME , GO _ TO _ MINE , WORK \n + } \n
language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ Scheduler . scala \n - work { t1 } \n + work { t1 . call ( ) } \n
language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ Observable . scala \n - \n - import rx . lang . scala . Notification \n - import rx . lang . scala . ImplicitFunctionConversions \n - import rx . lang . scala . Observer \n - import rx . lang . scala . Scheduler \n - \n language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ Scheduler . scala \n - import rx . lang . scala . Subscription \n language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ WithFilter . scala \n - import rx . lang . scala . ImplicitFunctionConversions \n - \n language - adaptors \ rxjava - scala \ src \ main \ scala \ rx \ lang \ scala \ subjects \ Subject . scala \n - import rx . lang . scala . Observer \n - \n
documentation \ introduction . md \n - ! [ Example interaction ] ( https : / / raw . githubusercontent . com / google / physical - web / master / documentation / images / example . png ) \n + < img src = " https : / / raw . githubusercontent . com / google / physical - web / master / documentation / images / example . png " width = " 60 % " > \n + # # 5 . 5 Why the web ? \n + The Physical Web’s primary value is to enable a device to place at users’ fingertips anything from a tiny piece of location - based information to a full blown web app . \n + \n + * A dog collar could let you call a service to find the owner . \n + * A bus could tell you its next stop . \n + * A city rent - a - bike service could let you sign up on the spot . \n + * A home appliance could offer an interactive tutorial . \n + * An industrial robot could display diagnostic information . \n + * A mall could offer a map . \n + \n + Each of these examples , taken by itself , is modestly useful . Taken as a whole , however , they imply a vast “long tail” where anything can offer information and utility . Native apps are great for high frequency usage . The web enables people to walk up and use something once with hardly any friction . \n + \n - There are many possible ways to broadcast a URL . This initial version uses Bluetooth Low Energy ( BLE ) as it is so ubiquitous on mobile phones and tablets today . This should not be the only wireless solution but it is the easiest to use at the moment so we can experiment and prototype this system . \n + There are many possible ways to broadcast a URL . This initial version uses Bluetooth Low Energy ( BLE ) as it is so ubiquitous on mobile phones and tablets today . In addition , it is very energy efficient . There are tiny BLE devices that can broadcast for nearly 2 years on a single coin cell . We are using the standard BLE ' ad packet ' to broadcast out this URL so every device that supports bluetooth can receive it . \n
documentation \ technical _ overview . md \n - At this point , the URL is broadcast as plain text so it is not really viable for personal use ( as neighbors could know what devices you have in your home ) However , the advantage of URLs is that there are several potential solutions that would help this . There is nothing stopping a beacon from delivering an obfuscated URL or even a URL that requires login in order to see the information . \n + At this point , the URL is broadcast as plain text so we must be careful recommending this for personal use ( as neighbors could know what devices you have in your home ) However , there are many possible solutions : \n + \n + * Turn down the transmit power so the range is quite small \n + * Use obfuscated URLs \n + * Web - Cookie solutions that block casual users \n + * A rotating key at the end of a dynamic URL \n + * Use mDNS on a wifi network \n + \n + The advantage of URLs is that there are several potential solutions that would help this . We expect the discussion on this topic to continue and more robust solutions to be proposed . \n
src \ tools \ android \ java \ com \ google \ devtools \ build \ android \ r8 \ CompatDexBuilder . java \n - futures . add ( executor . submit ( ( ) - > dexEntry ( input , zipFile , classEntry , executor ) ) ) ; \n + futures . add ( executor . submit ( ( ) - > dexEntry ( zipFile , classEntry , executor ) ) ) ; \n - private DexConsumer dexEntry ( \n - String classpath , ZipFile zipFile , ZipEntry classEntry , ExecutorService executor ) \n + private DexConsumer dexEntry ( ZipFile zipFile , ZipEntry classEntry , ExecutorService executor ) \n - . addClasspathFiles ( Paths . get ( classpath ) ) \n
src \ tools \ android \ java \ com \ google \ devtools \ build \ android \ r8 \ ZipUtils . java \n + import java . util . function . Function ; \n - private static ZipEntry copyEntryMetadata ( ZipEntry entry ) { \n - ZipEntry copy = new ZipEntry ( entry . getName ( ) ) ; \n + private static ZipEntry copyEntryMetadata ( ZipEntry entry , String name ) { \n + ZipEntry copy = new ZipEntry ( name ) ; \n - Path input , ZipOutputStream zipOutputStream , Predicate < String > exclude ) throws IOException { \n + Path input , \n + ZipOutputStream zipOutputStream , \n + Predicate < String > exclude , \n + Function < String , String > nameMapping ) \n + throws IOException { \n - if ( ! exclude . test ( entry . getName ( ) ) ) { \n - zipOutputStream . putNextEntry ( copyEntryMetadata ( entry ) ) ; \n + String name = entry . getName ( ) ; \n + if ( ! exclude . test ( name ) ) { \n + zipOutputStream . putNextEntry ( copyEntryMetadata ( entry , nameMapping . apply ( name ) ) ) ; \n src \ tools \ android \ java \ com \ google \ devtools \ build \ android \ r8 \ desugar \ OutputConsumer . java \n - | | ArchiveProgramResourceProvider . includeClassFileEntries ( entryName ) ) ; \n + | | ArchiveProgramResourceProvider . includeClassFileEntries ( entryName ) , \n + name - > { \n + final String metainfServicesPrefix = " META - INF / services / " ; \n + if ( name . startsWith ( metainfServicesPrefix ) ) { \n + String serviceName = name . substring ( metainfServicesPrefix . length ( ) ) ; \n + if ( serviceName . startsWith ( " java . time . " ) ) { \n + name = \n + metainfServicesPrefix \n + + " j $ . time . " \n + + serviceName . substring ( " java . time . " . length ( ) ) ; \n + } \n + } \n + return name ; \n + } ) ; \n
build . gradle \n - versionName = ' 6 . 1 . 0 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n - versionCodeBase = 61000 / / XYZZM ; M = Module ( wear , tv , mobile ) \n + versionName = ' 6 . 1 . 1 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n + versionCodeBase = 61010 / / XYZZM ; M = Module ( wear , tv , mobile ) \n
build . gradle \n - versionName = ' 6 . 1 . 1 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n - versionCodeBase = 61010 / / XYZZM ; M = Module ( wear , tv , mobile ) \n + versionName = ' 6 . 1 . 2 ' / / X . Y . Z ; X = Major , Y = minor , Z = Patch level \n + versionCodeBase = 61020 / / XYZZM ; M = Module ( wear , tv , mobile ) \n
src \ main \ java \ com \ alibaba \ fastjson \ JSONPath . java \n - return segment . eval ( this , null , context . object ) ; \n + context . object = segment . eval ( this , null , context . object ) ; \n + continue ; \n + } else if ( segment instanceof WildCardSegment ) { \n + eval = true ; \n
src \ main \ java \ com \ alibaba \ fastjson \ serializer \ DateCodec . java \n - if ( object . getClass ( ) = = java . sql . Date . class ) { \n + Class < ? > clazz = object . getClass ( ) ; \n + if ( clazz = = java . sql . Date . class ) { \n + \n + if ( clazz = = java . sql . Time . class ) { \n + long millis = ( ( java . sql . Time ) object ) . getTime ( ) ; \n + if ( millis < 24L * 60L * 60L * 1000L ) { \n + out . writeString ( object . toString ( ) ) ; \n + return ; \n + } \n + } \n - if ( object . getClass ( ) ! = fieldType ) { \n - if ( object . getClass ( ) = = java . util . Date . class ) { \n + if ( clazz ! = fieldType ) { \n + if ( clazz = = java . util . Date . class ) { \n - serializer . write ( object . getClass ( ) . getName ( ) ) ; \n + serializer . write ( clazz . getName ( ) ) ; \n src \ test \ java \ com \ alibaba \ json \ bvt \ issue _ 2100 \ Issue2156 . java \n + \n + public void test _ for _ issue _ time ( ) throws Exception { \n + java . sql . Time date = java . sql . Time . valueOf ( " 12 : 13 : 14 " ) ; \n + String str = JSON . toJSONStringWithDateFormat ( date , JSON . DEFFAULT _ DATE _ FORMAT ) ; \n + assertEquals ( " \ " 12 : 13 : 14 \ " " , str ) ; \n + } \n
AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ model \ AnnotationElementsHolder . java \n + import java . util . LinkedHashSet ; \n - set = new HashSet < > ( ) ; \n + set = new LinkedHashSet < > ( ) ; \n AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ model \ ModelExtractor . java \n + import java . util . LinkedHashSet ; \n - Set < TypeElement > ancestors = new HashSet < > ( ) ; \n + Set < TypeElement > ancestors = new LinkedHashSet < > ( ) ; \n AndroidAnnotations \ androidannotations - core \ androidannotations \ src \ main \ java \ org \ androidannotations \ internal \ process \ ModelValidator . java \n - import java . util . HashSet ; \n + import java . util . LinkedHashSet ; \n - Set < Element > validatedAnnotatedElements = new HashSet < > ( ) ; \n + Set < Element > validatedAnnotatedElements = new LinkedHashSet < > ( ) ; \n
AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ main \ java \ org \ androidannotations \ rest \ spring \ handler \ GetHandler . java \n - restSpringValidatorHelper . doesNotHavePartAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveFieldAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveBodyAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n + restSpringValidatorHelper . doesNotHaveRequestEntityAnnotatedParameters ( ( ExecutableElement ) element , validation ) ; \n AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ main \ java \ org \ androidannotations \ rest \ spring \ handler \ HeadHandler . java \n - restSpringValidatorHelper . doesNotHavePartAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveFieldAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveBodyAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n + restSpringValidatorHelper . doesNotHaveRequestEntityAnnotatedParameters ( ( ExecutableElement ) element , validation ) ; \n AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ main \ java \ org \ androidannotations \ rest \ spring \ handler \ OptionsHandler . java \n - restSpringValidatorHelper . doesNotHavePartAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveFieldAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n - restSpringValidatorHelper . doesNotHaveBodyAnnotatedParameter ( ( ExecutableElement ) element , validation ) ; \n + restSpringValidatorHelper . doesNotHaveRequestEntityAnnotatedParameters ( ( ExecutableElement ) element , validation ) ; \n AndroidAnnotations \ androidannotations - rest - spring \ rest - spring \ src \ main \ java \ org \ androidannotations \ rest \ spring \ helper \ RestSpringValidatorHelper . java \n + public void doesNotHaveRequestEntityAnnotatedParameters ( ExecutableElement element , ElementValidation validation ) { \n + doesNotHavePartAnnotatedParameter ( element , validation ) ; \n + doesNotHaveFieldAnnotatedParameter ( element , validation ) ; \n + doesNotHaveBodyAnnotatedParameter ( element , validation ) ; \n + } \n + \n
handler \ src \ main \ java \ io \ netty \ handler \ ssl \ OpenSsl . java \n - Class . forName ( " io . netty . internal . tcnative . SSLContext " , false , OpenSsl . class . getClassLoader ( ) ) ; \n + Class . forName ( " io . netty . internal . tcnative . SSLContext " , false , \n + PlatformDependent . getClassLoader ( OpenSsl . class ) ) ; \n - NativeLibraryLoader . loadFirstAvailable ( SSLContext . class . getClassLoader ( ) , \n + NativeLibraryLoader . loadFirstAvailable ( PlatformDependent . getClassLoader ( SSLContext . class ) , \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ common \ bytecode \ Wrapper . java \n - c2 . append ( " throw new " + NoSuchPropertyException . class . getName ( ) + " ( \ " Not found property \ \ \ " \ " + $ 2 + \ " \ \ \ " field or setter method in class " + c . getName ( ) + " . \ " ) ; } " ) ; \n + c2 . append ( " throw new " + NoSuchPropertyException . class . getName ( ) + " ( \ " Not found property \ \ \ " \ " + $ 2 + \ " \ \ \ " field or getter method in class " + c . getName ( ) + " . \ " ) ; } " ) ; \n
iphone \ ZXingWidget \ Classes \ resultParsers \ ProductResultParser . mm \n - # include " . . / . . / . . / . . / cpp / core / src / zxing / oned / UPCEReader . h " \n + # include < zxing / oned / UPCEReader . h > \n
iphone \ ZXingWidget \ Classes \ ZXingWidgetController . m \n - kCGBitmapByteOrder32Little | kCGImageAlphaNoneSkipFirts ) ; \n + kCGBitmapByteOrder32Little | kCGImageAlphaNoneSkipFirst ) ; \n
glass - mirror \ pom . xml \n - < version > v1 - rev28 - 1 . 17 . 0 - rc < / version > \n + < version > v1 - rev37 - 1 . 17 . 0 - rc < / version > \n - < version > v2 - rev51 - 1 . 17 . 0 - rc < / version > \n + < version > v2 - rev59 - 1 . 17 . 0 - rc < / version > \n - < version > 1 . 8 < / version > \n + < version > 1 . 9 < / version > \n - < version > 4 . 3 < / version > \n + < version > 4 . 3 . 1 < / version > \n - < version > 15 . 0 < / version > \n pom . xml \n + < dependency > \n + < groupId > com . google . guava < / groupId > \n + < artifactId > guava < / artifactId > \n + < version > 16 . 0 - rc1 < / version > \n + < / dependency > \n zxing . appspot . com \ pom . xml \n - < gwt . version > 2 . 6 . 0 - rc1 < / gwt . version > \n + < gwt . version > 2 . 6 . 0 - rc3 < / gwt . version > \n zxingorg \ pom . xml \n - < version > 15 . 0 < / version > \n
android \ src \ com \ google \ zxing \ client \ android \ share \ LoadPackagesAsyncTask . java \n - final class LoadPackagesAsyncTask extends AsyncTask < Void , Void , List < AppInfo > > { \n + final class LoadPackagesAsyncTask extends AsyncTask < Object , Object , List < AppInfo > > { \n - protected List < AppInfo > doInBackground ( Void . . . objects ) { \n + protected List < AppInfo > doInBackground ( Object . . . objects ) { \n
android \ pom . xml \n - < version > 2 . 3 . 0 - SNAPSHOT < / version > \n + < version > 2 . 3 . 0 < / version > \n - < version > 2 . 3 . 0 - SNAPSHOT < / version > \n + < version > 2 . 3 . 0 < / version > \n androidtest \ pom . xml \n - < version > 2 . 3 . 0 - SNAPSHOT < / version > \n + < version > 2 . 3 . 0 < / version > \n - < version > 2 . 3 . 0 - SNAPSHOT < / version > \n + < version > 2 . 3 . 0 < / version > \n
android \ pom . xml \n - < version > 2 . 3 . 0 < / version > \n + < version > 3 . 0 . 0 - SNAPSHOT < / version > \n - < version > 2 . 3 . 0 < / version > \n + < version > 3 . 0 . 0 - SNAPSHOT < / version > \n androidtest \ pom . xml \n - < version > 2 . 3 . 0 < / version > \n + < version > 3 . 0 . 0 - SNAPSHOT < / version > \n - < version > 2 . 3 . 0 < / version > \n + < version > 3 . 0 . 0 - SNAPSHOT < / version > \n build . xml \n - - > \n - < property name = " version " value = " 2 . 3 . 0 " / > \n + < property name = " version " value = " 3 . 0 . 0 " / > \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ AppleBinary . java \n - ApplePlatform platform = appleConfiguration . getMultiArchPlatform ( platformType ) ; \n + ApplePlatform platform = null ; \n + try { \n + platform = appleConfiguration . getMultiArchPlatform ( platformType ) ; \n + } catch ( IllegalArgumentException e ) { \n + ruleContext . throwWithRuleError ( e ) ; \n + } \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ AppleStaticLibrary . java \n + import com . google . devtools . build . lib . rules . apple . ApplePlatform ; \n - \n + ApplePlatform platform = null ; \n + try { \n + platform = appleConfiguration . getMultiArchPlatform ( platformType ) ; \n + } catch ( IllegalArgumentException e ) { \n + ruleContext . throwWithRuleError ( e ) ; \n + } \n - appleConfiguration . getMultiArchPlatform ( platformType ) ) ; \n + platform ) ; \n
site \ docs \ migrate - xcode . md \n + \n + # # # Troubleshooting \n + \n + Bazel errors can arise when it gets out of sync with the selected Xcode version , \n + like when you apply an update . Here are some things to try if you ' re \n + experiencing errors with Xcode , for example " Xcode version must be specified to \n + use an Apple CROSSTOOL " . \n + \n + * Manually run Xcode and accept any terms and conditions . \n + \n + * Use Xcode select to indicate the correct version , accept the license , and \n + clear Bazel ' s state . \n + ` ` ` \n + sudo xcode - select - s / Applications / Xcode . app / Contents / Developer \n + sudo xcodebuild - license \n + bazel sync - - configure \n + ` ` ` \n + \n + * If this does not work , you may also try running ` bazel clean - - expunge ` . \n + \n + Note : If you ' ve saved your Xcode to a different path , you can use ` xcode - select \n + - s ` to point to that path . \n
transport \ src \ main \ java \ io \ netty \ channel \ socket \ nio \ NioSocketChannel . java \n - setMaxBytesPerGatheringWrite ( getSendBufferSize ( ) < < 1 ) ; \n + setMaxBytesPerGatheringWrite ( newSendBufferSize ) ; \n
transport \ src \ main \ java \ io \ netty \ channel \ SimpleChannelInboundHandler . java \n - * \n - * < h3 > Forward compatibility notice < / h3 > \n - * < p > \n - * Please keep in mind that { @ link # channelRead0 ( ChannelHandlerContext , I ) } will be renamed to \n - * { @ code messageReceived ( ChannelHandlerContext , I ) } in 5 . 0 . \n - * < / p > \n - * < strong > Please keep in mind that this method will be renamed to \n - * { @ code messageReceived ( ChannelHandlerContext , I ) } in 5 . 0 . < / strong > \n - * \n
pom . xml \n - < version > 3 . 6 . 0 < / version > \n + < version > 3 . 8 . 0 < / version > \n
deleted file \n . travis . yml \n - language : java \n - jdk : \n - - oraclejdk7 \n - - openjdk7 \n - branches : \n - only : \n - - master \n - - 3 \n - - 3 . 5 \n - before _ install : ' mvn - version ' \n - install : ' mvn clean install - Pfull - DskipTests ' \n - \n
guava \ src \ com \ google \ common \ cache \ LocalCache . java \n + import static com . google . common . util . concurrent . Futures . transform ; \n - return Futures . transform ( \n + return transform ( \n - } ) ; \n + } , \n + directExecutor ( ) ) ; \n
guava \ src \ com \ google \ common \ util \ concurrent \ AbstractFuture . java \n - * Class , com . google . common . base . Function ) Futures . catching } . \n + * Class , com . google . common . base . Function , java . util . concurrent . Executor ) Futures . catching } . \n guava \ src \ com \ google \ common \ util \ concurrent \ AsyncCallable . java \n - * Futures . FutureCombiner # callAsync ( AsyncCallable ) } . \n + * Futures . FutureCombiner # callAsync ( AsyncCallable , java . util . concurrent . Executor ) } . \n guava \ src \ com \ google \ common \ util \ concurrent \ GwtFuturesCatchingSpecialization . java \n - * the { @ link Futures # catching ( ListenableFuture , Class , com . google . common . base . Function ) \n - * Futures . catching } family of methods . Those versions have slightly different signatures . \n + * the { @ link Futures # catching ( ListenableFuture , Class , com . google . common . base . Function , \n + * java . util . concurrent . Executor ) Futures . catching } family of methods . Those versions have slightly \n + * different signatures . \n
build . gradle \n + from ( ' src / docs / files ' ) { \n + into ' . / files ' \n + } \n src \ docs \ asciidoc \ en \ disruptor . adoc \n - We believe that the Disruptor establishes a new benchmark for high - performance computing and is very well placed to continue to take advantage of current trends in processor and computer design . \n + We believe that the Disruptor establishes a new benchmark for high - performance computing and is very well placed to continue to take advantage of current trends in processor and computer design . \n + \n + View the original PDF of this paper link : . / files / Disruptor - 1 . 0 . pdf [ here ] . \n new file \n src \ docs \ files \ Disruptor - 1 . 0 . pdf \n Binary files / dev / null and b / src / docs / files / Disruptor - 1 . 0 . pdf differ \n
CHANGELOG . md \n - Breaking Changes \n - Minimum Java version now 11 \n + - Removed OSGI bundle fields from ` MANIFEST . MF ` \n - Issue # 323 - ` WorkerPool ` and ` WorkProcessor ` have been removed , no more ` Disruptor : : handleEventsWithWorkerPool ` \n
dubbo - cluster \ src \ main \ java \ org \ apache \ dubbo \ rpc \ cluster \ loadbalance \ RoundRobinLoadBalance . java \n - WeightedRoundRobin weightedRoundRobin = map . get ( identifyString ) ; \n + WeightedRoundRobin weightedRoundRobin = map . get ( identifyString ) ; \n + weightedRoundRobin = map . get ( identifyString ) ; \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ common \ utils \ NetUtils . java \n - try ( ServerSocket ss = new ServerSocket ( i ) ) { \n + try ( ServerSocket ignored = new ServerSocket ( i ) ) { \n - boolean isIpv4 = isValidV4Address ( inetAddress ) ? true : false ; \n + boolean isIpv4 = isValidV4Address ( inetAddress ) ; \n - \n - String [ ] ipAddress = host . split ( splitCharacter ) ; \n + \n - if ( patternAddress . getHostAddress ( ) . equals ( host ) ) { \n - return true ; \n - } else { \n - return false ; \n + return patternAddress . getHostAddress ( ) . equals ( host ) ; \n - } \n + \n + String [ ] ipAddress = host . split ( splitCharacter ) ; \n - String [ ] rangeNumStrs = mask [ i ] . split ( " - " ) ; \n + String [ ] rangeNumStrs = StringUtils . split ( mask [ i ] , ' - ' ) ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ query2 \ common \ CommonQueryOptions . java \n - defaultValue = " false " , \n + defaultValue = " true " , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ query2 \ query \ output \ QueryOptions . java \n + " visited . " ) \n - @ Option ( \n - name = " incompatible _ prefer _ unordered _ output " , \n - defaultValue = " false " , \n - documentationCategory = OptionDocumentationCategory . QUERY , \n - effectTags = { OptionEffectTag . TERMINAL _ OUTPUT } , \n - metadataTags = { \n - OptionMetadataTag . INCOMPATIBLE _ CHANGE , \n - OptionMetadataTag . TRIGGERED _ BY _ ALL _ INCOMPATIBLE _ CHANGES \n - } , \n - help = \n - " If this option is set together with - - order _ output = auto ( default ) and if the output " \n - + " formatter supports streaming output , then the results will be unordered . " ) \n - public boolean preferUnorderedOutput ; \n - \n - help = " If this option is set , sorts unordered output in lexicographical order . " ) \n + help = " If this option is set , sorts - - order _ output = auto output in lexicographical order . " ) \n src \ main \ java \ com \ google \ devtools \ build \ lib \ query2 \ query \ output \ QueryOutputUtils . java \n - | | ( queryOptions . orderOutput = = OrderOutput . AUTO & & queryOptions . preferUnorderedOutput ) ) \n + | | ( queryOptions . orderOutput = = OrderOutput . AUTO \n + & & queryOptions . useLexicographicalUnorderedOutput ) ) \n src \ test \ shell \ integration \ bazel _ query _ test . sh \n - # TODO ( tanzhengwei ) : Remove flags from query when this becomes the default . \n - # Query currently requires the - - incompatible _ prefer _ unordered _ output flag to \n - # switch to graphless . \n - # In addition , - - incompatible _ use _ lexicographical _ unordered _ output is used to \n - # switch sort the graphless output in lexicographical order . \n - bazel query - - incompatible _ prefer _ unordered _ output \ \n - - - incompatible _ use _ lexicographical _ unordered _ output \ \n + # The - - incompatible _ use _ lexicographical _ unordered _ output flag is used to \n + # switch order _ output = auto to use graphless query and output in \n + # lexicographical order . \n + bazel query - - incompatible _ use _ lexicographical _ unordered _ output \ \n
README . md \n - compile ' com . sothree . slidinguppanel : library : 3 . 1 . 0 ' \n + compile ' com . sothree . slidinguppanel : library : 3 . 1 . 1 ' \n demo \ AndroidManifest . xml \n - android : versionCode = " 11 " \n - android : versionName = " 3 . . 0 " > \n + android : versionCode = " 12 " \n + android : versionName = " 3 . 1 . 1 " > \n gradle . properties \n - VERSION _ NAME = 3 . 1 . 0 \n - VERSION _ CODE = 11 \n + VERSION _ NAME = 3 . 1 . 1 \n + VERSION _ CODE = 12 \n library \ AndroidManifest . xml \n - android : versionCode = " 11 " \n - android : versionName = " 3 . 1 . 0 " > \n + android : versionCode = " 12 " \n + android : versionName = " 3 . 1 . 1 " > \n
demo \ res \ values \ styles . xml \n - - > \n - < style name = " AppBaseTheme " parent = " Theme . AppCompat . Light " > \n - < item name = " windowActionBar " > false < / item > \n + < style name = " AppBaseTheme " parent = " Theme . AppCompat . Light . NoActionBar " > \n
dubbo - registry \ dubbo - registry - api \ src \ test \ java \ org \ apache \ dubbo \ registry \ support \ AbstractRegistryFactoryTest . java \n + import java . util . Collection ; \n + @ Test \n + public void testDestroyAllRegistries ( ) { \n + Registry registry1 = registryFactory . getRegistry ( URL . valueOf ( " dubbo : / / " + NetUtils . getLocalHost ( ) + " : 8888 ? group = xxx " ) ) ; \n + Registry registry2 = registryFactory . getRegistry ( URL . valueOf ( " dubbo : / / " + NetUtils . getLocalHost ( ) + " : 9999 ? group = yyy " ) ) ; \n + Collection < Registry > registries = AbstractRegistryFactory . getRegistries ( ) ; \n + Assert . assertTrue ( registries . contains ( registry1 ) ) ; \n + Assert . assertTrue ( registries . contains ( registry2 ) ) ; \n + AbstractRegistryFactory . destroyAll ( ) ; \n + Assert . assertFalse ( registries . contains ( registry1 ) ) ; \n + Assert . assertFalse ( registries . contains ( registry2 ) ) ; \n + } \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ ServiceConfig . java \n + logger . warn ( " Use random available port ( " + port + " ) for protocol " + protocol ) ; \n - logger . warn ( " Use random available port ( " + portToBind + " ) for protocol " + name ) ; \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ DubboShutdownHook . java \n - if ( ! registered . get ( ) & & registered . compareAndSet ( false , true ) ) { \n + if ( registered . compareAndSet ( false , true ) ) { \n - if ( registered . get ( ) & & registered . compareAndSet ( true , false ) ) { \n + if ( registered . compareAndSet ( true , false ) ) { \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ DubboShutdownHook . java \n - if ( ! registered . get ( ) & & registered . compareAndSet ( false , true ) ) { \n + if ( registered . compareAndSet ( false , true ) ) { \n - if ( registered . get ( ) & & registered . compareAndSet ( true , false ) ) { \n + if ( registered . compareAndSet ( true , false ) ) { \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ profiler \ callcounts \ CallcountsModule . java \n - if ( ! outputPath . isEmpty ( ) ) { \n + if ( outputPath ! = null & & ! outputPath . isEmpty ( ) ) { \n + this . outputPath = null ; \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ metrics \ MetricsCollector . java \n - Optional < Long > peakPostGcHeapSize = \n - PostGCMemoryUseRecorder . get ( ) . getPeakPostGCHeapMemoryUsed ( ) ; \n - if ( peakPostGcHeapSize . isPresent ( ) ) { \n - memoryMetrics . setPeakPostGcHeapSize ( peakPostGcHeapSize . get ( ) ) ; \n - } \n + } \n + Optional < Long > peakPostGcHeapSize = PostGCMemoryUseRecorder . get ( ) . getPeakPostGCHeapMemoryUsed ( ) ; \n + if ( peakPostGcHeapSize . isPresent ( ) ) { \n + memoryMetrics . setPeakPostGcHeapSize ( peakPostGcHeapSize . get ( ) ) ; \n
library \ src \ main \ java \ uk \ co \ senab \ photoview \ IPhotoView . java \n - public static final float DEFAULT _ MAX _ SCALE = 3 . 0f ; \n - public static final float DEFAULT _ MID _ SCALE = 1 . 75f ; \n - public static final float DEFAULT _ MIN _ SCALE = 1 . 0f ; \n - public static final int DEFAULT _ ZOOM _ DURATION = 200 ; \n + float DEFAULT _ MAX _ SCALE = 3 . 0f ; \n + float DEFAULT _ MID _ SCALE = 1 . 75f ; \n + float DEFAULT _ MIN _ SCALE = 1 . 0f ; \n + int DEFAULT _ ZOOM _ DURATION = 200 ; \n library \ src \ main \ java \ uk \ co \ senab \ photoview \ PhotoViewAttacher . java \n - public static interface OnMatrixChangedListener { \n + public interface OnMatrixChangedListener { \n - public static interface OnScaleChangeListener { \n + public interface OnScaleChangeListener { \n - public static interface OnPhotoTapListener { \n + public interface OnPhotoTapListener { \n - public static interface OnSingleFlingListener { \n + public interface OnSingleFlingListener { \n library \ src \ main \ java \ uk \ co \ senab \ photoview \ gestures \ GestureDetector . java \n - public boolean onTouchEvent ( MotionEvent ev ) ; \n + boolean onTouchEvent ( MotionEvent ev ) ; \n - public boolean isScaling ( ) ; \n + boolean isScaling ( ) ; \n - public boolean isDragging ( ) ; \n + boolean isDragging ( ) ; \n - public void setOnGestureListener ( OnGestureListener listener ) ; \n + void setOnGestureListener ( OnGestureListener listener ) ; \n library \ src \ main \ java \ uk \ co \ senab \ photoview \ gestures \ OnGestureListener . java \n - public void onDrag ( float dx , float dy ) ; \n + void onDrag ( float dx , float dy ) ; \n - public void onFling ( float startX , float startY , float velocityX , \n - float velocityY ) ; \n + void onFling ( float startX , float startY , float velocityX , \n + float velocityY ) ; \n - public void onScale ( float scaleFactor , float focusX , float focusY ) ; \n + void onScale ( float scaleFactor , float focusX , float focusY ) ; \n
library \ src \ main \ java \ uk \ co \ senab \ photoview \ IPhotoView . java \n - / * \n + / * * \n
build . properties \n - # It builds against GWT 1 . 7 at the moment . \n + # It builds against GWT 2 . 0 . 1 at the moment . \n
new file \n zxing . appspot . com \ README \n + To compile : \n + - - - - - - - - - - \n + Run ' ant ' in this directory . You might get a lot of warnings with \n + [ WARN ] but you should not get any errors . \n + \n + \n + To test : \n + - - - - - - - \n + View the file " build / site / generator / index . html " in any browser . You can do \n + this from the commandline with : \n + \n + firefox build / site / generator / index . html \n + \n + Now you can try out your changes . \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ J2ObjcLibrary . java \n - . addCcCompilationContexts ( \n + . addDirectCcCompilationContexts ( \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ ObjcCommon . java \n + private Iterable < CcCompilationContext > directCCompilationContexts = ImmutableList . of ( ) ; \n + Builder addDirectCcCompilationContexts ( Iterable < CcInfo > ccInfos ) { \n + / / TODO ( waltl ) : Support direct CcCompilationContexts in CcCompilationHelper . \n + Preconditions . checkState ( \n + this . purpose . equals ( Purpose . LINK _ ONLY ) , \n + " direct CcCompilationContext is only supported for LINK _ ONLY purpose " ) ; \n + this . directCCompilationContexts = \n + Iterables . concat ( this . directCCompilationContexts , getCcCompilationContexts ( ccInfos ) ) ; \n + return this ; \n + } \n + \n + . addDirectCcCompilationContexts ( directCCompilationContexts ) \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ ObjcCompilationContext . java \n + private final ImmutableList < CcCompilationContext > directCcCompilationContexts ; \n + Iterable < CcCompilationContext > directCcCompilationContexts , \n + this . directCcCompilationContexts = ImmutableList . copyOf ( directCcCompilationContexts ) ; \n + public ImmutableList < CcCompilationContext > getDirectCcCompilationContexts ( ) { \n + return directCcCompilationContexts ; \n + } \n + \n - . mergeDependentCcCompilationContexts ( getCcCompilationContexts ( ) ) ; \n + . mergeDependentCcCompilationContexts ( \n + getDirectCcCompilationContexts ( ) , getCcCompilationContexts ( ) ) ; \n + private final List < CcCompilationContext > directCcCompilationContexts = new ArrayList < > ( ) ; \n + public Builder addDirectCcCompilationContexts ( \n + Iterable < CcCompilationContext > ccCompilationContexts ) { \n + Iterables . addAll ( this . directCcCompilationContexts , ccCompilationContexts ) ; \n + return this ; \n + } \n + \n + directCcCompilationContexts , \n
src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ CompilationSupport . java \n + ImmutableSet . Builder < String > disableFeatures = ImmutableSet . < String > builder ( ) ; \n + / / TODO ( b / 159096411 ) : Remove once supports _ header _ parsing is removed from the cc _ toolchain rule . \n + if ( disableParseHeaders | | ! ccToolchain . supportsHeaderParsing ( ) ) { \n + disableFeatures . add ( CppRuleClasses . PARSE _ HEADERS ) ; \n + } \n + if ( disableLayeringCheck ) { \n + disableFeatures . add ( CppRuleClasses . LAYERING _ CHECK ) ; \n + } \n + \n + ImmutableSet < String > disableFeaturesSet = disableFeatures . build ( ) ; \n - if ( ! ccToolchain . supportsHeaderParsing ( ) ) { \n - / / TODO ( b / 159096411 ) : Remove once supports _ header _ parsing has been removed from the \n - / / cc _ toolchain rule . \n + if ( ! disableFeaturesSet . isEmpty ( ) ) { \n - . filter ( feature - > ! feature . equals ( CppRuleClasses . PARSE _ HEADERS ) ) \n + . filter ( feature - > ! disableFeaturesSet . contains ( feature ) ) \n + private final boolean disableLayeringCheck ; \n + private final boolean disableParseHeaders ; \n - boolean usePch ) \n + boolean usePch , \n + boolean disableLayeringCheck , \n + boolean disableParseHeaders ) \n + this . disableLayeringCheck = disableLayeringCheck ; \n + this . disableParseHeaders = disableParseHeaders ; \n + private boolean disableLayeringCheck = false ; \n + private boolean disableParseHeaders = false ; \n + / * * Sets that this { @ link CompilationSupport } will disable layering check . * / \n + public Builder disableLayeringCheck ( ) { \n + this . disableLayeringCheck = true ; \n + return this ; \n + } \n + \n + / * * Sets that this { @ link CompilationSupport } will disable parse headers . * / \n + public Builder disableParseHeaders ( ) { \n + this . disableParseHeaders = true ; \n + return this ; \n + } \n + \n - usePch ) ; \n + usePch , \n + disableLayeringCheck , \n + disableParseHeaders ) ; \n src \ main \ java \ com \ google \ devtools \ build \ lib \ rules \ objc \ J2ObjcAspect . java \n + . disableLayeringCheck ( ) \n + . disableParseHeaders ( ) \n
src \ main \ java \ com \ alibaba \ fastjson \ serializer \ SerializeWriter . java \n - / / String floatText = RyuFloat . toString ( value ) ; \n - / / write ( floatText ) ; \n
src \ main \ java \ com \ alibaba \ fastjson \ serializer \ IntegerCodec . java \n - BigDecimal decimalValue = lexer . decimalValue ( ) ; \n + Number number = lexer . decimalValue ( false ) ; \n + intObj = number . intValue ( ) ; \n - intObj = Integer . valueOf ( decimalValue . intValue ( ) ) ; \n src \ main \ java \ com \ alibaba \ fastjson \ serializer \ LongCodec . java \n + } else if ( token = = JSONToken . LITERAL _ FLOAT ) { \n + Number number = lexer . decimalValue ( false ) ; \n + longObject = number . longValue ( ) ; \n + lexer . nextToken ( JSONToken . COMMA ) ; \n
dubbo - cluster \ src \ main \ java \ org \ apache \ dubbo \ rpc \ cluster \ configurator \ parser \ ConfigParser . java \n - if ( apps ! = null & & apps . size ( ) > 0 ) { \n + if ( CollectionUtils . isNotEmpty ( apps ) ) { \n - if ( services . size ( ) = = 0 ) { \n + if ( services . isEmpty ( ) ) { \n - if ( addresses . size ( ) = = 0 ) { \n + if ( addresses . isEmpty ( ) ) { \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ common \ utils \ MethodUtils . java \n + / * * \n + * Miscellaneous method utility methods . \n + * Mainly for internal use within the framework . \n + * \n + * @ author LiZhenNet \n + * @ since 2 . 7 . 2 \n + * / \n + / * * \n + * Return { @ code true } if the provided method is a set method . \n + * Otherwise , return { @ code false } . \n + * \n + * @ param method the method to check \n + * @ return whether the given method is setter method \n + * / \n + / * * \n + * Return { @ code true } if the provided method is a get method . \n + * Otherwise , return { @ code false } . \n + * \n + * @ param method the method to check \n + * @ return whether the given method is getter method \n + * / \n + / * * \n + * Return { @ code true } If this method is a meta method . \n + * Otherwise , return { @ code false } . \n + * \n + * @ param method the method to check \n + * @ return whether the given method is meta method \n + * / \n + / * * \n + * Check if the method is a deprecated method . The standard is whether the { @ link java . lang . Deprecated } annotation is declared on the class . \n + * Return { @ code true } if this annotation is present . \n + * Otherwise , return { @ code false } . \n + * \n + * @ param method the method to check \n + * @ return whether the given method is deprecated method \n + * / \n
src \ test \ java \ spark \ examples \ books \ Books . java \n - import spark . Request ; \n - import spark . Response ; \n - import spark . Route ; \n - \n - private static Map < String , Book > books = new HashMap < String , Book > ( ) ; \n + public static Map < String , Book > books = new HashMap < String , Book > ( ) ; \n
src \ test \ java \ spark \ BooksIntegrationTest . java \n + import static spark . Spark . after ; \n + import static spark . Spark . before ; \n - Spark . before ( new Filter ( ) { \n - @ Override \n - public void handle ( Request request , Response response ) { \n - response . header ( " FOZ " , " BAZ " ) ; \n - } \n + before ( ( request , response ) - > { \n + response . header ( " FOZ " , " BAZ " ) ; \n - Spark . after ( new Filter ( ) { \n - @ Override \n - public void handle ( Request request , Response response ) { \n - response . header ( " FOO " , " BAR " ) ; \n - } \n + after ( ( request , response ) - > { \n + response . header ( " FOO " , " BAR " ) ; \n + \n
AndroidAnnotations \ androidannotations - api \ pom . xml \n - < version > 4 . 1 . 1 . 4 < / version > \n + < version > 1 . 6 _ r2 < / version > \n AndroidAnnotations \ androidannotations - api \ src \ main \ java \ org \ androidannotations \ annotations \ EFragment . java \n - * Should be used on { @ link android . app . Fragment } or \n + * Should be used on android . app . Fragment or \n AndroidAnnotations \ androidannotations - api \ src \ main \ java \ org \ androidannotations \ annotations \ FragmentById . java \n - * Use it on { @ link android . app . Fragment } or \n + * Use it on android . app . Fragment or \n AndroidAnnotations \ androidannotations - api \ src \ main \ java \ org \ androidannotations \ annotations \ FragmentByTag . java \n - * Use it on { @ link android . app . Fragment } or \n + * Use it on android . app . Fragment or \n AndroidAnnotations \ androidannotations - api \ src \ main \ java \ org \ androidannotations \ annotations \ OptionsMenuItem . java \n - * Use it on { @ link android . app . Fragment } or \n + * Use it on android . app . Fragment or \n
AndroidAnnotations \ functional - test - 1 - 5 - tests \ src \ test \ java \ org \ androidannotations \ test15 \ prefs \ PrefsActivityTest . java \n - import static org . fest . assertions . Assertions . assertThat ; \n - \n - import java . util . Arrays ; \n - import java . util . Set ; \n - import java . util . TreeSet ; \n - \n + import android . content . SharedPreferences ; \n - import android . content . SharedPreferences ; \n + import java . util . Arrays ; \n + import java . util . Set ; \n + import java . util . TreeSet ; \n + \n + import static org . fest . assertions . Assertions . assertThat ; \n + \n + @ Test \n + public void setStringInIntFieldAndGetInt ( ) { \n + sharedPref . edit ( ) . putString ( " age " , " 18 " ) . commit ( ) ; \n + assertThat ( somePrefs . age ( ) . get ( ) ) . isEqualTo ( 18 ) ; \n + } \n + \n + @ Test \n + public void setStringInFloatFieldAndGetFloat ( ) { \n + sharedPref . edit ( ) . putString ( " ageFloat " , " 6 . 1 " ) . commit ( ) ; \n + assertThat ( somePrefs . ageFloat ( ) . get ( ) ) . isEqualTo ( 6 . 1f ) ; \n + } \n + \n + @ Test \n + public void setStringInLongFieldAndGetLong ( ) { \n + sharedPref . edit ( ) . putString ( " ageLong " , " 90211105578124 " ) . commit ( ) ; \n + assertThat ( somePrefs . ageLong ( ) . get ( ) ) . isEqualTo ( 90211105578124l ) ; \n + } \n
dubbo - registry \ dubbo - registry - api \ src \ main \ java \ org \ apache \ dubbo \ registry \ support \ AbstractRegistry . java \n + \n + / / do not forget remove notified \n + notified . remove ( url ) ; \n
dubbo - filter \ dubbo - filter - cache \ src \ main \ java \ org \ apache \ dubbo \ cache \ filter \ CacheFilter . java \n - * < li > lur < / li > \n + * < li > lru < / li > \n
dubbo - common \ src \ main \ java \ org \ apache \ dubbo \ common \ utils \ MethodUtils . java \n + \n + public static boolean isMetaMethod ( Method method ) { \n + String name = method . getName ( ) ; \n + if ( ! ( name . startsWith ( " get " ) | | name . startsWith ( " is " ) ) ) { \n + return false ; \n + } \n + if ( " get " . equals ( name ) ) { \n + return false ; \n + } \n + if ( " getClass " . equals ( name ) ) { \n + return false ; \n + } \n + if ( ! Modifier . isPublic ( method . getModifiers ( ) ) ) { \n + return false ; \n + } \n + if ( method . getParameterTypes ( ) . length ! = 0 ) { \n + return false ; \n + } \n + if ( ! ClassUtils . isPrimitive ( method . getReturnType ( ) ) ) { \n + return false ; \n + } \n + return true ; \n + } \n dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractConfig . java \n - if ( isMetaMethod ( method ) ) { \n + if ( MethodUtils . isMetaMethod ( method ) ) { \n - private boolean isMetaMethod ( Method method ) { \n - String name = method . getName ( ) ; \n - if ( ! ( name . startsWith ( " get " ) | | name . startsWith ( " is " ) ) ) { \n - return false ; \n - } \n - if ( " get " . equals ( name ) ) { \n - return false ; \n - } \n - if ( " getClass " . equals ( name ) ) { \n - return false ; \n - } \n - if ( ! Modifier . isPublic ( method . getModifiers ( ) ) ) { \n - return false ; \n - } \n - if ( method . getParameterTypes ( ) . length ! = 0 ) { \n - return false ; \n - } \n - if ( ! ClassUtils . isPrimitive ( method . getReturnType ( ) ) ) { \n - return false ; \n - } \n - return true ; \n - } \n
dubbo - config \ dubbo - config - api \ src \ main \ java \ org \ apache \ dubbo \ config \ AbstractConfig . java \n - if ( MethodUtils . isGetter ( method1 ) & & ClassUtils . isPrimitive ( method1 . getReturnType ( ) ) ) { \n + if ( MethodUtils . isGetter ( method1 ) ) { \n
src \ main \ java \ rx \ internal \ operators \ OperatorMap . java \n + import rx . exceptions . Exceptions ; \n + Exceptions . throwIfFatal ( e ) ; \n src \ test \ java \ rx \ internal \ operators \ OperatorMapTest . java \n + \n + @ Test ( expected = OnErrorNotImplementedException . class ) \n + public void testShouldNotSwallowOnErrorNotImplementedException ( ) { \n + Observable . just ( " a " , " b " ) . flatMap ( new Func1 < String , Observable < String > > ( ) { \n + @ Override \n + public Observable < String > call ( String s ) { \n + return Observable . just ( s + " 1 " , s + " 2 " ) ; \n + } \n + } ) . flatMap ( new Func1 < String , Observable < String > > ( ) { \n + @ Override \n + public Observable < String > call ( String s ) { \n + return Observable . error ( new Exception ( " test " ) ) ; \n + } \n + } ) . forEach ( new Action1 < String > ( ) { \n + @ Override \n + public void call ( String s ) { \n + System . out . println ( s ) ; \n + } \n + } ) ; \n + } \n
src \ main \ java \ rx \ internal \ operators \ OnSubscribeCache . java \n - source . unsafeSubscribe ( Subscribers . from ( cache ) ) ; \n + source . subscribe ( cache ) ; \n - * Note that we will never unsubscribe from ' source ' as we want to receive and cache all of its values . \n + * Note that we will never unsubscribe from ' source ' unless we receive ` onCompleted ` or ` onError ` , \n + * as we want to receive and cache all of its values . \n src \ test \ java \ rx \ internal \ operators \ OnSubscribeCacheTest . java \n + import static org . mockito . Mockito . mock ; \n + import static org . mockito . Mockito . times ; \n + import static org . mockito . Mockito . verify ; \n + import rx . functions . Action0 ; \n - import rx . internal . operators . OnSubscribeCache ; \n + \n + @ Test \n + public void testUnsubscribeSource ( ) { \n + Action0 unsubscribe = mock ( Action0 . class ) ; \n + Observable < Integer > o = Observable . just ( 1 ) . doOnUnsubscribe ( unsubscribe ) . cache ( ) ; \n + o . subscribe ( ) ; \n + o . subscribe ( ) ; \n + o . subscribe ( ) ; \n + verify ( unsubscribe , times ( 1 ) ) . call ( ) ; \n + } \n
spring - aop \ src \ main \ java \ org \ springframework \ aop \ framework \ JdkDynamicAopProxy . java \n - * Copyright 2002 - 2019 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n + * @ author Sergey Tsypanov \n + private final Class < ? > [ ] proxiedInterfaces ; \n + \n + this . proxiedInterfaces = AopProxyUtils . completeProxiedInterfaces ( this . advised , true ) ; \n + findDefinedEqualsAndHashCodeMethods ( this . proxiedInterfaces ) ; \n - Class < ? > [ ] proxiedInterfaces = AopProxyUtils . completeProxiedInterfaces ( this . advised , true ) ; \n - findDefinedEqualsAndHashCodeMethods ( proxiedInterfaces ) ; \n - return Proxy . newProxyInstance ( classLoader , proxiedInterfaces , this ) ; \n + return Proxy . newProxyInstance ( classLoader , this . proxiedInterfaces , this ) ; \n spring - core \ src \ main \ java \ org \ springframework \ util \ ReflectionUtils . java \n - if ( method = = null | | ! method . getName ( ) . equals ( " equals " ) ) { \n + if ( method = = null ) { \n + if ( ! method . getName ( ) . equals ( " equals " ) ) { \n + return false ; \n + } \n - return ( method ! = null & & method . getName ( ) . equals ( " hashCode " ) & & method . getParameterCount ( ) = = 0 ) ; \n + return method ! = null & & method . getParameterCount ( ) = = 0 & & method . getName ( ) . equals ( " hashCode " ) ; \n - return ( method ! = null & & method . getName ( ) . equals ( " toString " ) & & method . getParameterCount ( ) = = 0 ) ; \n + return ( method ! = null & & method . getParameterCount ( ) = = 0 & & method . getName ( ) . equals ( " toString " ) ) ; \n
spring - aop \ src \ main \ java \ org \ springframework \ aop \ aspectj \ MethodInvocationProceedingJoinPoint . java \n - if ( this . parameterNames = = null ) { \n - this . parameterNames = parameterNameDiscoverer . getParameterNames ( getMethod ( ) ) ; \n + String [ ] parameterNames = this . parameterNames ; \n + if ( parameterNames = = null ) { \n + this . parameterNames = parameterNames = parameterNameDiscoverer . getParameterNames ( getMethod ( ) ) ; \n - return this . parameterNames ; \n + return parameterNames ; \n spring - beans \ src \ main \ java \ org \ springframework \ beans \ factory \ annotation \ AutowiredAnnotationBeanPostProcessor . java \n + Object cachedFieldValue = null ; \n - this . cachedFieldValue = desc ; \n + cachedFieldValue = desc ; \n - this . cachedFieldValue = new ShortcutDependencyDescriptor ( \n + cachedFieldValue = new ShortcutDependencyDescriptor ( \n - else { \n - this . cachedFieldValue = null ; \n - } \n + this . cachedFieldValue = cachedFieldValue ; \n spring - context \ src \ main \ java \ org \ springframework \ cache \ support \ AbstractCacheManager . java \n - Set < String > cacheNames = new LinkedHashSet < > ( this . cacheNames . size ( ) + 1 ) ; \n - cacheNames . addAll ( this . cacheNames ) ; \n + Set < String > cacheNames = new LinkedHashSet < > ( this . cacheNames ) ; \n
README . md \n - [ Download Demo ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 0 . 0 / AndroidSwipeLayout - Demo - 1 . 0 . 1 - snapshot . apk ) \n + [ Download Demo ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 1 . 3 / AndroidSwipeLayout - v1 . 1 . 3 . apk ) \n - Before I made this , I actually found some libraries ( eg . [ SwipeListView ] ( https : / / github . com / 47deg / android - swipelistview ) ) that helps developers to integrate swiping with your UI component . But they have too much limitation , only in ListView , or some other limitations . \n + Before I made this , I actually found some libraries ( eg . [ SwipeListView ] ( https : / / github . com / 47deg / android - swipelistview ) ) that helps developers to integrate swiping with your UI component . But it only works in ` ListView ` . What a pity . \n - compile " com . daimajia . swipelayout : library : 1 . 1 . 1 @ aar " \n + compile " com . daimajia . swipelayout : library : 1 . 1 . 3 @ aar " \n - < version > 1 . 1 . 1 < / version > \n + < version > 1 . 1 . 3 < / version > \n
README . md \n - [ Download Demo ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 1 . 4 / AndroidSwipeLayout - 1 . 1 . 4 . apk ) \n + [ Download Demo ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 1 . 6 / AndroidSwipeLayout - v1 . 1 . 6 . apk ) \n - compile " com . daimajia . swipelayout : library : 1 . 1 . 5 @ aar " \n + compile " com . daimajia . swipelayout : library : 1 . 1 . 6 @ aar " \n - < version > 1 . 1 . 5 < / version > \n + < version > 1 . 1 . 6 < / version > \n - [ AndroidSwipeLayout - v1 . 1 . 5 . jar ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 1 . 5 / AndroidSwipeLayout - v1 . 1 . 5 . jar ) \n + [ AndroidSwipeLayout - v1 . 1 . 6 . jar ] ( https : / / github . com / daimajia / AndroidSwipeLayout / releases / download / v1 . 1 . 6 / AndroidSwipeLayout - v1 . 1 . 6 . jar ) \n
common \ src \ main \ java \ io \ netty \ util \ Recycler . java \n + if ( size < = 0 ) { \n + / / double check , avoid races \n + return null ; \n + } \n
codec \ src \ main \ java \ io \ netty \ handler \ codec \ compression \ LzfEncoder . java \n + \n + @ Override \n + public void handlerRemoved ( ChannelHandlerContext ctx ) throws Exception { \n + encoder . close ( ) ; \n + super . handlerRemoved ( ctx ) ; \n + } \n
dubbo - config \ dubbo - config - api \ src \ main \ resources \ META - INF \ dubbo \ internal \ org . apache . dubbo . event . EventListener \n - service - mapping = org . apache . dubbo . config . event . listener . ServiceNameMappingListener \n - config - logging = org . apache . dubbo . config . event . listener . LoggingEventListener \n + config - logging = org . apache . dubbo . config . event . listener . LoggingEventListener \n dubbo - config \ dubbo - config - api \ src \ main \ resources \ META - INF \ dubbo \ internal \ org . apache . dubbo . metadata . MetadataServiceExporter \n - remote = org . apache . dubbo . config . metadata . RemoteMetadataServiceExporter \n
dubbo - config \ dubbo - config - spring \ src \ main \ java \ org \ apache \ dubbo \ config \ spring \ context \ annotation \ EnableDubboConfig . java \n + import com . alibaba . spring . beans . factory . annotation . EnableConfigurationBeanBinding ; \n - * As a convenient and multiple { @ link EnableDubboConfigBinding } \n + * As a convenient and multiple { @ link EnableConfigurationBeanBinding } \n - * @ see EnableDubboConfigBinding \n + * @ see EnableConfigurationBeanBinding \n
buildSrc \ README . md \n - The ` org . springframework . build . compile ` plubin applies the Java compiler conventions to the build . \n + The ` org . springframework . build . compile ` plugin applies the Java compiler conventions to the build . \n
spring - jms \ src \ main \ java \ org \ springframework \ jms \ annotation \ JmsBootstrapConfiguration . java \n - * Copyright 2002 - 2015 the original author or authors . \n + * Copyright 2002 - 2020 the original author or authors . \n - @ Configuration \n + @ Configuration ( proxyBeanMethods = false ) \n
src \ main \ java \ com \ alibaba \ fastjson \ JSONObject . java \n - import java . util . Collection ; \n - import java . util . Date ; \n - import java . util . HashMap ; \n - import java . util . LinkedHashMap ; \n - import java . util . Map ; \n - import java . util . Set ; \n - import java . util . List ; \n + import java . util . * ; \n - if ( ( ! result ) & & key instanceof Number ) { \n - result = map . containsKey ( key . toString ( ) ) ; \n + if ( ! result ) { \n + if ( key instanceof Number \n + | | key instanceof Character \n + | | key instanceof Boolean \n + | | key instanceof UUID \n + ) { \n + result = map . containsKey ( key . toString ( ) ) ; \n + } \n new file \n src \ test \ java \ com \ alibaba \ json \ bvt \ issue _ 3300 \ Issue3352 . java \n + package com . alibaba . json . bvt . issue _ 3300 ; \n + \n + import com . alibaba . fastjson . JSONObject ; \n + import junit . framework . TestCase ; \n + \n + import java . util . Map ; \n + import java . util . UUID ; \n + \n + public class Issue3352 extends TestCase { \n + public void test _ for _ issue ( ) throws Exception { \n + UUID uuid = UUID . randomUUID ( ) ; \n + \n + JSONObject object = new JSONObject ( ) ; \n + Map map = object . getInnerMap ( ) ; \n + map . put ( " 1 " , " 1 " ) ; \n + map . put ( " A " , " A " ) ; \n + map . put ( " true " , " true " ) ; \n + map . put ( uuid . toString ( ) , uuid ) ; \n + \n + assertTrue ( object . containsKey ( 1 ) ) ; \n + assertTrue ( object . containsKey ( " 1 " ) ) ; \n + assertTrue ( object . containsKey ( ' A ' ) ) ; \n + assertTrue ( object . containsKey ( " A " ) ) ; \n + assertTrue ( object . containsKey ( true ) ) ; \n + assertTrue ( object . containsKey ( " true " ) ) ; \n + assertTrue ( object . containsKey ( uuid ) ) ; \n + assertTrue ( object . containsKey ( uuid . toString ( ) ) ) ; \n + } \n + } \n
src \ main \ java \ com \ alibaba \ fastjson \ JSONObject . java \n - if ( val = = null & & key instanceof Number ) { \n - val = map . get ( key . toString ( ) ) ; \n + if ( val = = null ) { \n + if ( key instanceof Number \n + | | key instanceof Character \n + | | key instanceof Boolean \n + | | key instanceof UUID \n + ) { \n + val = map . get ( key . toString ( ) ) ; \n + } \n new file \n src \ test \ java \ com \ alibaba \ json \ bvt \ issue _ 3300 \ Issue3356 . java \n + package com . alibaba . json . bvt . issue _ 3300 ; \n + \n + import com . alibaba . fastjson . JSONObject ; \n + import junit . framework . TestCase ; \n + \n + import java . util . UUID ; \n + \n + public class Issue3356 extends TestCase { \n + public void test _ for _ issue ( ) throws Exception { \n + UUID uuid = UUID . randomUUID ( ) ; \n + \n + JSONObject object = new JSONObject ( ) ; \n + object . put ( " 1 " , " 1 " ) ; \n + object . put ( uuid . toString ( ) , uuid . toString ( ) ) ; \n + object . put ( " A " , " A " ) ; \n + object . put ( " true " , " true " ) ; \n + assertEquals ( " 1 " , object . get ( 1 ) ) ; \n + assertEquals ( " true " , object . get ( true ) ) ; \n + assertEquals ( " A " , object . get ( ' A ' ) ) ; \n + } \n + } \n
